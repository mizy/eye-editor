!function(e){function t(t){for(var a,r,l=t[0],s=t[1],c=t[2],d=0,p=[];d<l.length;d++)r=l[d],i[r]&&p.push(i[r][0]),i[r]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(e[a]=s[a]);for(u&&u(t);p.length;)p.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],a=!0,l=1;l<n.length;l++){var s=n[l];0!==i[s]&&(a=!1)}a&&(o.splice(t--,1),e=r(r.s=n[0]))}return e}var a={},i={1:0},o=[];function r(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=a,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="";var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=t,l=l.slice();for(var c=0;c<l.length;c++)t(l[c]);var u=s;o.push([247,0]),n()}({216:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=u(n(1)),r=u(n(44)),l=u(n(27)),s=u(n(217)),c=u(n(15));function u(e){return e&&e.__esModule?e:{default:e}}function d(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var p=r.default.Item,f=s.default.Group,h=[{value:"single",label:"单值"},{value:"area",label:"区间"},{value:"multi",label:"离散"}],m=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=d(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={now:"",typeValue:"single",speeds:[],unknow:!1},a.props={label:"速度(m/s):",speed:null,onChange:function(){}},d(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),i(t,[{key:"componentDidMount",value:function(){this.formatProps(this.props)}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){this.formatProps(e)}},{key:"formatProps",value:function(e){var t=e.speed,n=e.unknow;this.setState({unknow:n});var i="";Array.isArray(t)?(i="multi",this.setState({speeds:t})):"object"===(void 0===t?"undefined":a(t))?(i="area",this.setState({maxSpeed:t.max,minSpeed:t.min})):(i="single",this.setState({speed:t})),this.setState({defaultSpeeds:e.defaultSpeeds,typeValue:i})}},{key:"changeState",value:function(e){this.setState(e)}},{key:"clear",value:function(){this.setState({speed:"",speeds:[],maxSpeed:"",minSpeed:""})}},{key:"onTypeChange",value:function(e){var t=void 0;"single"===e?t=this.state.speed:"multi"===e?this.state.speeds.length>0?t=this.state.speeds:this.props.defaultSpeeds&&(t=this.props.defaultSpeeds):void 0!==this.state.minSpeed&&void 0!==this.state.maxSpeed&&(t={min:this.state.minSpeed,max:this.state.maxSpeed}),this.setState({typeValue:e}),void 0!==t&&this.props.onChange&&this.props.onChange(t,this.state.typeValue)}},{key:"changeSingle",value:function(e){this.setState({speed:e}),this.props.onChange&&this.props.onChange(e,this.state.typeValue)}},{key:"changeAreaMin",value:function(e){this.setState({minSpeed:e}),this.props.onChange&&this.props.onChange({min:e,max:this.state.maxSpeed},this.state.typeValue)}},{key:"changeAreaMax",value:function(e){this.setState({maxSpeed:e}),this.props.onChange&&this.props.onChange({min:this.state.minSpeed,max:e},this.state.typeValue)}},{key:"renderSpeed",value:function(){var e=this,t=this.props.label||"速度(m/s):";if("single"===this.state.typeValue)return o.default.createElement(p,{label:t+"只能输入数值类型"},o.default.createElement(l.default,{name:"speed",style:{width:"80px"},htmlType:"number",min:0,max:50,readOnly:this.state.unknow,value:this.state.unknow?0:this.state.speed,onChange:this.changeSingle.bind(this)}));if("area"===this.state.typeValue)return o.default.createElement(p,{label:t+"只能输入数值类型"},o.default.createElement(l.default,{name:"minSpeed",style:{width:"60px"},min:0,max:50,htmlType:"number",value:this.state.minSpeed||0,onChange:this.changeAreaMin.bind(this)}),o.default.createElement(l.default,{name:"maxSpeed",min:0,max:50,style:{width:"60px",marginLeft:"10px"},htmlType:"number",value:this.state.maxSpeed||0,onChange:this.changeAreaMax.bind(this)}));var n=this.state.speeds,a=[],i=function(t){a.push(o.default.createElement("div",{className:"speed-item",key:t},o.default.createElement(l.default,{style:{width:"80px",marginRight:"5px",marginBottom:"5px"},min:0,max:50,htmlType:"number",onChange:function(n,a){e.changeSpeeds(n,t)},name:"max_speed",value:n[t]}),o.default.createElement(c.default,{size:"small",onClick:function(n){e.deleteSpeeds(t)}},"-")))};for(var r in n)i(r);return o.default.createElement(p,{label:t},o.default.createElement(c.default,{size:"small",type:"primary",onClick:function(t){return e.addSpeeds()}},"+"),a)}},{key:"changeSpeeds",value:function(e,t){var n=this.state.speeds;n[t]=e,this.setState({speeds:n}),this.props.onChange&&this.props.onChange(n,this.state.typeValue)}},{key:"addSpeeds",value:function(){var e=this.state.speeds;e.push(0),this.setState({speeds:e}),this.props.onChange&&this.props.onChange(e,this.state.typeValue)}},{key:"deleteSpeeds",value:function(e){var t=this.state.speeds;t.splice(e,1),this.setState({speeds:t})}},{key:"render",value:function(){return o.default.createElement("div",null,o.default.createElement(p,{label:"数值类型:"},o.default.createElement(f,{dataSource:h,value:this.state.unknow?"single":this.state.typeValue,disabled:this.state.unknow,onChange:this.onTypeChange.bind(this)})),this.renderSpeed())}}]),t}();t.default=m},242:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={state:{goal:{},movement:{},role:{},agent:{}},convert2yaml:function(){var e=JSON.parse(JSON.stringify(window.globalState.schema.objects)),t=JSON.parse(JSON.stringify(window.globalState.schema.triggers));for(var n in this.yaml=[],e){var a=e[n];a=this.makeYamlAgent(a),this.yaml.push({agent:a})}for(var i in t){var o=this.makeYamlTrigger(t[i]);this.yaml.push({trigger:o})}return this.convertYamlAgentSource(),this.yaml},convertYamlAgentSource:function(){var e=JSON.parse(JSON.stringify(window.globalState.schema.agentSources||{}));for(var t in e){var n=this.makeYamlAgentSource(e[t]);this.yaml.push({agentSource:n})}},makeYamlAgentSource:function(e){var t=this,n=[],a=[];return e.initareas.map(function(e){n.push(e.name),t.makeYamlTraffic(e)}),e.goalareas.map(function(e){a.push(e.name),t.makeYamlTraffic(e)}),e.initareas=n,e.goalareas=a,e},makeYamlTraffic:function(e){var t=this,n=[];e.points.map(function(e){n.push(t.transformPosToLoc(e))}),e.points=n,this.yaml.push({traffic:e})},makeYamlTrigger:function(e){var t=this,n=[];return e.points.map(function(e){n.push(t.transformPosToLoc(e))}),e.points=n,e},makeYamlAgent:function(e){var t=this;"single"===e.startPointType?e.initlocation=this.transformPosToLoc(e.initlocation[0]):"area"===e.startPointType?e.initlocation={min:this.transformPosToLoc(e.initlocation[0]),max:this.transformPosToLoc(e.initlocation[1])}:e.initlocation.map(function(e){return t.transformPosToLoc(e)});var n=e.role,a=e.goal;return a.name="goal_"+(new Date).getTime()*Math.random(),e.role=n.name,e.goal=a.name,e.numbers=parseInt(e.numbers||1),isNaN(e.numbers)&&(e.numbers=1),this.makeYamlRole(n),this.makeYamlGoal(a),delete e.scaleToLatitude,delete e.startPointType,e},makeYamlRole:function(e){if("gplus"!==e.name){var t=e.appearance,n=e.movement;if(e.appearance=e.appearance.name,e.movement=e.movement.name,e.category=e.category||"UNKNOWN",e.offset||(e.offset=0),void 0!==e.offset.min)e.offset={min:parseFloat(e.offset.min),max:parseFloat(e.offset.max)};else if(Array.isArray(e.offset)){var a=[];for(var i in e.offset)a.push(parseFloat(e.offset[i]));e.offset=a}else e.offset=parseFloat(e.offset||0);this.makeYamlAppearance(t),this.makeYamlMovement(n),this.yaml.push({movement:n}),this.yaml.push({appearance:t}),this.yaml.push({role:e})}},makeYamlAppearance:function(e){e.length=parseFloat(e.length),e.width=parseFloat(e.width),e.height=parseFloat(e.height)},makeYamlMovement:function(e){if(void 0!==e.max_speed.min)e.max_speed={min:parseFloat(e.max_speed.min),max:parseFloat(e.max_speed.max)};else if(Array.isArray(e.max_speed)){var t=[];for(var n in e.max_speed)t.push(parseFloat(e.max_speed[n]));e.max_speed=t}else e.max_speed=parseFloat(e.max_speed||0);e.max_acceleration=parseFloat(e.max_acceleration),e.max_turn=parseFloat(e.max_turn)},makeYamlGoal:function(e){var t=this;if(e.speed&&(e.speed=this.makeYamlSpeed(e.speed)),e.script){var n=[];for(var a in e.script)if(e.script[a]){e.script[a].waittime&&n.push(this.makeWaitTime(e.script[a])),e.script[a].name="goal_"+(new Date).getTime()+Math.random();var i=this.makeYamlGoal(e.script[a]);i&&n.push(i)}return e.script=n,this.yaml.push({goal:e}),e.name}if("area"===e.type)return e.location={min:this.transformPosToLoc(e.location[0]),max:this.transformPosToLoc(e.location[1])},this.yaml.push({goal:e}),e.name;if("multi"===e.type){var o=[];return e.location.map(function(e){o.push(t.transformPosToLoc(e))}),e.location=o,this.yaml.push({goal:e}),e.name}return"single"===e.type?(e.location=this.transformPosToLoc(e.location[0]),this.yaml.push({goal:e}),e.name):void 0},makeYamlSpeed:function(e){if(e.min)e.min=parseFloat(e.min),e.max=parseFloat(e.max);else{if(Array.isArray(e)){var t=[];return e.map(function(e){t.push(parseFloat(e))}),t}e=parseFloat(e)}return e},transformPosToLoc:function(e){return[e.x-window.ETOFFSET.x,e.y-window.ETOFFSET.y,e.z]},makeWaitTime:function(e){if(0!==e.waittime){var t={name:"waittime_"+(new Date).getTime()+--window.globalState.index,waittime:t.waittime};return this.yaml.push({goal:t}),t.name}},convert:function(e){if(!e)return!1;var t={};e.map(function(e){for(var n in e)t[n]||(t[n]={}),t[n][e[n].name]=e[n]}),this.state=Object.assign({},t),this.state=t;var n=this.formatAgent();return this.state.objects=n,this.state.triggers=this.formatTrigger(),this.state.agentSources=this.formatAgentSources(),{objects:this.state.objects,triggers:this.state.triggers,agentSources:this.state.agentSources}},formatAgentSources:function(){var e=this.state.agentSource;for(var t in e)e[t].initareas=this.formatTraffic(e[t].initareas),e[t].goalareas=this.formatTraffic(e[t].goalareas);return e},formatTraffic:function(e){var t=this,n=this.state.traffic,a=[];return e.map(function(e){var i=n[e],o=[];i.points.map(function(e){o.push(t.localToWorld(e))}),i.points=o,a.push(i)}),a},formatAgent:function(){var e=this.state.agent||{};for(var t in e){var n=this.makeRole(e[t]),a=this.makeGoal(e[t]);this.parseAgent(e[t]),e[t].role=n,e[t].goal=a}return e},formatTrigger:function(){var e=this,t={},n=this.state.trigger;if(!n)return t;var a=function(a){var i=n[a],o=i.points,r=[];o.map(function(t){r.push(e.localToWorld(t))}),i.points=r,t[i.name]=i};for(var i in n)a(i);return t},parseAgent:function(e){var t=this;"number"==typeof e.initlocation[0]?(e.startPointType="single",e.initlocation=[this.localToWorld(e.initlocation)]):e.initlocation.min?(e.startPointType="area",e.initlocation=[this.localToWorld(e.initlocation.min),this.localToWorld(e.initlocation.max)]):e.initlocation[0].length&&(e.startPointType="multi",e.initlocation.map(function(e){return t.localToWorld(e)}))},localToWorld:function(e){return{x:parseFloat(e[0])+window.ETOFFSET.x,y:parseFloat(e[1])+window.ETOFFSET.y,z:parseFloat(e[2])}},makeRole:function(e){if("gplus"===e.role)return{name:"gplus",movement:{}};var t=this.state.role[e.role];if(t.movement.name)return t;var n=this.state.appearance[t.appearance],a=this.state.movement[t.movement];return t.movement=a,t.appearance=n,t.offset||(t.offset=0),t},makeGoal:function(e){if(this.formatGoal(this.state.goal[e.goal]),"path"!==this.state.goal[e.goal].type){var t={name:"goal_"+(new Date).getTime()*Math.random(),script:[this.state.goal[e.goal]],type:"path"};this.state.goal[e.goal]=t}return this.state.goal[e.goal]},formatGoal:function(e){var t=this;if(e.script)e.type="path",this.formatPath(e);else{if(e.location.min)return e.type="area",e.location=[this.localToWorld(e.location.min),this.localToWorld(e.location.max)],e;if(Array.isArray(e.location[0])){e.type="multi";var n=[];return e.location.map(function(e){n.push(t.localToWorld(e))}),e.location=n,e}if(!e.location[0][0])return e.type="single",e.location=[this.localToWorld(e.location)],e}},formatPath:function(e){var t=[];for(var n in e.script){var a=e.script[n];if(this.state.goal[a]){var i=this.formatGoal(this.state.goal[a]);i.goalIndex=n,t.push(i)}}e.script=t}}},245:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={read:{url:"/api/workspace/read",data:{}},addCase:{url:"/api/case/add",data:{},method:"PUT"},play:{url:"/api/workspace/play",data:{}},getRootList:{url:"/api/task/root/list",data:{}},getDocker:{url:"/api/project/getDocker",data:{pageSize:1e3,currentPage:1}},createWorkspace:{url:"/api/workspace/create",data:{},method:"PUT"},getNasaDevice:{url:"/api/task/getNasaDevice",data:{}},getNewRunType:{url:"/api/job/getNewRunType",data:{}},getMapScene:{url:"/api/case/mapscene",data:{pageSize:1e3,currentPage:1}}}},247:function(e,t,n){"use strict";var a=r(n(1)),i=r(n(9)),o=r(n(253));function r(e){return e&&e.__esModule?e:{default:e}}i.default.render(a.default.createElement(o.default,null),document.getElementById("c"))},253:function(e,t,n){"use strict";var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=h(n(1));n(254);var o=h(n(257)),r=h(n(314)),l=h(n(315)),s=h(n(395)),c=h(n(429)),u=h(n(432)),d=h(n(47)),p=h(n(68)),f=h(n(245));function h(e){return e&&e.__esModule?e:{default:e}}n(433),n(435);var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={name:!1,initData:{}},n.initGlobalState(),n.getScenario(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentWillUnmount",value:function(){this.setState=function(e,t){}}},{key:"initGlobalState",value:function(){window.globalState=new window.THREE.EventDispatcher,this.history=new u.default(this.watchMap),window.globalState.history=this.history,window.globalState.index=-1,window.globalState.things=[],window.globalState.triggers=[],window.globalState.trafficAreas=[],window.globalState.models={}}},{key:"getScenario",value:function(){var e=this,t=p.default.getParamByName("caseId");if(t){var n=f.default.read,a=n.url,i=n.data;i.caseId=t,this.setState({view:!1}),this.watchMap=null,window.globalState=window.globalState||{},window.globalState.things=[],p.default.getData(a,i,function(n){e.setState({initData:{data:n}}),e.loadYaml(n,t),e.setState({view:!0})})}}},{key:"loadYaml",value:function(e){if(window.globalState.schema={algoVersion:e.algoVersion,caseId:e.caseId,workSpaceId:e.workSpaceId,mapVersion:e.mapId,triggers:{},agentSources:{},objects:{},name:e.name},e.scenario)try{var t=window.YAML.parse(e.scenario);window.globalState.yamlData=t,this.setState({mapVersion:e.mapId,name:e.name})}catch(e){d.default.error("yaml 文件异常，请检查文件格式内容是否正确！")}else this.setState({mapVersion:e.mapId,name:e.name})}},{key:"addNew",value:function(e){window.globalState.schema={objects:{},triggers:{},agentSources:{}},window.globalState.schema.mapVersion=e.mapVersion,window.globalState.schema.name=e.name,this.setState(e)}},{key:"setError",value:function(){this.setState({mapVersion:!1})}},{key:"render",value:function(){return i.default.createElement("div",{className:"m-studio"},i.default.createElement(r.default,null),this.state.mapVersion?i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"m-studio-layout"},i.default.createElement(o.default,null),i.default.createElement(c.default,{getScenario:this.getScenario.bind(this),initData:this.state.initData}),i.default.createElement(l.default,null)),this.state.view&&i.default.createElement(s.default,{schema:window.globalState.schema})):i.default.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"center",height:"100%"}},i.default.createElement("div",null,i.default.createElement("img",{src:"https://img.alicdn.com/tfs/TB10NCtsmzqK1RjSZPxXXc4tVXa-207-103.png"}),i.default.createElement("div",{style:{textAlign:"center"}},"该场景不支持展示，请试试其他的"))))}}]),t}();e.exports=m},257:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=u(n(1)),o=u(n(258)),r=u(n(310)),l=u(n(311)),s=u(n(312)),c=u(n(313));function u(e){return e&&e.__esModule?e:{default:e}}function d(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var p=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=d(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={now:""},d(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){}},{key:"changeState",value:function(e){this.setState(e)}},{key:"render",value:function(){var e=this.state.now;return i.default.createElement("div",{className:"leftbar"},i.default.createElement(r.default,{leftbar:this}),i.default.createElement(o.default,{visible:"roles"===e}),i.default.createElement(l.default,{visible:"XG"===e}),i.default.createElement(s.default,{visible:"trigger"===e}),i.default.createElement(c.default,{visible:"trafficFlow"===e}))}}]),t}();t.default=p},258:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=r(n(1)),o=r(n(13));function r(e){return e&&e.__esModule?e:{default:e}}var l=n(309),s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={nowFlag:"VEHICLE",roles:l},n.flags={VEHICLE:"机动车",BICYCLE:"非机动车",PEDESTRIAN:"人",other:"其他"},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"listenEvents",value:function(){}},{key:"componentDidMount",value:function(){var e=this;$.ajax({url:"https://oss-et-lab-web-online.oss-cn-shanghai.aliyuncs.com/config/8/prod.js",dataType:"jsonp",jsonpCallback:"_callback",success:function(t){e.setState({roles:t})}})}},{key:"onDrag",value:function(e){var t=JSON.parse(JSON.stringify(e)),n=t.name+(Math.random()*(new Date).getTime()).toFixed(0);t.name=t.name+(Math.random()*(new Date).getTime()).toFixed(0),t.appearance.name+=(Math.random()*(new Date).getTime()).toFixed(0),t.movement.name+=(Math.random()*(new Date).getTime()).toFixed(0),window.globalState.dispatchEvent({type:"dragItem",data:t}),window.globalState._dragItem={role:t,name:n,goal:{type:"path",script:[]},startPointType:"single"}}},{key:"renderRoles",value:function(e){var t=this,n=this.state.roles,a=[],o=function(o){if(o===e){var r=function(e){a.push(i.default.createElement("div",{key:e,className:"draggableItem",draggable:!0,onDrag:function(){return t.onDrag(n[o][e])}},i.default.createElement("img",{src:n[o][e].img}),i.default.createElement("span",null,n[o][e].name)))};for(var l in n[o])r(l)}};for(var r in n)o(r);return a}},{key:"changeTab",value:function(e){this.state.nowFlag===e&&(e=""),this.setState({nowFlag:e})}},{key:"renderItem",value:function(){var e=this,t=[],n=function(n){var a="slideItem";n===e.state.nowFlag&&(a+=" active"),t.push(i.default.createElement("div",{className:a,key:n,onClick:function(){e.changeTab(n)}},i.default.createElement("div",{className:"itemTitle"},i.default.createElement("span",null,e.flags[n]),i.default.createElement(o.default,{type:"arrow-down",size:"xs"})),i.default.createElement("div",{className:"itemContent"},e.renderRoles(n))))};for(var a in this.flags)n(a);return t.reverse(),t}},{key:"render",value:function(){return i.default.createElement("div",{style:{width:this.props.visible?"200px":"0px"},className:"sidePanel rolesPanel"},this.renderItem())}}]),t}();t.default=s},308:function(e,t,n){var a={"./af":88,"./af.js":88,"./ar":89,"./ar-dz":90,"./ar-dz.js":90,"./ar-kw":91,"./ar-kw.js":91,"./ar-ly":92,"./ar-ly.js":92,"./ar-ma":93,"./ar-ma.js":93,"./ar-sa":94,"./ar-sa.js":94,"./ar-tn":95,"./ar-tn.js":95,"./ar.js":89,"./az":96,"./az.js":96,"./be":97,"./be.js":97,"./bg":98,"./bg.js":98,"./bm":99,"./bm.js":99,"./bn":100,"./bn.js":100,"./bo":101,"./bo.js":101,"./br":102,"./br.js":102,"./bs":103,"./bs.js":103,"./ca":104,"./ca.js":104,"./cs":105,"./cs.js":105,"./cv":106,"./cv.js":106,"./cy":107,"./cy.js":107,"./da":108,"./da.js":108,"./de":109,"./de-at":110,"./de-at.js":110,"./de-ch":111,"./de-ch.js":111,"./de.js":109,"./dv":112,"./dv.js":112,"./el":113,"./el.js":113,"./en-au":114,"./en-au.js":114,"./en-ca":115,"./en-ca.js":115,"./en-gb":116,"./en-gb.js":116,"./en-ie":117,"./en-ie.js":117,"./en-il":118,"./en-il.js":118,"./en-nz":119,"./en-nz.js":119,"./eo":120,"./eo.js":120,"./es":121,"./es-do":122,"./es-do.js":122,"./es-us":123,"./es-us.js":123,"./es.js":121,"./et":124,"./et.js":124,"./eu":125,"./eu.js":125,"./fa":126,"./fa.js":126,"./fi":127,"./fi.js":127,"./fo":128,"./fo.js":128,"./fr":129,"./fr-ca":130,"./fr-ca.js":130,"./fr-ch":131,"./fr-ch.js":131,"./fr.js":129,"./fy":132,"./fy.js":132,"./gd":133,"./gd.js":133,"./gl":134,"./gl.js":134,"./gom-latn":135,"./gom-latn.js":135,"./gu":136,"./gu.js":136,"./he":137,"./he.js":137,"./hi":138,"./hi.js":138,"./hr":139,"./hr.js":139,"./hu":140,"./hu.js":140,"./hy-am":141,"./hy-am.js":141,"./id":142,"./id.js":142,"./is":143,"./is.js":143,"./it":144,"./it.js":144,"./ja":145,"./ja.js":145,"./jv":146,"./jv.js":146,"./ka":147,"./ka.js":147,"./kk":148,"./kk.js":148,"./km":149,"./km.js":149,"./kn":150,"./kn.js":150,"./ko":151,"./ko.js":151,"./ku":152,"./ku.js":152,"./ky":153,"./ky.js":153,"./lb":154,"./lb.js":154,"./lo":155,"./lo.js":155,"./lt":156,"./lt.js":156,"./lv":157,"./lv.js":157,"./me":158,"./me.js":158,"./mi":159,"./mi.js":159,"./mk":160,"./mk.js":160,"./ml":161,"./ml.js":161,"./mn":162,"./mn.js":162,"./mr":163,"./mr.js":163,"./ms":164,"./ms-my":165,"./ms-my.js":165,"./ms.js":164,"./mt":166,"./mt.js":166,"./my":167,"./my.js":167,"./nb":168,"./nb.js":168,"./ne":169,"./ne.js":169,"./nl":170,"./nl-be":171,"./nl-be.js":171,"./nl.js":170,"./nn":172,"./nn.js":172,"./pa-in":173,"./pa-in.js":173,"./pl":174,"./pl.js":174,"./pt":175,"./pt-br":176,"./pt-br.js":176,"./pt.js":175,"./ro":177,"./ro.js":177,"./ru":178,"./ru.js":178,"./sd":179,"./sd.js":179,"./se":180,"./se.js":180,"./si":181,"./si.js":181,"./sk":182,"./sk.js":182,"./sl":183,"./sl.js":183,"./sq":184,"./sq.js":184,"./sr":185,"./sr-cyrl":186,"./sr-cyrl.js":186,"./sr.js":185,"./ss":187,"./ss.js":187,"./sv":188,"./sv.js":188,"./sw":189,"./sw.js":189,"./ta":190,"./ta.js":190,"./te":191,"./te.js":191,"./tet":192,"./tet.js":192,"./tg":193,"./tg.js":193,"./th":194,"./th.js":194,"./tl-ph":195,"./tl-ph.js":195,"./tlh":196,"./tlh.js":196,"./tr":197,"./tr.js":197,"./tzl":198,"./tzl.js":198,"./tzm":199,"./tzm-latn":200,"./tzm-latn.js":200,"./tzm.js":199,"./ug-cn":201,"./ug-cn.js":201,"./uk":202,"./uk.js":202,"./ur":203,"./ur.js":203,"./uz":204,"./uz-latn":205,"./uz-latn.js":205,"./uz.js":204,"./vi":206,"./vi.js":206,"./x-pseudo":207,"./x-pseudo.js":207,"./yo":208,"./yo.js":208,"./zh-cn":209,"./zh-cn.js":209,"./zh-hk":210,"./zh-hk.js":210,"./zh-tw":211,"./zh-tw.js":211};function i(e){var t=o(e);return n(t)}function o(e){var t=a[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}i.keys=function(){return Object.keys(a)},i.resolve=o,e.exports=i,i.id=308},309:function(e,t,n){"use strict";e.exports={VEHICLE:[{category:"VEHICLE",img:"//img.alicdn.com/tfs/TB12d1TGHGYBuNjy0FoXXciBFXa-854-423.png",name:"car",movement:{defaultSpeeds:[11.11,22.22,33.33],name:"ccar_movement",max_speed:10,max_acceleration:5,max_turn:2},appearance:{name:"car_app",type:"cube",length:3.98,width:1.6,height:1.44,color:[1,0,0,1]}},{category:"VEHICLE",img:"//gw.alicdn.com/tfs/TB1SkUEIxSYBuNjSsphXXbGvVXa-325-177.png",name:"suv",movement:{defaultSpeeds:[11.11,22.22,33.33],name:"1ccar_movement",max_speed:12,max_acceleration:6.7,max_turn:2},appearance:{name:"ccar_app",type:"cube",length:4.62,width:1.88,height:1.63,color:[1,0,0,1]}},{category:"VEHICLE",img:"//gw.alicdn.com/tfs/TB1o3.ob7voK1RjSZFNXXcxMVXa-1200-800.jpg",name:"truck",movement:{defaultSpeeds:[11.11,22.22,33.33],name:"1ccar_movement",max_speed:12,max_acceleration:6.7,max_turn:2},appearance:{name:"ccar_app",type:"cube",length:6.92,width:2.5,height:3.77,color:[1,0,0,1]}}],BICYCLE:[{category:"BICYCLE",img:"//gw.alicdn.com/tfs/TB1xlFMIKuSBuNjy1XcXXcYjFXa-307-181.png",name:"motor",movement:{defaultSpeeds:[5.5,8.3,11.1],name:"mcar_movement",max_speed:8,max_acceleration:2.6,max_turn:2},appearance:{name:"mcar_app",type:"cube",length:1.8,width:.7,height:1.63,color:[1,0,0,1]}},{category:"BICYCLE",img:"//gw.alicdn.com/tfs/TB1st2dINGYBuNjy0FnXXX5lpXa-268-171.png",name:"bicycle",movement:{defaultSpeeds:[2.7,4,5.5],name:"cm1ar_movement",max_speed:3,max_acceleration:1.5,max_turn:2},appearance:{name:"m1car_app",type:"cube",length:1.5,width:.7,height:1.5,color:[1,0,0,1]}}],PEDESTRIAN:[{category:"PEDESTRIAN",img:"//gw.alicdn.com/tfs/TB1c3nIby6guuRjy1XdXXaAwpXa-303-180.png",name:"man",movement:{defaultSpeeds:[.1,.5,1],name:"man1",max_speed:1.1,max_acceleration:1,max_turn:3},appearance:{name:"man11",type:"cube",length:.4,width:.4,height:1.7,color:[1,0,0,1]}},{category:"PEDESTRIAN",img:"//gw.alicdn.com/tfs/TB1RlxSIH5YBuNjSspoXXbeNFXa-296-171.png",name:"kid",movement:{defaultSpeeds:[.5,1,3],name:"boy1",max_speed:.2,max_acceleration:.6,max_turn:3},appearance:{name:"boy11",type:"cube",length:.2,width:.2,height:1,color:[1,0,0,1]}}],other:[{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"agent",movement:{name:"fff",max_speed:1.1,max_acceleration:1,max_turn:3},appearance:{name:"fff",type:"cube",length:1.4,width:1.4,height:1.7,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vegetation_Tree",model:"Vegetation_Tree",movement:{},appearance:{name:"fff",type:"cube",length:1.5,width:1.5,height:5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vegetation_Bush",model:"Vegetation_Bush",movement:{},appearance:{name:"fff",type:"cube",length:1,width:1,height:.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vegetation_Grass",model:"Vegetation_Grass",movement:{},appearance:{name:"fff",type:"cube",length:1,width:1,height:.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Pedestrian_Male",model:"Pedestrian_Male",movement:{},appearance:{name:"fff",type:"cube",width:.9,length:.5,height:1.8,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Pedestrian_Child",model:"Pedestrian_Child",movement:{},appearance:{name:"fff",type:"cube",width:.9,length:.5,height:1.2,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Pedestrian_Female",model:"Pedestrian_Female",movement:{},appearance:{name:"fff",type:"cube",width:.9,length:.5,height:1.8,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Pedestrian_Old",model:"Pedestrian_Old",movement:{},appearance:{name:"fff",type:"cube",width:.9,length:.5,height:1.8,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Bicycle_Bicycle",model:"Bicycle_Bicycle",movement:{},appearance:{name:"fff",type:"cube",width:.9,length:1.8,height:1.8,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Bicycle_Motor",model:"Bicycle_Motor",movement:{},appearance:{name:"fff",type:"cube",width:1,length:2,height:2,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Bicycle_Electric",model:"Bicycle_Electric",movement:{},appearance:{name:"fff",type:"cube",width:1,length:2,height:2,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Bicycle_Tricycle",model:"Bicycle_Tricycle",movement:{},appearance:{name:"fff",type:"cube",width:1.2,length:2.5,height:2,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vehicle_Car",model:"Vehicle_Car",movement:{},appearance:{name:"fff",type:"cube",width:2,length:4.2,height:1.4,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vehicle_SUV",model:"Vehicle_SUV",movement:{},appearance:{name:"fff",type:"cube",width:2,length:4.5,height:1.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vehicle_Truck",model:"Vehicle_Truck",movement:{},appearance:{name:"fff",type:"cube",width:2.6,length:5.2,height:2.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Vehicle_Bus",model:"Vehicle_Bus",movement:{},appearance:{name:"fff",type:"cube",width:2.1,length:4.5,height:2.05,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_BusStop",model:"Prop_BusStop",movement:{},appearance:{name:"fff",type:"cube",width:3.4,length:1.54,height:2.76,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Fence",model:"Prop_Fence",movement:{},appearance:{name:"fff",type:"cube",width:1.4,length:.1,height:1,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Pole",model:"Prop_Pole",movement:{},appearance:{name:"fff",type:"cube",width:.3,length:.3,height:3.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Billboard",model:"Prop_Billboard",movement:{},appearance:{name:"fff",type:"cube",width:1.1,length:.1,height:2.2,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_PlantPot",model:"Prop_PlantPot",movement:{},appearance:{name:"fff",type:"cube",width:.5,length:.5,height:.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Bin",model:"Prop_Bin",movement:{},appearance:{name:"fff",type:"cube",width:.55,length:.65,height:1.05,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Counter",model:"Prop_Counter",movement:{},appearance:{name:"fff",type:"cube",width:.6,length:.35,height:1.25,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_DirtDebris",model:"Prop_DirtDebris",movement:{},appearance:{name:"fff",type:"cube",width:1.8,length:1.5,height:.15,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_FireHydrant",model:"Prop_FireHydrant",movement:{},appearance:{name:"fff",type:"cube",width:.5,length:.4,height:.8,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Bench",model:"Prop_Bench",movement:{},appearance:{name:"fff",type:"cube",width:1.5,length:.5,height:.5,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_BarrierCone",model:"Prop_BarrierCone",movement:{},appearance:{name:"fff",type:"cube",width:.35,length:.35,height:.6,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_BarrierCylinder",model:"Prop_BarrierCylinder",movement:{},appearance:{name:"fff",type:"cube",width:.25,length:.25,height:.9,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Barricade",model:"Prop_Barricade",movement:{},appearance:{name:"fff",type:"cube",width:1.21,length:.37,height:1.07,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Cube",model:"Prop_Cube",movement:{},appearance:{name:"fff",type:"cube",width:1,length:1,height:1,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Cone",model:"Prop_Cone",movement:{},appearance:{name:"fff",type:"cube",width:1,length:1,height:1,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Cylinder",model:"Prop_Cylinder",movement:{},appearance:{name:"fff",type:"cube",width:1,length:1,height:1,color:[1,0,0,1]}},{category:"UNKNOW",img:"//gw.alicdn.com/tfs/TB1kUUpvAZmBKNjSZPiXXXFNVXa-612-447.png",name:"Prop_Sphere",model:"Prop_Sphere",movement:{},appearance:{name:"fff",type:"cube",width:1,length:1,height:1,color:[1,0,0,1]}}]}},310:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),r=(a=o)&&a.__esModule?a:{default:a};function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var s=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=l(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={menus:[{icon:"cheliangleixing",id:"roles"},{icon:"iconfontzhizuobiaozhun023150",id:"XG"},{icon:"hongfaqi",id:"trigger"}],now:""},l(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),i(t,[{key:"componentDidMount",value:function(){}},{key:"changePanel",value:function(e){var t=this.props.leftbar,n=!1;this.state.now!==e.id&&(n=e.id),t.setState({now:n}),this.setState({now:n})}},{key:"render",value:function(){var e=this,t=this.state.now;return r.default.createElement("div",{className:"functionPanel"},this.state.menus.map(function(n){return r.default.createElement("div",{className:t===n.id?"active":"",key:n.id,onClick:function(){return e.changePanel(n)}},r.default.createElement("i",{className:"icon-"+n.icon+" et-icon"}))}))}}]),t}();t.default=s},311:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),r=(a=o)&&a.__esModule?a:{default:a};function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var s=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=l(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={goVersion:"",mapVersion:""},l(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),i(t,[{key:"componentDidMount",value:function(e){}},{key:"onDrag",value:function(){window.globalState.dispatchEvent({type:"dragXG",data:"xg"}),window.globalState.schema.objects.xg?window.globalState._dragItem=window.globalState.schema.objects.xg:window.globalState._dragItem={name:"xg",role:{name:"gplus",movement:{},appearance:{}},startPointType:"single",goal:{type:"single",script:[]}}}},{key:"changeMapVersion",value:function(e){window.globalState.schema.mapVersion=e,this.setState({mapVersion:e})}},{key:"changeVersion",value:function(e){window.globalState.schema.goVersion=e,this.setState({goVersion:e})}},{key:"render",value:function(){return this.props.visible&&window.globalState.dispatchEvent({type:"configXG"}),r.default.createElement("div",{style:{width:this.props.visible?"200px":"0px"},className:"sidePanel"},r.default.createElement("div",{className:"side-panel-title"},"自动驾驶算法"),r.default.createElement("div",{className:"item-xg"},r.default.createElement("img",{draggable:!0,onDrag:this.onDrag.bind(this),src:"//gw.alicdn.com/tfs/TB1QomrANTpK1RjSZR0XXbEwXXa-1730-1121.png_500x500.jpg_.webp"}),r.default.createElement("span",null,"运M")))}}]),t}();t.default=s},312:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),r=(a=o)&&a.__esModule?a:{default:a};var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={triggers:[{desc:"director_trigger",shape:"polygon",points:[],name:"场景触发器"}],nowTrigger:""},n.triggerObject="",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),i(t,[{key:"componentDidMount",value:function(e){var t=this;window.globalState.addEventListener("deselect",function(e){t.removeCrossMouse(),t.setState({nowTrigger:""}),t.triggerObject&&(t.triggerObject.hoverPoint&&window.globalState.watchMap.pigeonMap.remove(t.triggerObject.hoverPoint),delete t.triggerObject.hoverPoint,window.globalState.viewer.viewport.trigger.updateLine(t.triggerObject),t.triggerObject=null),window.globalState.dispatchEvent({type:"exitTrigger"})}),window.globalState.addEventListener("click",function(e){t.state.nowTrigger&&(t.triggerObject||(t.triggerObject=window.globalState.viewer.viewport.trigger.addNewTrigger(t.state.nowTrigger)),window.globalState.dispatchEvent({type:"addTriggerPoint",trigger:t.state.nowTrigger,coord:e.coord,object:t.triggerObject}))}),window.globalState.addEventListener("mousemove",function(e){t.triggerObject&&window.globalState.dispatchEvent({type:"triggerMousemove",coord:e.coord,object:t.triggerObject})})}},{key:"enterTrigger",value:function(e){this.setState({nowTrigger:JSON.parse(JSON.stringify(e))}),this.addCrossMouse(),window.globalState.dispatchEvent({type:"enterTrigger",trigger:e})}},{key:"addCrossMouse",value:function(){document.querySelector(".m-studio").className="m-studio crosshair"}},{key:"removeCrossMouse",value:function(){document.querySelector(".m-studio").className="m-studio "}},{key:"renderItems",value:function(){var e=this,t=this.state.triggers,n=this.state.nowTrigger,a=[];return t.map(function(t,i){var o="side-item";t.desc===n.desc&&(o+=" active"),a.push(r.default.createElement("div",{key:i,className:o,onClick:function(n){e.enterTrigger(t,n)}},t.name))}),a}},{key:"render",value:function(){return r.default.createElement("div",{style:{width:this.props.visible?"200px":"0px"},className:"sidePanel"},r.default.createElement("div",{className:"side-panel-title"},"触发器"),this.renderItems())}}]),t}();t.default=l},313:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=r(n(1)),o=r(n(13));function r(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={agentSources:[],agentSource:{}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(e){var t=this;window.globalState.addEventListener("deselect",function(e){e.object&&t.setState({agentSource:{}})}),window.globalState.addEventListener("loadSchema",function(e){t.setState({agentSources:window.globalState.schema.agentSources||[]})})}},{key:"selectItem",value:function(e){window.globalState.dispatchEvent({type:"deselect"}),this.setState({agentSource:e}),window.globalState.dispatchEvent({type:"selectAgentSource",agentSource:e})}},{key:"renderItems",value:function(){var e=this,t=this.state.agentSources,n=this.state.agentSource,a=[],r=0,l=function(l){var s=t[l],c="side-item";s.name===n.name&&(c+=" active"),r++,a.push(i.default.createElement("div",{key:l,className:c,onClick:function(t){e.selectItem(s,t)}},"交通流",r,i.default.createElement(o.default,{onClick:function(t){t.stopPropagation(),e.deleteItem(l)},type:"ashbin",size:"small",style:{float:"right",cursor:"pointer"}})))};for(var s in t)l(s);return a}},{key:"deleteItem",value:function(e){var t=this.state.agentSources;return window.globalState.history.removeAgentSource(t),delete t[e],this.setState({agentSources:t}),t.initareas.map(function(e){var t=window.globalState.trafficAreas[e.name];window.globalState.viewer.viewport.deleteItemTraffic(t)}),t.goalareas.map(function(e){var t=window.globalState.trafficAreas[e.name];window.globalState.viewer.viewport.deleteItemTraffic(t)}),window.globalState.dispatchEvent({type:"deselect",object:"make rightbar close"}),!1}},{key:"addItem",value:function(){var e=this.state.agentSources,t={name:"as_"+((new Date).getTime()*Math.random()).toFixed(0),initareas:[],goalareas:[],roles:[],percent:[],numbers:1};e[t.name]=t,this.setState({agentSources:e}),window.globalState.history.modifyAgentSource(t)}},{key:"render",value:function(){var e=this.props.visible;return i.default.createElement("div",{style:{width:e?"200px":"0px"},className:"sidePanel"},i.default.createElement("div",{className:"side-panel-title"},"交通流",i.default.createElement(o.default,{onClick:this.addItem.bind(this),style:{marginLeft:"100px",cursor:"pointer"},type:"add",size:"small"})),this.renderItems())}}]),t}();t.default=l},314:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),r=(a=o)&&a.__esModule?a:{default:a};function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var s=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=l(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={showModel:!1},l(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),i(t,[{key:"componentDidMount",value:function(){}},{key:"componentWillUnmount",value:function(){this.setState=function(e,t){}}},{key:"onDrag",value:function(e){window._dragingItem=e}},{key:"showModelWarehouse",value:function(){this.setState({showModel:!0})}},{key:"render",value:function(){return""}}]),t}();t.default=s},315:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=s(n(1)),o=s(n(316)),r=s(n(380)),l=s(n(381));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={type:"thing",visible:!0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"render",value:function(){return i.default.createElement(i.default.Fragment,null,i.default.createElement(o.default,null),i.default.createElement(l.default,null),i.default.createElement(r.default,null))}}]),t}();t.default=c},316:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=u(n(1)),o=u(n(317)),r=u(n(341)),l=u(n(38)),s=u(n(379)),c=u(n(13));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={type:"thing",visible:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){this.listenPanelChecked()}},{key:"listenPanelChecked",value:function(){var e=this;window.globalState.addEventListener("configXG",function(){e.setState({type:"XG"})}),window.globalState.addEventListener("configRoles",function(){e.setState({type:"thing"})}),window.globalState.addEventListener("deselect",function(t){e.setState({visible:!1})}),window.globalState.addEventListener("selectchange",function(t){e.setState({visible:!0})})}},{key:"clickRightBarIcon",value:function(){this.setState({visible:!this.state.visible})}},{key:"render",value:function(){return i.default.createElement("div",{className:this.state.visible?"rightbar ":"rightbar shrink"},i.default.createElement(c.default,{onClick:this.clickRightBarIcon.bind(this),size:"small",type:"arrow-double-left",className:"right-bar-icon"}),i.default.createElement(l.default,null,i.default.createElement(l.default.Item,{title:"路径编辑"},i.default.createElement(r.default,null)),i.default.createElement(l.default.Item,{title:"属性编辑"},i.default.createElement(o.default,null)),i.default.createElement(l.default.Item,{title:"元素"},i.default.createElement(s.default,null))))}}]),t}();t.default=d},317:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=u(n(1)),o=u(n(44)),r=u(n(27)),l=u(n(61)),s=u(n(215)),c=u(n(216));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.field=new l.default(n),n.state={name:"",length:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){var e=this,t=window.globalState.selectthing;if(t){var n=window.globalState.schema.objects[t.userData.name];this.formatAttr(n)}window.globalState.addEventListener("selectchange",function(t){var n=window.globalState.schema.objects[t.mesh.userData.name];e.formatAttr(n)})}},{key:"formatAttr",value:function(e){this.object=e;var t=e.role,n=t.movement,a=e.name;this.refs.speed&&this.refs.speed.clear(),this.setState({name:a,role:t,category:t.category,movement:n||{},appearance:t.appearance||{}})}},{key:"changeForm",value:function(e){var t=this.state,n=t.movement,a=t.appearance;n.max_acceleration=e.max_acceleration,n.max_turn=e.max_turn,a.length=e.length,a.width=e.width,a.height=e.height,n.auto=!!e.auto,this.object.role.strategy=e.auto?"adaptive":"basic",this.object.role.movement=n,this.object.role.appearance=a,this.object.name=e.name,this.object.role.category=e.category,this.object.role.model=e.model,window.globalState.history.modifyObject(this.object),this.setState({name:e.name,category:e.category,movement:n,appearance:a,role:this.object.role})}},{key:"onSpeedChange",value:function(e,t){var n=this.state.movement;n.max_speed=e,this.setState({movement:n}),this.object.role.movement=n,window.globalState.history.modifyObject(this.object)}},{key:"onSpeedPChange",value:function(e,t){var n=this.state.role;n.offset=e,this.setState({role:n}),this.object.role=n,window.globalState.history.modifyObject(this.object)}},{key:"onAdaptiveLineChange",value:function(e){this.object.adaptive_line=e,window.globalState.history.modifyObject(this.object)}},{key:"renderAttr",value:function(){var e=this.state,t=e.movement,n=e.appearance,a=e.role,l="adaptive"===a.strategy;return i.default.createElement("div",{className:"attrList attributePanel"},i.default.createElement(o.default,{onChange:this.changeForm.bind(this)},i.default.createElement(o.default.Item,{label:"名称"},i.default.createElement(r.default,{name:"name",readOnly:!0,value:this.state.name})),i.default.createElement(o.default.Item,{label:"分类"},i.default.createElement(r.default,{name:"category",readOnly:!0,value:this.state.category||"UNKNOWN"})),i.default.createElement(o.default.Item,{label:"model"},i.default.createElement(r.default,{name:"model",readOnly:!0,value:a.model||"UNKNOWN"})),i.default.createElement(o.default.Item,{label:"长宽高(m)(只能输入数值型)"},i.default.createElement(r.default,{style:{width:"70px"},htmlType:"number",min:0,name:"length",value:n.length}),i.default.createElement(r.default,{style:{width:"70px"},htmlType:"number",min:0,name:"width",value:n.width}),i.default.createElement(r.default,{style:{width:"70px"},htmlType:"number",min:0,name:"height",value:n.height})),i.default.createElement(o.default.Item,{label:"最大加速度(m/s^2)(只能输入数值型)"},"UNKNOWN"===this.state.category?i.default.createElement(r.default,{name:"max_acceleration",min:0,max:50,placeholder:"只能输入数值型",readOnly:!0,htmlType:"number",value:0}):i.default.createElement(r.default,{name:"max_acceleration",min:0,max:50,placeholder:"只能输入数值型",htmlType:"number",value:t.max_acceleration||0})),i.default.createElement(o.default.Item,{label:"最大角速度(rad/s)"},"UNKNOWN"===this.state.category?i.default.createElement(r.default,{name:"max_turn",min:0,max:50,readOnly:!0,placeholder:"只能输入数值型",htmlType:"number",value:0}):i.default.createElement(r.default,{name:"max_turn",min:0,max:50,placeholder:"只能输入数值型",htmlType:"number",value:t.max_turn||0})),i.default.createElement(c.default,{ref:"speed",speed:t.max_speed,unknow:"UNKNOWN"===this.state.category,formLayout:{labelAlign:"top",wrapperCol:{span:20},labelCol:{span:5}},defaultSpeeds:t.defaultSpeeds,onChange:this.onSpeedChange.bind(this)}),i.default.createElement(o.default.Item,{label:"速度追踪"},i.default.createElement(s.default,{style:{width:100},name:"auto",checked:l,disabled:!0,checkedChildren:"开启",unCheckedChildren:"关闭"})),l?i.default.createElement(i.default.Fragment,null,i.default.createElement(c.default,{ref:"speedp",label:"速度偏移值",speed:a.offset,formLayout:{labelAlign:"top",wrapperCol:{span:20},labelCol:{span:5}},defaultSpeeds:a.offset,onChange:this.onSpeedPChange.bind(this)})):""))}},{key:"render",value:function(){return this.state.name&&"xg"!==this.state.name&&"gplus"!==this.object.role.name?this.renderAttr():""}}]),t}();t.default=d},341:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=c(n(1)),o=c(n(15)),r=c(n(13)),l=c(n(342)),s=c(n(378));function c(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={thing:{},goal:{},goalIndex:0},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){var e=this;window.globalState.addEventListener("selectchange",function(t){var n=t.mesh,a=window.globalState.schema.objects[n.userData.name],i=a.goal;e.setState({object:a,goalIndex:"start",thing:n,goal:i})}),window.globalState.addEventListener("selectTargetPoint",function(t){var n=t.mesh.userData,a=n.goalIndex,i=n.pointIndex;e.setState({goalIndex:a,pointIndex:i})}),window.globalState.addEventListener("changePoint",function(t){e.updatePointPosition(t)})}},{key:"updatePointPosition",value:function(e){var t=e.point,n=t.userData.thing,a=window.globalState.schema.objects[n.userData.name],i=t.userData.goalIndex,o=t.userData.pointIndex;"start"===i?"area"===a.startPointType?(a.initlocation[1]=e.coord,window.globalState.dispatchEvent({type:"addArea",data:{thing:n,index:"start",location:a.initlocation}})):"multi"===a.startPointType&&(a.initlocation[o]=e.coord):(a.goal.script[i].location[o]=e.coord,"area"===a.type?window.globalState.dispatchEvent({type:"addArea",data:{thing:n,key:i,location:a.goal.script[i].location}}):window.globalState.dispatchEvent({type:"updateLine",mesh:n})),window.globalState.history.modifyObject(a),this.state.object&&this.state.object.name===a.name&&this.setState({object:a})}},{key:"onGoalChange",value:function(e){var t=this.state,n=t.thing,a=t.goalIndex,i=window.globalState.schema.objects[n.userData.name];i.goal.script[a]=e,window.globalState.history.modifyObject(i),this.setState({object:i})}},{key:"onStartPointChange",value:function(e){window.globalState.history.modifyObject(e),this.setState({object:e})}},{key:"addGoal",value:function(){var e=this.state.object,t=this.state.object.goal.script.length;e.goal.script[t]={location:[{x:0,y:0,z:0}],type:"single"},this.setState({object:e,goalIndex:t})}},{key:"delGoal",value:function(e){delete this.state.object.goal.script[e],this.clearMeshs(e),this.setState({goalIndex:"start"})}},{key:"clearMeshs",value:function(e){var t=this.state.thing,n=window.globalState.watchMap.pigeonMap;t.points&&t.points.map(function(t){t.userData.goalIndex===e&&n.remove(t.parent)}),t.areas&&t.areas[e]&&(t.areas[e].geometry.dispose(),n.remove(t.areas[e]),t.areas[e]=null)}},{key:"changeGoal",value:function(e){this.setState({goalIndex:e})}},{key:"renderTab",value:function(){var e=this,t=this.state,n=t.object,a=t.thing,c=t.goalIndex;return i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"goal-list"},i.default.createElement("ul",null,i.default.createElement("li",{className:"start"===c?"active":"",onClick:function(){e.changeGoal("start")}},"起点"),this.state.goal.script&&this.state.goal.script.map(function(t,n){return i.default.createElement("li",{key:n,onClick:function(){e.changeGoal(n)},className:c===n?"active":""},i.default.createElement("span",null,"终点",n),i.default.createElement(r.default,{type:"ashbin",onClick:function(){e.delGoal(n)}}))})),i.default.createElement("div",{className:"add-goal-button"},i.default.createElement(o.default,{size:"small",onClick:this.addGoal.bind(this),type:"primary"},"+ 新增目标点"))),i.default.createElement(l.default,{visible:"start"===c,onChange:this.onStartPointChange.bind(this),object:n,thing:a}),i.default.createElement(s.default,{visible:"start"!==c,onChange:this.onGoalChange.bind(this),thing:a,goalIndex:c,object:n}))}},{key:"render",value:function(){return i.default.createElement("div",{className:"movePanel"},this.state.object?this.renderTab():"")}}]),t}();t.default=u},342:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=c(n(1)),o=c(n(45)),r=c(n(38)),l=c(n(15)),s=c(n(13));function c(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.dotOptions=[{label:"单点",value:"single"},{label:"区域随机",value:"area"},{label:"多点随机",value:"multi"}],n.state={startFuzzing:!1,points:[{x:0,y:0,z:0}]},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){this.listenStartPositionChange()}},{key:"listenStartPositionChange",value:function(){var e=this;window.globalState.addEventListener("changething",function(t){if(e.object.name===t.mesh.userData.name)if("translate"===t.mode){var n=e.props.object.name,a=window.globalState.schema.objects[n],i=t.mesh.parent.position;a.initlocation[0]=i,"area"===e.object.startPointType&&window.globalState.dispatchEvent({type:"addArea",data:{thing:e.props.thing,index:"start",location:a.initlocation}}),e.props.onChange(a)}else if("rotate"===t.mode){var o=t.mesh.parent.rotation.z;e.object.initorient=[0,0,o||0],e.props.onChange(e.object)}}),window.globalState.addEventListener("click",function(t){var n=t.coord,a=e.object;e.selecting&&("area"===e.object.startPointType?(a.initlocation[1]=n,window.globalState.dispatchEvent({type:"addArea",data:{thing:e.props.thing,index:"start",location:a.initlocation}})):a.initlocation[e.selecting]=n,window.globalState.dispatchEvent({type:"addStartPoint",data:{thing:e.props.thing,pointIndex:e.selecting,location:n}}),e.props.onChange(a),e.toggleCrossMouse(),e.selecting=!1)})}},{key:"changeDotType",value:function(e){this.object.startPointType=e;var t=[this.props.thing.parent.position];this.object.initlocation=t,this.clearMeshs(),this.props.onChange(this.object)}},{key:"changeNumbers",value:function(e){this.object.numbers=e,this.props.onChange(this.object)}},{key:"clearMeshs",value:function(){var e=this.props.thing,t=window.globalState.watchMap.pigeonMap;e.startPoints&&(e.startPoints.map(function(e){return t.remove(e.parent)}),e.startPoints=[]),e.areas&&e.areas.startArea&&(e.areas.startArea.geometry.dispose(),t.remove(e.areas.startArea),e.areas.startArea=null)}},{key:"selectPoint",value:function(e){this.selecting=e,this.toggleCrossMouse()}},{key:"renderDot",value:function(){var e=this.props.object;switch(e.startPointType){case"single":return i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",e.initlocation[0].x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",e.initlocation[0].y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",e.initlocation[0].z.toFixed(2)," "));case"area":return this.renderAreaDot();case"multi":return this.renderMultiDot()}}},{key:"renderAreaDot",value:function(){var e=this,t=this.props.object,n=t.initlocation[0]||{},a=t.initlocation[1]||{x:0,y:0,z:0};return i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",n.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",n.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",n.z.toFixed(2)," ")),i.default.createElement("div",{className:"choose-position"},i.default.createElement("i",{onClick:function(){e.selectPoint(1)},className:"et-icon icon-view"}),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",a.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",a.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",a.z.toFixed(2)," "))))}},{key:"renderMultiDot",value:function(){var e=this,t=this.props.object.initlocation;return i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"icon-bar"},i.default.createElement(s.default,{size:"small",type:"add",onClick:function(){e.selectPoint(t.length)},style:{fontSize:"24px"}})),t.map(function(t,n){return 0===n?i.default.createElement("div",{className:"position-info",key:n},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",t.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",t.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",t.z.toFixed(2)," ")):i.default.createElement("div",{className:"choose-position",key:n},i.default.createElement("i",{onClick:function(){e.selectPoint(n)},className:"et-icon icon-view"}),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",t.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",t.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",t.z.toFixed(2)," ")))}))}},{key:"toggleCrossMouse",value:function(){var e=document.querySelector(".m-studio");"m-studio crosshair"!==e.className?e.className="m-studio crosshair":e.className="m-studio"}},{key:"render",value:function(){var e=this,t=this.props,n=t.object,a=t.visible;return this.object=this.props.object,i.default.createElement("div",{className:"startGoalConfig",style:{display:a?"block":"none"}},i.default.createElement(r.default,null,i.default.createElement(r.default.Item,{title:"起"},i.default.createElement("div",{className:"goal-content"},this.state.startFuzzing||"single"!==this.object.startPointType?i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"goal-title"},"模型位置起点"),i.default.createElement("div",{className:"goal-angle"},i.default.createElement("span",null,"角度"),this.object.initorient[2]),i.default.createElement("div",{className:"type-select"},i.default.createElement("span",null,"类型"),"  ",i.default.createElement(o.default,{onChange:this.changeDotType.bind(this),dataSource:this.dotOptions,value:n.startPointType})),i.default.createElement("div",{className:"goal-points"},this.renderDot()),i.default.createElement("div",{className:"fuzzing-button active"},i.default.createElement(l.default,{onClick:function(){e.setState({startFuzzing:!1})}},"返回模型位置起点 "))):i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"goal-angle"},i.default.createElement("span",null,"角度"),this.object.initorient[2]),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",n.initlocation[0].x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",n.initlocation[0].y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",n.initlocation[0].z.toFixed(2)," ")))))))}}]),t}();t.default=u},378:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=c(n(1)),o=c(n(45)),r=c(n(38)),l=c(n(15)),s=c(n(216));function c(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={dotTypes:[{label:"单点",value:"single"},{label:"区域",value:"area"},{label:"多点",value:"multi"}],startPoint:[],startFuzzing:!1,dotType:"single",points:[{x:0,y:0,z:0}]},n.selecting=!1,n.listenChange(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"UNSAFE_componentWillReceiveProps",value:function(){this.setState({startFuzzing:!1})}},{key:"listenChange",value:function(){var e=this;window.globalState.addEventListener("click",function(t){var n=t.coord;if(!1!==e.selecting){window.globalState.controls.targetPointContorl.detach();var a=e.selecting;e.goal.location[a]=n,e.props.onChange(e.goal),window.globalState.dispatchEvent({type:"addPoint",data:{thing:e.props.thing,pointIndex:a,goalIndex:e.props.goalIndex,location:n}}),"area"===e.goal.type&&e.updateArea(),e.selecting=!1,e.removeCrossMouse()}}),window.globalState.addEventListener("changeTargetPoint",function(t){var n=t.mesh,a=[0,0,n.parent.rotation.z];e.goal.orientation=a,e.goal.location[n.userData.pointIndex]=n.parent.position,e.props.onChange(e.goal),"area"===e.goal.type&&e.updateArea()})}},{key:"updateArea",value:function(){window.globalState.dispatchEvent({type:"addArea",data:{thing:this.props.thing,index:this.props.goalIndex,location:this.goal.location}})}},{key:"changeDotType",value:function(e){var t=this.goal.location;this.goal.location=[t[0]],this.goal.type=e,this.clearMeshs(),this.props.onChange(this.goal)}},{key:"clearMeshs",value:function(){var e=this.props,t=e.thing,n=e.goalIndex,a=window.globalState.watchMap.pigeonMap;t.points&&t.points.map(function(e){0!==e.userData.pointIndex&&e.userData.goalIndex===n&&a.remove(e.parent)}),t.areas&&t.areas[n]&&(t.areas[n].geometry.dispose(),a.remove(t.areas[n]),t.areas[n]=null)}},{key:"changeNumbers",value:function(e){this.goal.numbers=e,this.props.onChange(this.goal)}},{key:"renderDot",value:function(){var e=this,t=this.goal;switch(t.type){case"single":return i.default.createElement("div",{className:"choose-position"},i.default.createElement("i",{onClick:function(){e.selectPoint(0)},className:"et-icon icon-view"}),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",t.location[0].x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",t.location[0].y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",t.location[0].z.toFixed(2)," ")));case"area":return this.renderAreaDot();case"multi":return this.renderMultiDot()}}},{key:"renderAreaDot",value:function(){var e=this,t=this.goal,n=t.location[0]||{x:0,y:0,z:0},a=t.location[1]||{x:0,y:0,z:0};return i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"choose-position"},i.default.createElement("i",{onClick:function(){e.selectPoint(0)},className:"et-icon icon-view"}),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",n.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",n.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",n.z.toFixed(2)," "))),i.default.createElement("div",{className:"choose-position"},i.default.createElement("i",{onClick:function(){e.selectPoint(1)},className:"et-icon icon-view"}),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",a.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",a.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",a.z.toFixed(2)," "))))}},{key:"renderMultiDot",value:function(){var e=this,t=this.goal;return i.default.createElement(i.default.Fragment,null,i.default.createElement(l.default,{size:"small",type:"primary",onClick:function(){e.selectPoint(t.location.length)},style:{fontSize:"24px"}},"+"),t.location.map(function(t,n){return i.default.createElement("div",{key:n,className:"choose-position"},i.default.createElement("i",{onClick:function(){e.selectPoint(n)},className:"et-icon icon-view"}),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",t.x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",t.y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",t.z.toFixed(2)," ")))}))}},{key:"selectPoint",value:function(e){this.addCrossMouse(),this.selecting=e}},{key:"addCrossMouse",value:function(){document.querySelector(".m-studio").className="m-studio crosshair"}},{key:"removeCrossMouse",value:function(){document.querySelector(".m-studio").className="m-studio "}},{key:"onSpeedChange",value:function(e,t){this.goal.speed=e,this.props.onChange(this.goal)}},{key:"render",value:function(){var e=this,t=this.props,n=t.goalIndex,a=t.object.goal.script[n];a||(a={type:"single",orientation:[0,0,0],location:[{x:0,y:0,z:0}]}),this.goal=a;var c=this.props.visible;return i.default.createElement("div",{className:"startGoalConfig",style:{display:c?"block":"none"}},i.default.createElement(r.default,null,i.default.createElement(r.default.Item,{title:"终"},i.default.createElement("div",{className:"goal-content"},"single"===a.type&&!1===this.state.startFuzzing?i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"goal-title"},"终点",n),i.default.createElement("div",{className:"goal-angle"},i.default.createElement("span",null,"角度"),a.orientation&&a.orientation[2]),i.default.createElement("div",{className:"choose-position"},i.default.createElement(l.default,{text:!0,onClick:function(){e.selectPoint(0)}},i.default.createElement("i",{className:"et-icon icon-view"})),i.default.createElement("div",{className:"position-info"},i.default.createElement("div",null,i.default.createElement("span",null,"X")," ",a.location[0].x.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Y")," ",a.location[0].y.toFixed(2)),i.default.createElement("div",null,i.default.createElement("span",null,"Z")," ",a.location[0].z.toFixed(2)," ")))):i.default.createElement(i.default.Fragment,null,i.default.createElement("div",{className:"type-select"},i.default.createElement("span",null,"类型"),"  ",i.default.createElement(o.default,{onChange:this.changeDotType.bind(this),value:a.type,dataSource:this.state.dotTypes})),i.default.createElement("div",{className:"goal-points"},this.renderDot()),i.default.createElement("div",{className:"fuzzing-button active"},i.default.createElement(l.default,{onClick:function(){e.setState({startFuzzing:!1})}},"返回模型位置起点 "))))),i.default.createElement(r.default.Item,{title:"行"},i.default.createElement("div",{className:"speed-select"},i.default.createElement(s.default,{speed:this.goal.speed,onChange:this.onSpeedChange.bind(this)})))))}}]),t}();t.default=u},379:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(1),r=(a=o)&&a.__esModule?a:{default:a};function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var s=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=l(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={},l(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),i(t,[{key:"componentDidMount",value:function(){var e=this;window.globalState.addEventListener("addThing",function(t){e.setState({things:window.globalState.things})}),window.globalState.addEventListener("removeThing",function(t){e.setState({things:window.globalState.things})}),window.globalState.addEventListener("selectchange",function(t){e.setState({thing:t.mesh})})}},{key:"selectThing",value:function(e){window.globalState.dispatchEvent({type:"selectchange",mesh:e,pre:window.globalState.selectthing})}},{key:"render",value:function(){var e=this,t=this.state.thing||{},n=this.state.things||window.globalState.things,a=[],i=window.globalState.history.XG;i&&a.push(r.default.createElement("li",{key:i.uuid,className:t.uuid===i.uuid?"active":"",onClick:function(){e.selectThing(i)}},i.userData.name));var o=function(i){a.push(r.default.createElement("li",{className:t.uuid===n[i].uuid?"active":"",key:n[i].uuid,onClick:function(){e.selectThing(n[i])}},n[i].userData.name))};for(var l in n)o(l);return r.default.createElement("div",{className:"things-panel"},r.default.createElement("ul",{className:"things-list"},a))}}]),t}();t.default=s},380:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=s(n(1)),o=s(n(38)),r=s(n(15)),l=s(n(45));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={visible:!1,trigger:{}},n.object={},n.triggerTypes=[{label:"任意障碍物",value:"any"},{label:"指定障碍物",value:"other"}],n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){this.listenPanelChecked()}},{key:"listenPanelChecked",value:function(){var e=this;window.globalState.addEventListener("selectTriggerArea",function(t){var n=window.globalState.schema.triggers[t.object.name];e.object=t.object,e.setState({visible:!0,trigger:n})}),window.globalState.addEventListener("deselect",function(){e.setState({visible:!1,trigger:{}})}),window.globalState.addEventListener("chooseThing",function(t){var n=t.object,a=e.state,i=a.trigger;a.binding;window.globalState.viewer.viewport.binding=!1,i.agents||(i.agents=[]),i.agents.push(n.userData.name),e.setState({trigger:i,binding:!1})})}},{key:"onTriggerTypeChange",value:function(e){var t=this.state.trigger;t.agents="any"===e?e:[],window.globalState.history.modifyTrigger(t),this.setState({trigger:t})}},{key:"renderTriggers",value:function(){var e=this,t=[];return window.globalState.triggers.map(function(n){var a="";e.state.trigger.name===n.name&&(a="active"),t.push(i.default.createElement("div",{key:n.name,className:a,onClick:function(){e.changeTrigger(n.name)}},n.name))}),[t]}},{key:"changeTrigger",value:function(e){var t=window.globalState.triggers,n=void 0;for(var a in t)t[a].name===e&&(n=t[a]);var i=window.globalState.schema.triggers[n.userData.name];this.setState({trigger:i}),window.globalState.viewer.viewport.trigger.selectObject(n)}},{key:"addBind",value:function(){window.globalState.viewer.viewport.binding=!0,this.setState({binding:!0})}},{key:"deleteAgent",value:function(e){var t=this.state.trigger;t.agents.splice(e,1),this.setState({trigger:t})}},{key:"renderBinding",value:function(){var e=this,t=this.state.trigger,n=void 0;return"percept_trigger"!==t.desc?"":(n="any"===this.state.trigger.agents?"any":"other",i.default.createElement("div",{className:"binding-trigger"},i.default.createElement(l.default,{autoWidth:!0,value:n,onChange:this.onTriggerTypeChange.bind(this),dataSource:this.triggerTypes}),"any"===n?"":i.default.createElement(i.default.Fragment,null,i.default.createElement(r.default,{type:"primary",className:this.state.binding?"binding binding-button":"binding-button",onClick:this.addBind.bind(this)},"绑定障碍物"),i.default.createElement("div",{className:"trigger-agents"},t.agents&&"any"!==t.agents&&t.agents.map(function(t,n){return i.default.createElement("div",{key:n},i.default.createElement("span",null,t),i.default.createElement("span",{className:"delete-trigger-agent",onClick:function(t){e.deleteAgent(n)}},"-"))})))))}},{key:"render",value:function(){var e=this.state.trigger;return i.default.createElement("div",{className:this.state.visible?"rightbar ":"rightbar shrink"},i.default.createElement(o.default,null,i.default.createElement(o.default.Item,{title:"属性"},i.default.createElement("div",{className:"trigger-attr"},i.default.createElement("div",{className:"trigger-name"},e.name),i.default.createElement("div",{className:"trigger-type"},e.desc),this.renderBinding())),i.default.createElement(o.default.Item,{title:"触发器列表"},i.default.createElement("div",{className:"triggers-list"},this.renderTriggers()))))}}]),t}();t.default=c},381:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=u(n(1)),o=u(n(38)),r=u(n(44)),l=u(n(27)),s=u(n(382)),c=u(n(392));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={visible:!1,traffic:{},agentSource:{}},n.object={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){this.listenPanelChecked()}},{key:"listenPanelChecked",value:function(){var e=this;window.globalState.addEventListener("selectAgentSource",function(t){e.setState({visible:!0,agentSource:t.agentSource})}),window.globalState.addEventListener("selectTrafficArea",function(e){}),window.globalState.addEventListener("deselect",function(t){t.object&&e.setState({visible:!1,traffic:{}})})}},{key:"changeForm",value:function(e){var t=this.state.agentSource;t.roles=["man","car","motor","other"],t.percent=[e.man,e.car,e.motor,e.other],window.globalState.history.modifyAgentSource(t),this.setState({agentSource:t})}},{key:"renderForm",value:function(){var e=this.state.agentSource,t=e.percent||{},n={width:180};return i.default.createElement(r.default,{onChange:this.changeForm.bind(this)},i.default.createElement(r.default.Item,{label:"名称"},i.default.createElement(l.default,{style:n,name:"name",readOnly:!0,value:e.name})),i.default.createElement(r.default.Item,{label:"行人"},i.default.createElement(s.default,{style:n,name:"man",tooltipVisible:!0,value:t[0],marks:{0:"0%",100:"100%"},min:0,hasTip:!0,max:100,defaultValue:100})),i.default.createElement(r.default.Item,{label:"电动车"},i.default.createElement(s.default,{style:n,name:"motor",tooltipVisible:!0,value:t[2],marks:{0:"0%",100:"100%"},min:0,hasTip:!0,max:100,defaultValue:100})),i.default.createElement(r.default.Item,{label:"汽车"},i.default.createElement(s.default,{style:n,name:"car",tooltipVisible:!0,value:t[1],marks:{0:"0%",100:"100%"},min:0,hasTip:!0,max:100,defaultValue:0})),i.default.createElement(r.default.Item,{label:"其他"},i.default.createElement(s.default,{style:n,name:"other",tooltipVisible:!0,value:t[3],marks:{0:"0%",100:"100%"},min:0,hasTip:!0,max:100,defaultValue:0})),i.default.createElement("div",null,"行为分布"))}},{key:"changeStartArea",value:function(e){var t=this.state.agentSource;t.initareas=e,window.globalState.history.modifyAgentSource(t),this.setState({agentSource:t})}},{key:"changeEndArea",value:function(e){var t=this.state.agentSource;t.goalareas=e,window.globalState.history.modifyAgentSource(t),this.setState({agentSource:t})}},{key:"render",value:function(){var e=this.state.agentSource;return i.default.createElement("div",{className:this.state.visible?"rightbar ":"rightbar shrink"},i.default.createElement(o.default,null,i.default.createElement(o.default.Item,{title:"配置"},i.default.createElement(c.default,{title:"起始区域配置",traffics:e.initareas||[],onChange:this.changeStartArea.bind(this)}),i.default.createElement(c.default,{title:"终点区域配置",traffics:e.goalareas||[],onChange:this.changeEndArea.bind(this)})),i.default.createElement(o.default.Item,{title:"属性"},i.default.createElement("div",{className:"traffic-attr"},this.renderForm()))))}}]),t}();t.default=d},392:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=l(n(1)),o=l(n(15)),r=l(n(13));function l(e){return e&&e.__esModule?e:{default:e}}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}n(393);var c=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=s(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={list:[],now:{}},a.nowObject=!1,s(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.default.Component),a(t,[{key:"componentDidMount",value:function(){var e=this;this.props.traffics&&this.setState({list:this.props.traffics}),window.globalState.addEventListener("click",function(t){e.nowObject&&window.globalState.dispatchEvent({type:"addTrafficPoint",coord:t.coord,object:e.nowObject})}),window.globalState.addEventListener("mouseover",function(t){e.nowObject&&window.globalState.dispatchEvent({type:"trafficMousemove",coord:t.coord,object:e.nowObject})}),window.globalState.addEventListener("deselect",function(t){e.removeCrossMouse();var n=e.state.now;e.nowObject&&e.onChange(n,e.nowObject),e.setState({now:{}}),e.nowObject&&(e.nowObject.hoverPoint&&window.globalState.watchMap.pigeonMap.remove(e.nowObject.hoverPoint),delete e.nowObject.hoverPoint,window.globalState.viewer.viewport.trafficArea.updateLine(e.nowObject),window.globalState.viewer.viewport.trafficArea.leaveObject(e.nowObject),e.nowObject=null),window.globalState.dispatchEvent({type:"exitTraffic"})}),window.globalState.addEventListener("modifyTrafficArea",function(t){var n=t.data,a=t.object;n.name&&e.onChange(n,a)})}},{key:"onChange",value:function(e,t){var n=[];t.points.map(function(e){n.push(e.parent.position)}),this.state.list.map(function(t){t.name===e.name&&(t.points=n)}),this.setState({list:this.state.list}),this.props.onChange(this.state.list)}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){this.setState({list:e.traffics})}},{key:"renderList",value:function(){var e=this,t=[],n=this.state.now;return this.state.list.map(function(a,o){t.push(i.default.createElement("li",{className:a.name===n.name?"active":"",onClick:function(){e.chooseTraffic(a)},key:o},"区域",o,i.default.createElement(r.default,{onClick:function(t){t.stopPropagation(),e.deleteItem(o)},type:"ashbin",size:"small",style:{float:"right",cursor:"pointer"}})))}),t}},{key:"deleteItem",value:function(e){var t=this.state.list,n=t[e],a=window.globalState.trafficAreas[n.name];window.globalState.viewer.viewport.trafficArea.deleteTraffic(a),window.globalState.viewer.viewport.trafficArea.selecting=null,t.splice(e,1),this.setState({list:t})}},{key:"chooseTraffic",value:function(e){if(this.state.now.name!==e.name){var t=window.globalState.trafficAreas[e.name];window.globalState.viewer.viewport.trafficArea.selectObject(t),window.globalState.viewer.viewport.trafficArea.leaveObject(this.nowObject),this.setState({now:e})}}},{key:"addItem",value:function(){var e={type:"polygon",points:[],name:"traffic"+((new Date).getTime()*Math.random()).toFixed(0)};this.state.list.push(e),this.setState({list:this.state.list}),window.globalState.trafficAreas[e.name]||(window.globalState.trafficAreas[e.name]=window.globalState.viewer.viewport.trafficArea.addNewTraffic(e)),this.chooseTraffic(e),this.nowObject=window.globalState.trafficAreas[e.name],this.addCrossMouse()}},{key:"addCrossMouse",value:function(){document.querySelector(".m-studio").className="m-studio crosshair"}},{key:"removeCrossMouse",value:function(){document.querySelector(".m-studio").className="m-studio "}},{key:"render",value:function(){var e=this.props.title;return i.default.createElement("div",{className:"traffic-config"},i.default.createElement("div",{className:"tc-title"},e),i.default.createElement("ul",null,this.renderList()),i.default.createElement(o.default,{onClick:this.addItem.bind(this),type:"primary",className:"tc-button"},"+ 新增区域"))}}]),t}();t.default=c},393:function(e,t,n){var a=n(394);"string"==typeof a&&(a=[[e.i,a,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(31)(a,i);a.locals&&(e.exports=a.locals)},394:function(e,t,n){(e.exports=n(30)(!1)).push([e.i,".traffic-config{height:calc(50% - 20px);position:relative;border-bottom:1px solid #000}.traffic-config .traffic-attr{color:#fff}.traffic-config .tc-title{padding:5px 10px;color:#fff;font-size:13px;line-height:30px;border-bottom:1px solid #000}.traffic-config ul{overflow-y:auto;margin:10px;display:flex;flex-direction:column;height:calc(100% - 106px)}.traffic-config ul li{width:100%;height:30px;background:#4a535e;font-size:13px;line-height:30px;padding-right:10px;padding-left:10px;cursor:pointer;margin-bottom:10px;border-radius:5px;color:#fff;transition:background .3s ease;justify-content:space-between}.traffic-config ul li.active{background:#2466ff}.traffic-config button{position:absolute;width:calc(100% - 40px);left:20px;bottom:20px}",""])},395:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=u(n(396)),o=u(n(47)),r=u(n(1)),l=u(n(398)),s=u(n(68)),c=u(n(242));function u(e){return e&&e.__esModule?e:{default:e}}function d(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}n(428);var p={url:"/api/task/token",data:{}},f=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=d(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.state={},d(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),a(t,[{key:"componentDidMount",value:function(){this.getMapToken()}},{key:"getMapToken",value:function(){var e=this,t=p,n=t.url,a=t.data,i=(window.globalState||{}).schema;a.mapId=i&&i.mapVersion,s.default.getData(n,a,function(t){t.offset?e.initStudio(t):o.default.error("没有地图数据")})}},{key:"loadData",value:function(){this.initSchema(),window.globalState.dataLoader=this.dataLoader,this.dataLoader=new i.default,this.dataLoader.loadData(window.globalState.schema)}},{key:"initSchema",value:function(){var e={};e=window.globalState.yamlData?c.default.convert(window.globalState.yamlData):{objects:{},triggers:{},agentSources:{}},window.globalState.schema=Object.assign(window.globalState.schema,e),window.globalState.dispatchEvent({type:"loadSchema"})}},{key:"initStudio",value:function(e){var t=this,n=e.offset,a=this.props.schema.mapVersion;a=a.split("&");var i,o,r=(i=a[0],o=a[1],"/produce/cloud_lmap/"+i+"/export_data/"+o+"/pushdata/lmap/geo.json");this.watchMap=new window.WatchMap({container:".viewer",isRos:!1,autoCenter:!0,isAmap:!1,noData:!0,pitch:Math.PI/3,domain:"http://et-lmap-online.oss-cn-shanghai.aliyuncs.com",mapId:window.globalState.schema.mapVersion,updateView:!1,mapUrl:r,offset:{x:n[0],y:n[1]}}),this.watchMap.onCarLoad=function(e){e.visible=!1},this.watchMap.pigeonMap.map.zoom=80,this.watchMap.pigeonMap.map.fov=Math.PI/8,this.watchMap.pigeonMap.map.pitch=0,this.watchMap.pigeonMap.drawTool=new window.PigeonGL.DrawTool,this.watchMap.pigeonMap.addLayer(this.watchMap.pigeonMap.drawTool),window.globalState.watchMap=this.watchMap,window.globalState.viewer=this,this.resize(),window.onresize=function(){return t.resize()},this.viewport=new l.default(this.watchMap),this.watchMap.mapLayer.on("load",function(){t.loadData()})}},{key:"resize",value:function(){var e=document.querySelector(".viewer"),t=window.innerWidth,n=window.innerHeight-40;e.style.width=t+"px",e.style.height=n+"px",e.style.top="40px",this.watchMap.pigeonMap.map.width=t,this.watchMap.pigeonMap.map.height=n,this.watchMap.pigeonMap.cameraControl.updateMap()}},{key:"render",value:function(){return r.default.createElement("div",{className:"viewer"})}}]),t}();t.default=f},396:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=window.globalState.watchMap.pigeonMap,this.thing=window.globalState.viewer.viewport.thing,this.point=window.globalState.viewer.viewport.point,this.area=window.globalState.viewer.viewport.area,this.line=window.globalState.viewer.viewport.line,this.trigger=window.globalState.viewer.viewport.trigger,this.trafficArea=window.globalState.viewer.viewport.trafficArea}return a(e,[{key:"loadData",value:function(e){this.clear(),this.parseDataToScene(e)}},{key:"clear",value:function(){var e=this;window.globalState.things.map(function(t){e.pigeonMap&&e.pigeonMap.remove(t)})}},{key:"parseDataToScene",value:function(e){var t=this;if(e.objects){var n=e.objects,a=function(e){var a=n[e],i=a.initlocation[0];t.thing.addThing(a,i,function(e){t.point.addPoints(a,e),t.area.addAreas(a,e),"gplus"!==a.role.name&&t.line.update(e)}),"gplus"===a.role.name&&window.globalState.watchMap.setCenter([i.x,i.y])};for(var i in n)a(i);var o=function(n){var a=e.triggers[n];a.desc||(a.desc=a.type);var i=t.trigger.addTrigger(a);a.points.map(function(e){t.trigger.addPoint({coord:e,object:i})}),t.trigger.updateLine(i)};for(var i in e.triggers)o(i);this.parseAgentSource(e.agentSources)}}},{key:"parseAgentSource",value:function(e){var t=this,n=[];for(var a in e)n=(n=n.concat(e[a].initareas)).concat(e[a].goalareas);n.map(function(e){var n=t.trafficArea.addNewTraffic(e);e.points.map(function(e){t.trafficArea.addPoint({coord:e,object:n})}),t.trafficArea.updateLine(n),window.globalState.trafficAreas[e.name]=n})}}]),e}();t.default=i},398:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=u(n(399)),o=u(n(400)),r=u(n(401)),l=u(n(403)),s=u(n(404)),c=u(n(405));function u(e){return e&&e.__esModule?e:{default:e}}n(406);var d=window.THREE,p=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.history=window.globalState.history,this.mapControl=t.pigeonMap.mapControl,this.pigeonMap=t.pigeonMap,this.watchMap=t,this.points=[],this.point=new o.default(this),this.thing=new r.default(this),this.area=new i.default(this),this.line=new l.default(this),this.trigger=new s.default(this),this.trafficArea=new c.default(this),this.initControls(),this.listenDomEvents(),this.listenSelectedChange(),this.initContorlEvents(),this.addDragEvents()}return a(e,[{key:"initControls",value:function(){var e=new d.TransformControls(this.pigeonMap.camera,document.querySelector("#map"));this.pigeonMap.world.add(e),this.domElement=document.querySelector("#map"),e.setSize(3),e.setSpace("local"),this.pigeonMap.inputHandler.raycaster.linePrecision=2,window.globalState.controls={},window.globalState.controls.thingControl=e;var t=new d.TransformControls(this.pigeonMap.camera,document.querySelector("#map"));this.pigeonMap.world.add(t),t.setSize(3),t.setSpace("local"),window.globalState.controls.targetPointContorl=t,this.controls={thingControl:e,targetPointContorl:t}}},{key:"listenDomEvents",value:function(){var e=this;this.domElement.addEventListener("dragover",function(t){t.preventDefault();var n=e.domElement.getBoundingClientRect(),a=t.clientX-n.left,i=t.clientY-n.top;e.pigeonMap.inputHandler.mouse.set(a,i)}),this.domElement.addEventListener("drop",function(t){t.preventDefault(),window.globalState._dragItem&&(e.thing.addThing(window.globalState._dragItem),delete window.globalState._dragItem)})}},{key:"listenSelectedChange",value:function(){var e=this,t=this.controls.thingControl,n=this.controls.targetPointContorl;this.domElement.addEventListener("contextmenu",function(e){window.globalState.dispatchEvent({type:"deselect",source:"mouse"})}),this.pigeonMap.inputHandler.addEventListener("click",function(t){var n=e.testThing(t.data);if(n.object&&n.coord){if(n.object.coord=n.coord,e.binding)return void window.globalState.dispatchEvent({type:"chooseThing",object:n.object});"targetPoint"===n.object.name&&e.selectTargetPoint(n),"thing"===n.object.name&&e.selectThing(n)}else window.globalState.dispatchEvent({type:"click",coord:n.coord,object:n.object})}),window.globalState.addEventListener("selectchange",function(a){var i=a.mesh;t.detach(),n.detach(),t.attach(i.coordinates?i.parent:i),e.toggleThing(a.mesh,a.pre),window.globalState.selectthing=i}),window.globalState.addEventListener("selectTargetPoint",function(e){var t=e.mesh;n.detach(),n.attach(t.coordinates?t.parent:t)}),window.globalState.addEventListener("deselect",function(e){n.detach(),t.detach()})}},{key:"selectTargetPoint",value:function(e){var t=this.controls.thingControl;if(window.globalState.dispatchEvent({type:"deselect",object:e.object}),window.globalState.dispatchEvent({type:"selectchange",pre:window.globalState.selectthing,mesh:e.object.thing,name:e.object.thing.name}),!t.object||e.object.parent!==t.object)return window.globalState.dispatchEvent({type:"selectTargetPoint",mesh:e.object,name:e.object.name}),!1}},{key:"selectThing",value:function(e){var t=this.controls.thingControl;t.object&&e.object.parent===t.object||(window.globalState.dispatchEvent({type:"deselect",object:e.object}),window.globalState.dispatchEvent({type:"selectchange",pre:window.globalState.selectthing,mesh:e.object,name:e.object.name}))}},{key:"toggleThing",value:function(e,t){}},{key:"testThing",value:function(e){return e.object?"targetPoint"===e.object.name||"thing"===e.object.name?e:e.coord?this.testThing({object:e.object.parent,coord:e.coord}):void 0:{coord:e.coord}}},{key:"initContorlEvents",value:function(){var e=this,t=this.controls.thingControl,n=this.controls.targetPointContorl;t.addEventListener("change",function(e){t.update(),e.target.object&&window.globalState.dispatchEvent({type:"changething",mode:e.target.getMode(),name:e.target.object.children[0].userData.name,mesh:e.target.object.children[0]})}),n.addEventListener("change",function(e){n.update(),e.target.object&&window.globalState.dispatchEvent({type:"changeTargetPoint",mode:e.target.getMode(),name:e.target.object.children[0].userData.name,mesh:e.target.object.children[0]})}),t.addEventListener("mouseDown",function(t){e.mapControl.disable=!0,e.mapControl.mouseStatus=null}),t.addEventListener("mouseUp",function(t){setTimeout(function(){e.mapControl.disable=!1},10)}),n.addEventListener("mouseDown",function(t){e.mapControl.disable=!0,e.mapControl.mouseStatus=null}),n.addEventListener("mouseUp",function(t){setTimeout(function(){e.mapControl.disable=!1},10)})}},{key:"addDragEvents",value:function(){var e=this;this.pigeonMap.inputHandler.addEventListener("mousedown",function(t){var n=((t||{}).data||{}).object;n&&e.testDragObject(n)&&(e.mapControl.disable=!0,e.draggingItem=t.data.object,e.mapControl.disable=!0)}),this.pigeonMap.inputHandler.addEventListener("mouseup",function(t){e.draggingItem&&(e.draggingItem=null,setTimeout(function(){e.mapControl.disable=!1},10))}),this.pigeonMap.inputHandler.addEventListener("mouseover",function(e){window.globalState.dispatchEvent({type:"mouseover",coord:e.coord})})}},{key:"testDragObject",value:function(e){return e._listeners&&e._listeners.dragover}}]),e}();t.default=p},399:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=t.pigeonMap,this.initMesh(),this.listenEvents()}return a(e,[{key:"listenEvents",value:function(){var e=this;window.globalState.addEventListener("addArea",function(t){var n=t.data,a=n.thing,i=n.location,o=n.index;e.addArea(i,o,a)})}},{key:"initMesh",value:function(){this.meshs={};var e=new i.MeshBasicMaterial({transparent:!0,side:i.DoubleSide,opacity:.3,color:15794165});this.meshs.area=new i.Mesh(new i.BufferGeometry,e)}},{key:"addAreas",value:function(e,t){var n=this,a=e.initlocation,i=e.startPointType,o=e.goal;"area"===i&&this.addArea(a,"start",t),o.script.map(function(e,a){"area"===e.type&&n.addArea(e.location,a,t)})}},{key:"addArea",value:function(e,t,n){if(e[1]&&e[0]){n.areas=n.areas||[];var a=void 0;n.areas[t]?a=n.areas[t]:((a=this.meshs.area.clone()).geometry=a.geometry.clone(),a.geometry.verticesNeedUpdate=!0,a.drawMode=i.TriangleStripDrawMode);var o=this.generatePoints(e[0],e[1]);a.geometry.addAttribute("position",new i.BufferAttribute(o,3)),a.geometry.computeBoundingBox(),this.pigeonMap.addAtCoordinate(a,[e[0].x,e[0].y,.2]),n.areas[t]=a}}},{key:"generatePoints",value:function(e,t){return e&&t?new Float32Array([0,0,.2,t.x-e.x,0,0,0,t.y-e.y,0,t.x-e.x,t.y-e.y,0]):new Float32Array([])}}]),e}();t.default=o},400:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=t.pigeonMap,this.initMesh(),this.listenAddPoint()}return a(e,[{key:"initMesh",value:function(){this.meshs={},this.meshs.point=new i.Mesh(new i.SphereGeometry(.2,8,8),new i.MeshPhongMaterial({color:16776960})),this.meshs.startPoint=new i.Mesh(new i.SphereGeometry(.2,8,8),new i.MeshPhongMaterial({color:15794e3})),this.meshs.targetPoint=new i.Group;var e=new i.Mesh(new i.BoxGeometry(1.7,.8,1.2),new i.MeshPhongMaterial({color:16715775})),t=new i.Geometry;t.vertices.push(new i.Vector3(0,0,0),new i.Vector3(2,0,0),new i.Vector3(2,0,0),new i.Vector3(1.7,.4,0),new i.Vector3(2,0,0),new i.Vector3(1.7,-.4,0));var n=new i.LineSegments(t,new i.MeshPhongMaterial({color:16715775}));this.meshs.targetPoint.box=e,this.meshs.targetPoint.arrow=n,this.meshs.targetPoint.add(e),this.meshs.targetPoint.add(n)}},{key:"listenAddPoint",value:function(){var e=this;window.globalState.addEventListener("addPoint",function(t){e.addPoint(t.data,t.data.thing)}),window.globalState.addEventListener("addStartPoint",function(t){e.addStartPoint(t.data,t.data.thing)})}},{key:"addPoints",value:function(e,t){var n=this,a=e.goal.script,i=function(e){var i=a[e];i.location.map(function(a,o){n.addPoint({pointIndex:o,goalIndex:e,orientation:i.orientation,location:a},t)})};for(var o in a)i(o);e.initlocation.map(function(e,a){0!==a&&n.addStartPoint({pointIndex:a,location:e},t)})}},{key:"addPoint",value:function(e,t){t.points||(t.points=[]);var n=this.getPointFromMesh(t.points,e);return n?this.pigeonMap.addAtCoordinate(n,[e.location.x,e.location.y,.5]):n=this.addNewPoint(e,t),n.userData.pointIndex=e.pointIndex,n.userData.thing=t,n.userData.goalIndex=parseInt(e.goalIndex),n}},{key:"addPointEvents",value:function(e){var t=this;e.addEventListener("dragover",function(n){var a=n.coord;t.pigeonMap.addAtCoordinate(e,[a.x,a.y,.5]),window.globalState.dispatchEvent({type:"changePoint",coord:a,point:e})})}},{key:"addNewPoint",value:function(e,t){var n=void 0;return"gplus"===window.globalState.schema.objects[t.userData.name].role.name?((n=this.meshs.targetPoint.clone()).name="targetPoint",n.thing=t):((n=this.meshs.point.clone()).name="point",n.geometry=n.geometry.clone(),this.addPointEvents(n)),t.points.push(n),this.pigeonMap.addAtCoordinate(n,[e.location.x,e.location.y,.5]),n.parent.rotation.z=e.orientation&&e.orientation[2]||0,n}},{key:"addStartPoint",value:function(e,t){t.startPoints||(t.startPoints=[]);var n=this.getPointFromMesh(t.startPoints,e);return n?this.pigeonMap.moveToCoordinate(n,[e.location.x,e.location.y,.5]):(n=this.meshs.startPoint.clone(),t.startPoints.push(n),n.userData.thing=t,this.addPointEvents(n),this.pigeonMap.addAtCoordinate(n,[e.location.x,e.location.y,.5])),n.name="point",n.userData.pointIndex=e.pointIndex,n.userData.goalIndex="start",n}},{key:"getPointFromMesh",value:function(e,t){for(var n in e)if(e[n].userData.pointIndex===t.pointIndex&&e[n].userData.goalIndex===t.goalIndex)return e[n];return!1}}]),e}();t.default=o},401:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=n(402),r=(a=o)&&a.__esModule?a:{default:a};var l=window.THREE,s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=t.pigeonMap,this.initMeshs(),this.listenEvents(),this.objLoader=new r.default}return i(e,[{key:"listenEvents",value:function(){var e=this;window.globalState.addEventListener("deleteThing",function(t){if(window.globalState.selectthing){var n=window.globalState.selectthing;window.globalState.dispatchEvent({type:"deselect"}),e.deleteThing(n),n=null,window.globalState.dispatchEvent({type:"removeThing",data:t})}}),window.globalState.addEventListener("deselect",function(e){window.globalState.selectthing=null})}},{key:"deleteThing",value:function(e){window.globalState.controls.thingControl.detach(),window.globalState.controls.targetPointContorl.detach();var t=e.userData.name;if(window.globalState.history.removeObject(t),e.points&&e.points.map(function(e){e.parent.parent&&e.parent.parent.remove(e.parent)}),e.startPoints&&e.startPoints.map(function(e){e.parent.parent.remove(e.parent)}),e.areas)for(var n in e.areas)e.areas[n].parent.remove(e.areas[n]);e.line&&this.pigeonMap.remove(e.line),delete e.line,e.parent.parent.remove(e.parent),window.globalState.things=window.globalState.things.filter(function(t){return t.uuid!==e.uuid}),window.globalState.dispatchEvent({type:"detachThing"}),"gplus"===e.userData.role.name&&delete window.globalState.history.XG}},{key:"initMeshs",value:function(){this.meshs=[],this.meshs.thing=new l.Mesh(new l.BoxGeometry(1,2,1),new l.MeshPhongMaterial({color:8956620,opacity:.8,transparent:!0}))}},{key:"addThing",value:function(e,t,n){if("gplus"===e.role.name)return this.addXG(e,t,n);var a=e.role.appearance,i=void 0;if(t)i=t;else{var o=this.pigeonMap.inputHandler.getHoveredElement(!0);if(!o)return;(i=o.point.clone()).x-=this.pigeonMap.world.position.x,i.y-=this.pigeonMap.world.position.y,i.z=a.height/2,e.initlocation=[i],e.initorient=[0,0,0]}var r=this.meshs.thing.clone();return r.geometry=new l.BoxGeometry(a.length,a.width,a.height),r.name="thing",r.aname=e.name,this.pigeonMap.addAtCoordinate(r,[i.x,i.y,a.height/2]),r.userData=e,r.parent.rotation.z=e.initorient&&(e.initorient[2]||0),window.globalState.things.push(r),window.globalState.dispatchEvent({type:"addThing"}),window.globalState.history.addObject(e),n&&n(r),r}},{key:"addXG",value:function(e,t,n){var a=this;if(!window.globalState.models.xg)return this.objLoader.loadXG().then(function(i){a.addXG(e,t,n)}),!1;var i=void 0;if(t)i=t;else{var o=this.pigeonMap.inputHandler.getHoveredElement(!0);if(!o)return;(i=o.point.clone()).x-=this.pigeonMap.world.position.x,i.y-=this.pigeonMap.world.position.y,e.name="xg",e.initlocation=[i],e.initorient=[0,0,0]}window.globalState.history.XG&&this.deleteThing(window.globalState.history.XG);var r=window.globalState.models.xg.clone();return r.name="thing",r.userData=e,window.globalState.history.XG=r,this.pigeonMap.addAtCoordinate(r,[i.x,i.y,i.z]),r.parent.rotation.z=e.initorient&&(e.initorient[2]||0),window.globalState.history.addObject(e),n&&n(r),r}}]),e}();t.default=s},402:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return a(e,[{key:"loadXG",value:function(e){return new Promise(function(e){var t=new i.MTLLoader;t.setCrossOrigin(!0),t.setPath("//et-asim-platform.oss-cn-shanghai.aliyuncs.com/studio-car-models/models/"),t.load("yunm.mtl",function(t){var n=new i.OBJLoader;n.setMaterials(t),n.load("//et-asim-platform.oss-cn-shanghai.aliyuncs.com/studio-car-models/models/yunm.obj",function(t){window.mesh=t,t.children[0].position.x=-63,t.children[0].position.z=46.8,t.children[0].position.y=-.35,t.scale.addScalar(.5),t.rotation.x=Math.PI/2,window.globalState.models||(window.globalState.models={}),window.globalState.models.xg=t,e(t)})})})}}]),e}();t.default=o},403:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=t.pigeonMap,this.initMesh(),this.listenEvents()}return a(e,[{key:"listenEvents",value:function(){var e=this;window.globalState.addEventListener("addArea",function(t){var n=t.data.thing;e.update(n)}),window.globalState.addEventListener("addPoint",function(t){var n=t.data.thing;e.update(n)}),window.globalState.addEventListener("changething",function(t){var n=t.mesh;e.update(n)}),window.globalState.addEventListener("updateLine",function(t){var n=t.mesh;e.update(n)})}},{key:"initMesh",value:function(){this.material=new i.LineBasicMaterial({transparent:!0,opacity:.3,color:15793925}),this.geometry=new i.BufferGeometry,this.geometry.addAttribute("position",new i.BufferAttribute(new Float32Array([0,0,-.1,.1,.1,-.1]),3)),this.line=new i.Line(this.geometry,this.material)}},{key:"update",value:function(e){if("gplus"!==e.userData.role.name){var t=window.globalState.schema.objects[e.userData.name];e.line||this.addLine(e);var n=e.line,a=t.goal.script,o=[];if(a.length<1)return!1;var r=t.initlocation[0];for(var l in o.push(0,0,0),a){var s=a[l].location[0];o.push(s.x-r.x,s.y-r.y,0)}n.geometry.addAttribute("position",new i.BufferAttribute(new Float32Array(o),3)),n.geometry.computeBoundingBox(),this.pigeonMap.moveToCoordinate(n,[r.x,r.y,.5])}}},{key:"addLine",value:function(e){e.line=this.line.clone(),e.line.geometry=this.geometry.clone(),this.pigeonMap.addAtCoordinate(e.line,[0,0])}}]),e}();t.default=o},404:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=t.pigeonMap,this.initMesh(),this.listenEvents()}return a(e,[{key:"initMesh",value:function(){this.geometry=new i.BufferGeometry,this.lineMaterial=new i.LineBasicMaterial({color:14504858}),this.lineHoverMaterial=new i.LineBasicMaterial({color:16449515}),this.line=new i.Line(this.geometry,this.lineMaterial),this.pointMaterial=new i.MeshPhongMaterial({color:14504858}),this.pointHoverMaterial=new i.MeshPhongMaterial({color:16449515}),this.point=new i.Mesh(new i.SphereGeometry(.2,8,8),this.pointMaterial)}},{key:"listenEvents",value:function(){var e=this;window.globalState.addEventListener("addTriggerPoint",function(t){var n=t.coord,a=t.object;e.addPoint({coord:n,object:a}),e.updateLine(a),e.updateSchema(a)}),window.globalState.addEventListener("deselect",function(t){e.leaveObject(e.selecting,!0),e.selecting=null}),window.globalState.addEventListener("deleteThing",function(t){e.selecting&&(e.deleteTrigger(e.selecting),e.selecting=null,window.globalState.dispatchEvent({type:"deselect"}))}),window.globalState.addEventListener("triggerMousemove",function(t){var n=t.coord,a=t.object;a.hoverPoint?e.pigeonMap.addAtCoordinate(a.hoverPoint,[n.x,n.y]):a.hoverPoint=e.addHoverPoint({coord:n,object:a}),e.updateLine(a)})}},{key:"deleteTrigger",value:function(e){var t=this;delete window.globalState.schema.triggers[e.name],window.globalState.triggers.filter(function(t){return t.uuid!==e.uuid}),e.points.map(function(e){e.removeEventListener(),t.pigeonMap.remove(e)}),e.points=null,e.removeEventListener(),this.pigeonMap.remove(e)}},{key:"addNewTrigger",value:function(e){var t=this.line.clone();t.geometry=this.line.geometry.clone(),t.points=[],t.name="trigger_"+(new Date).getTime();var n=e;return n.name=t.name,t.userData=e,window.globalState.history.modifyTrigger(n),t}},{key:"addTrigger",value:function(e){var t=this.line.clone();return t.geometry=this.line.geometry.clone(),t.points=[],t.userData=e,t.name=e.name,t}},{key:"addPoint",value:function(e){var t=e.coord,n=e.object,a=this.point.clone();a.name="triggerAreaPoint",this.pigeonMap.addAtCoordinate(a,[t.x,t.y,.5]),n.points||(n.points=[]),n.points.length<1&&this.addSelectEvents(n),this.addPointSelectEvents(a),a.line=n,n.points.push(a)}},{key:"addHoverPoint",value:function(e){var t=e.coord,n=e.object,a=this.point.clone();return a.name="triggerAreaPoint",this.pigeonMap.addAtCoordinate(a,[t.x,t.y,.5]),a.line=n,a}},{key:"addSelectEvents",value:function(e){var t=this;e.addEventListener("click",function(n){t.selectObject(e)}),e.addEventListener("mouseover",function(n){t.hoverPoint||t.hoverObject(e)}),e.addEventListener("mouseout",function(n){t.leaveObject(e)}),window.globalState.triggers.push(e)}},{key:"addPointSelectEvents",value:function(e){var t=this;e.addEventListener("click",function(n){e.line.hoverPoint&&e.line.hoverPoint.visible||t.selectObject(e.line)}),e.addEventListener("mouseover",function(n){t.hoverObject(e.line)}),e.addEventListener("mouseout",function(n){t.leaveObject(e.line)}),e.addEventListener("dragover",function(n){var a=n.coord;t.pigeonMap.addAtCoordinate(e,[a.x,a.y,.5]),t.updateLine(e.line),t.updateSchema(e.line)})}},{key:"selectObject",value:function(e){window.globalState.dispatchEvent({type:"deselect",object:e}),window.globalState.dispatchEvent({type:"selectTriggerArea",object:e}),this.selecting=e,this.hoverObject(e)}},{key:"hoverObject",value:function(e){var t=this;e.material=this.lineHoverMaterial,e.points.map(function(e){e.material=t.pointHoverMaterial})}},{key:"leaveObject",value:function(e,t){var n=this;(t||e!==this.selecting)&&e&&(e.material=this.lineMaterial,e.points.map(function(e){e.material=n.pointMaterial}))}},{key:"updateLine",value:function(e){this.baseXYZ=e.points[0].parent.position.clone();var t=this.updatePoints(e);e.geometry.addAttribute("position",new i.BufferAttribute(t,3)),e.geometry.computeBoundingSphere(),this.pigeonMap.addAtCoordinate(e,[this.baseXYZ.x,this.baseXYZ.y,this.baseXYZ.z])}},{key:"updateSchema",value:function(e){var t=window.globalState.schema.triggers[e.name],n=[];e.points.map(function(e){n.push(e.parent.position)}),t.points=n}},{key:"updatePoints",value:function(e){var t=this,n=e.points,a=[];if(n.map(function(e){var n=e.parent.position;a.push(n.x-t.baseXYZ.x,n.y-t.baseXYZ.y,n.z-t.baseXYZ.z)}),e.hoverPoint&&e.hoverPoint.visible){var i=e.hoverPoint.parent.position;a.push(i.x-this.baseXYZ.x,i.y-this.baseXYZ.y,i.z-this.baseXYZ.z)}return a.push(a[0],a[1],a[2]),new Float32Array(a)}}]),e}();t.default=o},405:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pigeonMap=t.pigeonMap,this.initMesh(),this.listenEvents()}return a(e,[{key:"initMesh",value:function(){this.geometry=new i.BufferGeometry,this.lineMaterial=new i.LineBasicMaterial({color:8562421}),this.lineHoverMaterial=new i.LineBasicMaterial({color:16440063}),this.line=new i.Line(this.geometry,this.lineMaterial),this.pointMaterial=new i.MeshPhongMaterial({color:8562421}),this.pointHoverMaterial=new i.MeshPhongMaterial({color:16440063}),this.point=new i.Mesh(new i.SphereGeometry(.2,8,8),this.pointMaterial),this.areaMaterial=new i.MeshBasicMaterial({color:8562421,transparent:!0,opacity:.2}),this.areaHoverMaterial=new i.MeshBasicMaterial({color:16440063,transparent:!0,opacity:.6}),this.area=new i.Mesh(new i.BufferGeometry,this.areaMaterial)}},{key:"listenEvents",value:function(){var e=this;window.globalState.addEventListener("addTrafficPoint",function(t){var n=t.coord,a=t.object;e.addPoint({coord:n,object:a}),e.updateLine(a)}),window.globalState.addEventListener("deselect",function(t){e.leaveObject(e.selecting,!0),e.selecting=null}),window.globalState.addEventListener("deleteThing",function(t){e.selecting&&(e.deleteTraffic(e.selecting),e.selecting=null,window.globalState.dispatchEvent({type:"deselect"}))}),window.globalState.addEventListener("trafficMousemove",function(t){var n=t.coord,a=t.object;a.hoverPoint?e.pigeonMap.addAtCoordinate(a.hoverPoint,[n.x,n.y]):a.hoverPoint=e.addHoverPoint({coord:n,object:a}),e.updateLine(a)})}},{key:"deleteTraffic",value:function(e){var t=this;window.globalState.trafficAreas.filter(function(t){return t.uuid!==e.uuid}),e.points.map(function(e){e.removeEventListener(),t.pigeonMap.remove(e)}),e.points=null,e.removeEventListener(),this.pigeonMap.remove(e)}},{key:"addNewTraffic",value:function(e){var t=this.line.clone();t.geometry=this.line.geometry.clone(),t.points=[];var n=this.area.clone();return n.geometry=n.geometry.clone(),t.add(n),t.area=n,t.name=e.name,t.userData=e,t}},{key:"addTraffic",value:function(e){var t=this.line.clone();return t.geometry=this.line.geometry.clone(),t.points=[],t.userData=e,t.name=e.name,t}},{key:"addPoint",value:function(e){var t=e.coord,n=e.object,a=this.point.clone();a.name="trafficAreaPoint",this.pigeonMap.addAtCoordinate(a,[t.x,t.y,.5]),n.points||(n.points=[]),n.points.length<1&&this.addSelectEvents(n),this.addPointSelectEvents(a),a.line=n,n.points.push(a)}},{key:"addHoverPoint",value:function(e){var t=e.coord,n=e.object,a=this.point.clone();return a.name="trafficAreaPoint",this.pigeonMap.addAtCoordinate(a,[t.x,t.y,.5]),a.line=n,a}},{key:"addSelectEvents",value:function(e){}},{key:"addPointSelectEvents",value:function(e){var t=this;e.addEventListener("dragover",function(n){var a=n.coord;t.pigeonMap.addAtCoordinate(e,[a.x,a.y,.5]),t.updateLine(e.line),window.globalState.dispatchEvent({type:"modifyTrafficArea",object:e.line,data:e.line.userData})})}},{key:"selectObject",value:function(e){window.globalState.dispatchEvent({type:"deselect"}),window.globalState.dispatchEvent({type:"selectTrafficArea",object:e}),this.selecting=e,this.hoverObject(e)}},{key:"hoverObject",value:function(e){var t=this;e.material=this.lineHoverMaterial,e.points.map(function(e){e.material=t.pointHoverMaterial}),e.area.material=this.areaHoverMaterial}},{key:"leaveObject",value:function(e,t){var n=this;(t||e!==this.selecting)&&e&&(e.material=this.lineMaterial,e.points.map(function(e){e.material=n.pointMaterial}),e.area.material=this.areaMaterial)}},{key:"updateLine",value:function(e){if(!(e.points.length<1)){this.baseXYZ=e.points[0].parent.position.clone();var t=this.updatePoints(e);this.updateArea(e,t),e.geometry.addAttribute("position",new i.BufferAttribute(new Float32Array(t),3)),e.geometry.computeBoundingSphere(),this.pigeonMap.addAtCoordinate(e,[this.baseXYZ.x,this.baseXYZ.y,this.baseXYZ.z])}}},{key:"updateArea",value:function(e,t){var n=e.area,a=(0,window.WatchMap.earcut)(t,!1,3),o=[];a.map(function(e){o.push(t[3*e+0],t[3*e+1],t[3*e+2])}),n.geometry.addAttribute("position",new i.BufferAttribute(new Float32Array(o),3)),n.geometry.computeBoundingSphere()}},{key:"updatePoints",value:function(e){var t=this,n=e.points,a=[];if(n.map(function(e){var n=e.parent.position;a.push(n.x-t.baseXYZ.x,n.y-t.baseXYZ.y,n.z-t.baseXYZ.z)}),e.hoverPoint&&e.hoverPoint.visible){var i=e.hoverPoint.parent.position;a.push(i.x-this.baseXYZ.x,i.y-this.baseXYZ.y,i.z-this.baseXYZ.z)}return a.push(a[0],a[1],a[2]),a}}]),e}();t.default=o},406:function(e,t,n){"use strict";!function(){var e=function(e){THREE.MeshBasicMaterial.call(this),this.depthTest=!1,this.depthWrite=!1,this.fog=!1,this.side=THREE.FrontSide,this.transparent=!0,this.setValues(e),this.oldColor=this.color.clone(),this.oldOpacity=this.opacity,this.highlight=function(e){e?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};(e.prototype=Object.create(THREE.MeshBasicMaterial.prototype)).constructor=e;var t=function(e){THREE.LineBasicMaterial.call(this),this.depthTest=!1,this.depthWrite=!1,this.fog=!1,this.transparent=!0,this.linewidth=1,this.setValues(e),this.oldColor=this.color.clone(),this.oldOpacity=this.opacity,this.highlight=function(e){e?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};(t.prototype=Object.create(THREE.LineBasicMaterial.prototype)).constructor=t;var n=new e({visible:!1,transparent:!1});THREE.TransformGizmo=function(){this.init=function(){THREE.Object3D.call(this),this.handles=new THREE.Object3D,this.pickers=new THREE.Object3D,this.planes=new THREE.Object3D,this.planes.visible=!1,this.add(this.handles),this.add(this.pickers),this.add(this.planes);var e=new THREE.PlaneBufferGeometry(50,50,2,2),t=new THREE.MeshBasicMaterial({visible:!1,side:THREE.DoubleSide}),n={XY:new THREE.Mesh(e,t),YZ:new THREE.Mesh(e,t),XZ:new THREE.Mesh(e,t),XYZE:new THREE.Mesh(e,t)};for(var a in this.activePlane=n.XYZE,n.YZ.rotation.set(0,Math.PI/2,0),n.XZ.rotation.set(-Math.PI/2,0,0),n)n[a].name=a,this.planes.add(n[a]),this.planes[a]=n[a];var i=function(e,t){for(var n in e)for(a=e[n].length;a--;){var i=e[n][a][0],o=e[n][a][1],r=e[n][a][2];i.name=n,i.renderOrder=1/0,o&&i.position.set(o[0],o[1],o[2]),r&&i.rotation.set(r[0],r[1],r[2]),t.add(i)}};i(this.handleGizmos,this.handles),i(this.pickerGizmos,this.pickers),this.traverse(function(e){if(e instanceof THREE.Mesh){e.updateMatrix();var t=e.geometry.clone();t.applyMatrix(e.matrix),e.geometry=t,e.position.set(0,0,0),e.rotation.set(0,0,0),e.scale.set(1,1,1)}})},this.highlight=function(e){this.traverse(function(t){t.material&&t.material.highlight&&(t.name===e?t.material.highlight(!0):t.material.highlight(!1))})}},THREE.TransformGizmo.prototype=Object.create(THREE.Object3D.prototype),THREE.TransformGizmo.prototype.constructor=THREE.TransformGizmo,THREE.TransformGizmo.prototype.update=function(e,t){var n=new THREE.Vector3(0,0,0),a=new THREE.Vector3(0,1,0),i=new THREE.Matrix4;this.traverse(function(o){-1!==o.name.search("E")?o.quaternion.setFromRotationMatrix(i.lookAt(t,n,a)):-1===o.name.search("X")&&-1===o.name.search("Y")&&-1===o.name.search("Z")||o.quaternion.setFromEuler(e)})},THREE.TransformGizmoTranslate=function(){THREE.TransformGizmo.call(this);var a=new THREE.ConeBufferGeometry(.05,.2,12,1,!1);a.translate(0,.5,0);var i=new THREE.BufferGeometry;i.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,1,0,0],3));var o=new THREE.BufferGeometry;o.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,1,0],3)),(new THREE.BufferGeometry).addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,0,1],3)),this.handleGizmos={X:[[new THREE.Mesh(a,new e({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(i,new t({color:16711680}))]],Y:[[new THREE.Mesh(a,new e({color:65280})),[0,.5,0]],[new THREE.Line(o,new t({color:65280}))]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new e({color:16776960,opacity:.25})),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new e({color:65535,opacity:.25})),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.29,.29),new e({color:16711935,opacity:.25})),[.15,0,.15],[-Math.PI/2,0,0]]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),n),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),n),[0,.6,0]]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),n),[.2,.2,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),n),[0,.2,.2],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.4,.4),n),[.2,0,.2],[-Math.PI/2,0,0]]]},this.setActivePlane=function(e,t){var n=new THREE.Matrix4;t.applyMatrix4(n.getInverse(n.extractRotation(this.planes.XY.matrixWorld))),"X"===e&&(this.activePlane=this.planes.XY,Math.abs(t.y)>Math.abs(t.z)&&(this.activePlane=this.planes.XZ)),"Y"===e&&(this.activePlane=this.planes.XY,Math.abs(t.x)>Math.abs(t.z)&&(this.activePlane=this.planes.YZ)),"Z"===e&&(this.activePlane=this.planes.XZ,Math.abs(t.x)<Math.abs(t.y)&&(this.activePlane=this.planes.YZ)),"XYZ"===e&&(this.activePlane=this.planes.XYZE),"XY"===e&&(this.activePlane=this.planes.XY),"YZ"===e&&(this.activePlane=this.planes.YZ),"XZ"===e&&(this.activePlane=this.planes.XZ)},this.init()},THREE.TransformGizmoTranslate.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoTranslate.prototype.constructor=THREE.TransformGizmoTranslate,THREE.TransformGizmoRotate=function(){THREE.TransformGizmo.call(this);this.handleGizmos={Z:[[new THREE.Line(new function(e,t,n){var a=new THREE.BufferGeometry,i=[];n=n||1;for(var o=0;o<=64*n;++o)"x"===t&&i.push(0,Math.cos(o/32*Math.PI)*e,Math.sin(o/32*Math.PI)*e),"y"===t&&i.push(Math.cos(o/32*Math.PI)*e,0,Math.sin(o/32*Math.PI)*e),"z"===t&&i.push(Math.sin(o/32*Math.PI)*e,Math.cos(o/32*Math.PI)*e,0);return a.addAttribute("position",new THREE.Float32BufferAttribute(i,3)),a}(1,"z",.5),new t({color:255}))]]},this.pickerGizmos={Z:[[new THREE.Mesh(new THREE.TorusBufferGeometry(1,.12,4,12,Math.PI),n),[0,0,0],[0,0,-Math.PI/2]]]},this.setActivePlane=function(e){"E"===e&&(this.activePlane=this.planes.XYZE),"X"===e&&(this.activePlane=this.planes.YZ),"Y"===e&&(this.activePlane=this.planes.XZ),"Z"===e&&(this.activePlane=this.planes.XY)},this.update=function(e,t){THREE.TransformGizmo.prototype.update.apply(this,arguments);var n=new THREE.Matrix4,a=new THREE.Euler(0,0,1),i=new THREE.Quaternion,o=new THREE.Vector3(1,0,0),r=new THREE.Vector3(0,1,0),l=new THREE.Vector3(0,0,1),s=new THREE.Quaternion,c=new THREE.Quaternion,u=new THREE.Quaternion,d=t.clone();a.copy(this.planes.XY.rotation),i.setFromEuler(a),n.makeRotationFromQuaternion(i).getInverse(n),d.applyMatrix4(n),this.traverse(function(e){i.setFromEuler(a),"X"===e.name&&(s.setFromAxisAngle(o,Math.atan2(-d.y,d.z)),i.multiplyQuaternions(i,s),e.quaternion.copy(i)),"Y"===e.name&&(c.setFromAxisAngle(r,Math.atan2(d.x,d.z)),i.multiplyQuaternions(i,c),e.quaternion.copy(i)),"Z"===e.name&&(u.setFromAxisAngle(l,Math.atan2(d.y,d.x)),i.multiplyQuaternions(i,u),e.quaternion.copy(i))})},this.init()},THREE.TransformGizmoRotate.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoRotate.prototype.constructor=THREE.TransformGizmoRotate,THREE.TransformGizmoScale=function(){THREE.TransformGizmo.call(this);var a=new THREE.BoxBufferGeometry(.125,.125,.125);a.translate(0,.5,0);var i=new THREE.BufferGeometry;i.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,1,0,0],3));var o=new THREE.BufferGeometry;o.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,1,0],3));var r=new THREE.BufferGeometry;r.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,0,1],3)),this.handleGizmos={X:[[new THREE.Mesh(a,new e({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(i,new t({color:16711680}))]],Y:[[new THREE.Mesh(a,new e({color:65280})),[0,.5,0]],[new THREE.Line(o,new t({color:65280}))]],Z:[[new THREE.Mesh(a,new e({color:255})),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Line(r,new t({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.BoxBufferGeometry(.125,.125,.125),new e({color:16777215,opacity:.25}))]]},this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),n),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),n),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),n),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.BoxBufferGeometry(.4,.4,.4),n)]]},this.setActivePlane=function(e,t){var n=new THREE.Matrix4;t.applyMatrix4(n.getInverse(n.extractRotation(this.planes.XY.matrixWorld))),"X"===e&&(this.activePlane=this.planes.XY,Math.abs(t.y)>Math.abs(t.z)&&(this.activePlane=this.planes.XZ)),"Y"===e&&(this.activePlane=this.planes.XY,Math.abs(t.x)>Math.abs(t.z)&&(this.activePlane=this.planes.YZ)),"Z"===e&&(this.activePlane=this.planes.XZ,Math.abs(t.x)>Math.abs(t.y)&&(this.activePlane=this.planes.YZ)),"XYZ"===e&&(this.activePlane=this.planes.XYZE)},this.init()},THREE.TransformGizmoScale.prototype=Object.create(THREE.TransformGizmo.prototype),THREE.TransformGizmoScale.prototype.constructor=THREE.TransformGizmoScale,THREE.TransformControls=function(e,t){THREE.Object3D.call(this),t=void 0!==t?t:document,this.object=void 0,this.visible=!1,this.translationSnap=null,this.rotationSnap=null,this.space="world",this.size=1,this.axis=null;var n=this,a="translate",i=!1,o={translate:new THREE.TransformGizmoTranslate,rotate:new THREE.TransformGizmoRotate,scale:new THREE.TransformGizmoScale};for(var r in o){var l=o[r];l.visible=r===a,this.add(l)}var s={type:"change"},c={type:"mouseDown"},u={type:"mouseUp",mode:a},d={type:"objectChange"},p=new THREE.Raycaster,f=new THREE.Vector2,h=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3,v=new THREE.Vector3,b=1,y=new THREE.Matrix4,w=new THREE.Vector3,E=new THREE.Matrix4,x=new THREE.Vector3,S=new THREE.Quaternion,T=new THREE.Vector3(1,0,0),j=new THREE.Vector3(0,1,0),k=new THREE.Vector3(0,0,1),_=new THREE.Quaternion,P=new THREE.Quaternion,M=new THREE.Quaternion,N=new THREE.Quaternion,O=new THREE.Quaternion,A=new THREE.Vector3,C=new THREE.Vector3,R=new THREE.Matrix4,I=new THREE.Matrix4,D=new THREE.Vector3,X=new THREE.Vector3,z=new THREE.Euler,H=new THREE.Matrix4,F=new THREE.Vector3,B=new THREE.Euler;function L(e){if(void 0!==n.object&&!0!==i&&(void 0===e.button||0===e.button)){var t=U(e.changedTouches?e.changedTouches[0]:e,o[a].pickers.children),r=null;t&&(r=t.object.name,e.preventDefault()),n.axis!==r&&(n.axis=r,n.update(),n.dispatchEvent(s))}}function V(e){if(void 0!==n.object&&!0!==i&&(void 0===e.button||0===e.button)){var t=e.changedTouches?e.changedTouches[0]:e;if(0===t.button||void 0===t.button){var r=U(t,o[a].pickers.children);if(r){e.preventDefault(),e.stopPropagation(),n.axis=r.object.name,n.dispatchEvent(c),n.update(),w.copy(F).sub(X).normalize(),o[a].setActivePlane(n.axis,w);var l=U(t,[o[a].activePlane]);l&&(A.copy(n.object.position),C.copy(n.object.scale),R.extractRotation(n.object.matrix),H.extractRotation(n.object.matrixWorld),I.extractRotation(n.object.parent.matrixWorld),D.setFromMatrixScale(E.getInverse(n.object.parent.matrixWorld)),m.copy(l.point))}}i=!0}}function G(e){if(void 0!==n.object&&null!==n.axis&&!1!==i&&(void 0===e.button||0===e.button)){var t=U(e.changedTouches?e.changedTouches[0]:e,[o[a].activePlane]);!1!==t&&(e.preventDefault(),e.stopPropagation(),h.copy(t.point),"translate"===a?(h.sub(m),h.multiply(D),"local"===n.space&&(h.applyMatrix4(E.getInverse(H)),-1===n.axis.search("X")&&(h.x=0),-1===n.axis.search("Y")&&(h.y=0),-1===n.axis.search("Z")&&(h.z=0),h.applyMatrix4(R),n.object.position.copy(A),n.object.position.add(h)),"world"!==n.space&&-1===n.axis.search("XYZ")||(-1===n.axis.search("X")&&(h.x=0),-1===n.axis.search("Y")&&(h.y=0),-1===n.axis.search("Z")&&(h.z=0),h.applyMatrix4(E.getInverse(I)),n.object.position.copy(A),n.object.position.add(h)),null!==n.translationSnap&&("local"===n.space&&n.object.position.applyMatrix4(E.getInverse(H)),-1!==n.axis.search("X")&&(n.object.position.x=Math.round(n.object.position.x/n.translationSnap)*n.translationSnap),-1!==n.axis.search("Y")&&(n.object.position.y=Math.round(n.object.position.y/n.translationSnap)*n.translationSnap),-1!==n.axis.search("Z")&&(n.object.position.z=Math.round(n.object.position.z/n.translationSnap)*n.translationSnap),"local"===n.space&&n.object.position.applyMatrix4(H))):"scale"===a?(h.sub(m),h.multiply(D),"local"===n.space&&("XYZ"===n.axis?(b=1+h.y/Math.max(C.x,C.y,C.z),n.object.scale.x=C.x*b,n.object.scale.y=C.y*b,n.object.scale.z=C.z*b):(h.applyMatrix4(E.getInverse(H)),"X"===n.axis&&(n.object.scale.x=C.x*(1+h.x/C.x)),"Y"===n.axis&&(n.object.scale.y=C.y*(1+h.y/C.y)),"Z"===n.axis&&(n.object.scale.z=C.z*(1+h.z/C.z))))):"rotate"===a&&(h.sub(n.object.getWorldPosition(new THREE.Vector3)),h.multiply(D),x.copy(m).sub(X),x.multiply(D),"E"===n.axis?(h.applyMatrix4(E.getInverse(y)),x.applyMatrix4(E.getInverse(y)),g.set(Math.atan2(h.z,h.y),Math.atan2(h.x,h.z),Math.atan2(h.y,h.x)),v.set(Math.atan2(x.z,x.y),Math.atan2(x.x,x.z),Math.atan2(x.y,x.x)),S.setFromRotationMatrix(E.getInverse(I)),O.setFromAxisAngle(w,g.z-v.z),_.setFromRotationMatrix(H),S.multiplyQuaternions(S,O),S.multiplyQuaternions(S,_),n.object.quaternion.copy(S)):"XYZE"===n.axis?(O.setFromEuler(h.clone().cross(x).normalize()),S.setFromRotationMatrix(E.getInverse(I)),P.setFromAxisAngle(O,-h.clone().angleTo(x)),_.setFromRotationMatrix(H),S.multiplyQuaternions(S,P),S.multiplyQuaternions(S,_),n.object.quaternion.copy(S)):"local"===n.space?(h.applyMatrix4(E.getInverse(H)),x.applyMatrix4(E.getInverse(H)),g.set(Math.atan2(h.z,h.y),Math.atan2(h.x,h.z),Math.atan2(h.y,h.x)),v.set(Math.atan2(x.z,x.y),Math.atan2(x.x,x.z),Math.atan2(x.y,x.x)),_.setFromRotationMatrix(R),null!==n.rotationSnap?(P.setFromAxisAngle(T,Math.round((g.x-v.x)/n.rotationSnap)*n.rotationSnap),M.setFromAxisAngle(j,Math.round((g.y-v.y)/n.rotationSnap)*n.rotationSnap),N.setFromAxisAngle(k,Math.round((g.z-v.z)/n.rotationSnap)*n.rotationSnap)):(P.setFromAxisAngle(T,g.x-v.x),M.setFromAxisAngle(j,g.y-v.y),N.setFromAxisAngle(k,g.z-v.z)),"X"===n.axis&&_.multiplyQuaternions(_,P),"Y"===n.axis&&_.multiplyQuaternions(_,M),"Z"===n.axis&&_.multiplyQuaternions(_,N),n.object.quaternion.copy(_)):"world"===n.space&&(g.set(Math.atan2(h.z,h.y),Math.atan2(h.x,h.z),Math.atan2(h.y,h.x)),v.set(Math.atan2(x.z,x.y),Math.atan2(x.x,x.z),Math.atan2(x.y,x.x)),S.setFromRotationMatrix(E.getInverse(I)),null!==n.rotationSnap?(P.setFromAxisAngle(T,Math.round((g.x-v.x)/n.rotationSnap)*n.rotationSnap),M.setFromAxisAngle(j,Math.round((g.y-v.y)/n.rotationSnap)*n.rotationSnap),N.setFromAxisAngle(k,Math.round((g.z-v.z)/n.rotationSnap)*n.rotationSnap)):(P.setFromAxisAngle(T,g.x-v.x),M.setFromAxisAngle(j,g.y-v.y),N.setFromAxisAngle(k,g.z-v.z)),_.setFromRotationMatrix(H),"X"===n.axis&&S.multiplyQuaternions(S,P),"Y"===n.axis&&S.multiplyQuaternions(S,M),"Z"===n.axis&&S.multiplyQuaternions(S,N),S.multiplyQuaternions(S,_),n.object.quaternion.copy(S))),n.update(),n.dispatchEvent(s),n.dispatchEvent(d))}}function Z(e){e.preventDefault(),void 0!==e.button&&0!==e.button||(i&&null!==n.axis&&(u.mode=a,n.dispatchEvent(u)),i=!1,"TouchEvent"in window&&e instanceof TouchEvent?(n.axis=null,n.update(),n.dispatchEvent(s)):L(e))}function U(n,a){var i=t.getBoundingClientRect(),o=(n.clientX-i.left)/i.width,r=(n.clientY-i.top)/i.height;f.set(2*o-1,-2*r+1),p.setFromCamera(f,e);var l=p.intersectObjects(a,!0);return!!l[0]&&l[0]}t.addEventListener("mousedown",V,!1),t.addEventListener("touchstart",V,!1),t.addEventListener("mousemove",L,!1),t.addEventListener("touchmove",L,!1),t.addEventListener("mousemove",G,!1),t.addEventListener("touchmove",G,!1),t.addEventListener("mouseup",Z,!1),t.addEventListener("mouseout",Z,!1),t.addEventListener("touchend",Z,!1),t.addEventListener("touchcancel",Z,!1),t.addEventListener("touchleave",Z,!1),this.dispose=function(){t.removeEventListener("mousedown",V),t.removeEventListener("touchstart",V),t.removeEventListener("mousemove",L),t.removeEventListener("touchmove",L),t.removeEventListener("mousemove",G),t.removeEventListener("touchmove",G),t.removeEventListener("mouseup",Z),t.removeEventListener("mouseout",Z),t.removeEventListener("touchend",Z),t.removeEventListener("touchcancel",Z),t.removeEventListener("touchleave",Z)},this.attach=function(e){this.object=e,this.visible=!0,this.update()},this.detach=function(){this.object=void 0,this.visible=!1,this.axis=null},this.getMode=function(){return a},this.setMode=function(e){for(var t in"scale"===(a=e||a)&&(n.space="local"),o)o[t].visible=t===a;this.update(),n.dispatchEvent(s)},this.setTranslationSnap=function(e){n.translationSnap=e},this.setRotationSnap=function(e){n.rotationSnap=e},this.setSize=function(e){n.size=e,this.update(),n.dispatchEvent(s)},this.setSpace=function(e){n.space=e,this.update(),n.dispatchEvent(s)},this.update=function(){if(void 0!==n.object){var t=n.object.position;X.set(t.x,t.y,t.z),z.setFromRotationMatrix(E.extractRotation(n.object.matrixWorld)),e.updateMatrixWorld(),F.setFromMatrixPosition(e.matrixWorld),B.setFromRotationMatrix(E.extractRotation(e.matrixWorld)),this.position.copy(X),this.scale.set(n.size,n.size,n.size),e instanceof THREE.PerspectiveCamera?w.copy(F).sub(X).normalize():e instanceof THREE.OrthographicCamera&&w.copy(F).normalize(),"local"===n.space?o[a].update(z,w):"world"===n.space&&o[a].update(new THREE.Euler,w),o[a].highlight(n.axis)}}},THREE.TransformControls.prototype=Object.create(THREE.Object3D.prototype),THREE.TransformControls.prototype.constructor=THREE.TransformControls}()},428:function(e,t,n){"use strict";var a,i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};!function e(t,n,i){function o(l,s){if(!n[l]){if(!t[l]){if(!s&&("function"==typeof a&&a))return a(l,!0);if(r)return r(l,!0);var c=new Error("Cannot find module '"+l+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[l]={exports:{}};t[l][0].call(u.exports,function(e){var n=t[l][1][e];return o(n||e)},u,u.exports,e,t,n,i)}return n[l].exports}for(var r="function"==typeof a&&a,l=0;l<i.length;l++)o(i[l]);return o}({1:[function(e,t,n){var a,o,r;r=e("./Utils"),o=e("./Inline"),a=function(){function e(){}return e.indentation=4,e.prototype.dump=function(e,t,n,a,l){var s,c,u,d,p,f,h;if(null==t&&(t=0),null==n&&(n=0),null==a&&(a=!1),null==l&&(l=null),d="",p=n?r.strRepeat(" ",n):"",t<=0||"object"!==(void 0===e?"undefined":i(e))||e instanceof Date||r.isEmpty(e))d+=p+o.dump(e,a,l);else if(e instanceof Array)for(s=0,u=e.length;s<u;s++)f=e[s],d+=p+"-"+((h=t-1<=0||"object"!==(void 0===f?"undefined":i(f))||r.isEmpty(f))?" ":"\n")+this.dump(f,t-1,h?0:n+this.indentation,a,l)+(h?"\n":"");else for(c in e)f=e[c],h=t-1<=0||"object"!==(void 0===f?"undefined":i(f))||r.isEmpty(f),d+=p+o.dump(c,a,l)+":"+(h?" ":"\n")+this.dump(f,t-1,h?0:n+this.indentation,a,l)+(h?"\n":"");return d},e}(),t.exports=a},{"./Inline":6,"./Utils":10}],2:[function(e,t,n){var a,i;i=e("./Pattern"),a=function(){var e;function t(){}return t.LIST_ESCAPEES=["\\","\\\\",'\\"','"',"\0","","","","","","","","\b","\t","\n","\v","\f","\r","","","","","","","","","","","","","","","","","","",(e=String.fromCharCode)(133),e(160),e(8232),e(8233)],t.LIST_ESCAPED=["\\\\",'\\"','\\"','\\"',"\\0","\\x01","\\x02","\\x03","\\x04","\\x05","\\x06","\\a","\\b","\\t","\\n","\\v","\\f","\\r","\\x0e","\\x0f","\\x10","\\x11","\\x12","\\x13","\\x14","\\x15","\\x16","\\x17","\\x18","\\x19","\\x1a","\\e","\\x1c","\\x1d","\\x1e","\\x1f","\\N","\\_","\\L","\\P"],t.MAPPING_ESCAPEES_TO_ESCAPED=function(){var e,n,a,i;for(a={},e=n=0,i=t.LIST_ESCAPEES.length;0<=i?n<i:n>i;e=0<=i?++n:--n)a[t.LIST_ESCAPEES[e]]=t.LIST_ESCAPED[e];return a}(),t.PATTERN_CHARACTERS_TO_ESCAPE=new i("[\\x00-\\x1f]|Â|Â |â¨|â©"),t.PATTERN_MAPPING_ESCAPEES=new i(t.LIST_ESCAPEES.join("|").split("\\").join("\\\\")),t.PATTERN_SINGLE_QUOTING=new i("[\\s'\":{}[\\],&*#?]|^[-?|<>=!%@`]"),t.requiresDoubleQuoting=function(e){return this.PATTERN_CHARACTERS_TO_ESCAPE.test(e)},t.escapeWithDoubleQuotes=function(e){return'"'+this.PATTERN_MAPPING_ESCAPEES.replace(e,function(e){return function(t){return e.MAPPING_ESCAPEES_TO_ESCAPED[t]}}(this))+'"'},t.requiresSingleQuoting=function(e){return this.PATTERN_SINGLE_QUOTING.test(e)},t.escapeWithSingleQuotes=function(e){return"'"+e.replace(/'/g,"''")+"'"},t}(),t.exports=a},{"./Pattern":8}],3:[function(e,t,n){var a,i={}.hasOwnProperty;a=function(e){function t(e,t,n){this.message=e,this.parsedLine=t,this.snippet=n}return function(e,t){for(var n in t)i.call(t,n)&&(e[n]=t[n]);function a(){this.constructor=e}a.prototype=t.prototype,e.prototype=new a,e.__super__=t.prototype}(t,Error),t.prototype.toString=function(){return null!=this.parsedLine&&null!=this.snippet?"<DumpException> "+this.message+" (line "+this.parsedLine+": '"+this.snippet+"')":"<DumpException> "+this.message},t}(),t.exports=a},{}],4:[function(e,t,n){var a,i={}.hasOwnProperty;a=function(e){function t(e,t,n){this.message=e,this.parsedLine=t,this.snippet=n}return function(e,t){for(var n in t)i.call(t,n)&&(e[n]=t[n]);function a(){this.constructor=e}a.prototype=t.prototype,e.prototype=new a,e.__super__=t.prototype}(t,Error),t.prototype.toString=function(){return null!=this.parsedLine&&null!=this.snippet?"<ParseException> "+this.message+" (line "+this.parsedLine+": '"+this.snippet+"')":"<ParseException> "+this.message},t}(),t.exports=a},{}],5:[function(e,t,n){var a,i={}.hasOwnProperty;a=function(e){function t(e,t,n){this.message=e,this.parsedLine=t,this.snippet=n}return function(e,t){for(var n in t)i.call(t,n)&&(e[n]=t[n]);function a(){this.constructor=e}a.prototype=t.prototype,e.prototype=new a,e.__super__=t.prototype}(t,Error),t.prototype.toString=function(){return null!=this.parsedLine&&null!=this.snippet?"<ParseMore> "+this.message+" (line "+this.parsedLine+": '"+this.snippet+"')":"<ParseMore> "+this.message},t}(),t.exports=a},{}],6:[function(e,t,n){var a,o,r,l,s,c,u,d=[].indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1};s=e("./Pattern"),c=e("./Unescaper"),a=e("./Escaper"),u=e("./Utils"),r=e("./Exception/ParseException"),l=e("./Exception/ParseMore"),e("./Exception/DumpException"),o=function(){function e(){}return e.REGEX_QUOTED_STRING="(?:\"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'(?:[^']*(?:''[^']*)*)')",e.PATTERN_TRAILING_COMMENTS=new s("^\\s*#.*$"),e.PATTERN_QUOTED_SCALAR=new s("^"+e.REGEX_QUOTED_STRING),e.PATTERN_THOUSAND_NUMERIC_SCALAR=new s("^(-|\\+)?[0-9,]+(\\.[0-9]+)?$"),e.PATTERN_SCALAR_BY_DELIMITERS={},e.settings={},e.configure=function(e,t){null==e&&(e=null),null==t&&(t=null),this.settings.exceptionOnInvalidType=e,this.settings.objectDecoder=t},e.parse=function(e,t,n){var a,i;if(null==t&&(t=!1),null==n&&(n=null),this.settings.exceptionOnInvalidType=t,this.settings.objectDecoder=n,null==e)return"";if(0===(e=u.trim(e)).length)return"";switch(a={exceptionOnInvalidType:t,objectDecoder:n,i:0},e.charAt(0)){case"[":i=this.parseSequence(e,a),++a.i;break;case"{":i=this.parseMapping(e,a),++a.i;break;default:i=this.parseScalar(e,null,['"',"'"],a)}if(""!==this.PATTERN_TRAILING_COMMENTS.replace(e.slice(a.i),""))throw new r('Unexpected characters near "'+e.slice(a.i)+'".');return i},e.dump=function(e,t,n){var o,r,l;return null==t&&(t=!1),null==n&&(n=null),null==e?"null":"object"===(l=void 0===e?"undefined":i(e))?e instanceof Date?e.toISOString():null==n||"string"!=typeof(r=n(e))&&null==r?this.dumpObject(e):r:"boolean"===l?e?"true":"false":u.isDigits(e)?"string"===l?"'"+e+"'":String(parseInt(e)):u.isNumeric(e)?"string"===l?"'"+e+"'":String(parseFloat(e)):"number"===l?e===1/0?".Inf":e===-1/0?"-.Inf":isNaN(e)?".NaN":e:a.requiresDoubleQuoting(e)?a.escapeWithDoubleQuotes(e):a.requiresSingleQuoting(e)?a.escapeWithSingleQuotes(e):""===e?'""':u.PATTERN_DATE.test(e)?"'"+e+"'":"null"===(o=e.toLowerCase())||"~"===o||"true"===o||"false"===o?"'"+e+"'":e},e.dumpObject=function(e,t,n){var a,i,o,r,l;if(null==n&&(n=null),e instanceof Array){for(r=[],a=0,o=e.length;a<o;a++)l=e[a],r.push(this.dump(l));return"["+r.join(", ")+"]"}for(i in r=[],e)l=e[i],r.push(this.dump(i)+": "+this.dump(l));return"{"+r.join(", ")+"}"},e.parseScalar=function(e,t,n,a,i){var o,l,c,p,f,h,m,g;if(null==t&&(t=null),null==n&&(n=['"',"'"]),null==a&&(a=null),null==i&&(i=!0),null==a&&(a={exceptionOnInvalidType:this.settings.exceptionOnInvalidType,objectDecoder:this.settings.objectDecoder,i:0}),o=a.i,h=e.charAt(o),d.call(n,h)>=0){if(p=this.parseQuotedScalar(e,a),o=a.i,null!=t&&(m=u.ltrim(e.slice(o)," ").charAt(0),!(d.call(t,m)>=0)))throw new r("Unexpected characters ("+e.slice(o)+").")}else{if(t){if(l=t.join("|"),null==(f=this.PATTERN_SCALAR_BY_DELIMITERS[l])&&(f=new s("^(.+?)("+l+")"),this.PATTERN_SCALAR_BY_DELIMITERS[l]=f),!(c=f.exec(e.slice(o))))throw new r("Malformed inline YAML string ("+e+").");o+=(p=c[1]).length}else o+=(p=e.slice(o)).length,-1!==(g=p.indexOf(" #"))&&(p=u.rtrim(p.slice(0,g)));i&&(p=this.evaluateScalar(p,a))}return a.i=o,p},e.parseQuotedScalar=function(e,t){var n,a,i;if(n=t.i,!(a=this.PATTERN_QUOTED_SCALAR.exec(e.slice(n))))throw new l("Malformed inline YAML string ("+e.slice(n)+").");return i=a[0].substr(1,a[0].length-2),i='"'===e.charAt(n)?c.unescapeDoubleQuotedString(i):c.unescapeSingleQuotedString(i),n+=a[0].length,t.i=n,i},e.parseSequence=function(e,t){var n,a,i,o,r,s,c;for(r=[],o=e.length,a=t.i,a+=1;a<o;){switch(t.i=a,e.charAt(a)){case"[":r.push(this.parseSequence(e,t)),a=t.i;break;case"{":r.push(this.parseMapping(e,t)),a=t.i;break;case"]":return r;case",":case" ":case"\n":break;default:if(i='"'===(s=e.charAt(a))||"'"===s,c=this.parseScalar(e,[",","]"],['"',"'"],t),a=t.i,!i&&"string"==typeof c&&(-1!==c.indexOf(": ")||-1!==c.indexOf(":\n")))try{c=this.parseMapping("{"+c+"}")}catch(n){n}r.push(c),--a}++a}throw new l("Malformed inline YAML string "+e)},e.parseMapping=function(e,t){var n,a,i,o,r,s,c;for(r={},o=e.length,a=t.i,a+=1,s=!1;a<o;){switch(t.i=a,e.charAt(a)){case" ":case",":case"\n":++a,t.i=a,s=!0;break;case"}":return r}if(s)s=!1;else for(i=this.parseScalar(e,[":"," ","\n"],['"',"'"],t,!1),a=t.i,n=!1;a<o;){switch(t.i=a,e.charAt(a)){case"[":c=this.parseSequence(e,t),a=t.i,void 0===r[i]&&(r[i]=c),n=!0;break;case"{":c=this.parseMapping(e,t),a=t.i,void 0===r[i]&&(r[i]=c),n=!0;break;case":":case" ":case"\n":break;default:c=this.parseScalar(e,[",","}"],['"',"'"],t),a=t.i,void 0===r[i]&&(r[i]=c),n=!0,--a}if(++a,n)break}}throw new l("Malformed inline YAML string "+e)},e.evaluateScalar=function(e,t){var n,a,i,o,l,s,c,d,p;switch(c=(e=u.trim(e)).toLowerCase()){case"null":case"":case"~":return null;case"true":return!0;case"false":return!1;case".inf":return 1/0;case".nan":return NaN;case"-.inf":return 1/0;default:switch(c.charAt(0)){case"!":switch(-1===(o=e.indexOf(" "))?c:c.slice(0,o)){case"!":return-1!==o?parseInt(this.parseScalar(e.slice(2))):null;case"!str":return u.ltrim(e.slice(4));case"!!str":return u.ltrim(e.slice(5));case"!!int":return parseInt(this.parseScalar(e.slice(5)));case"!!bool":return u.parseBoolean(this.parseScalar(e.slice(6)),!1);case"!!float":return parseFloat(this.parseScalar(e.slice(7)));case"!!timestamp":return u.stringToDate(u.ltrim(e.slice(11)));default:if(null==t&&(t={exceptionOnInvalidType:this.settings.exceptionOnInvalidType,objectDecoder:this.settings.objectDecoder,i:0}),l=t.objectDecoder,i=t.exceptionOnInvalidType,l)return-1===(o=(p=u.rtrim(e)).indexOf(" "))?l(p,null):((d=u.ltrim(p.slice(o+1))).length>0||(d=null),l(p.slice(0,o),d));if(i)throw new r("Custom object support when parsing a YAML file has been disabled.");return null}break;case"0":return"0x"===e.slice(0,2)?u.hexDec(e):u.isDigits(e)?u.octDec(e):u.isNumeric(e)?parseFloat(e):e;case"+":return u.isDigits(e)?(s=e,n=parseInt(s),s===String(n)?n:s):u.isNumeric(e)?parseFloat(e):this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(e)?parseFloat(e.replace(",","")):e;case"-":return u.isDigits(e.slice(1))?"0"===e.charAt(1)?-u.octDec(e.slice(1)):(s=e.slice(1),n=parseInt(s),s===String(n)?-n:-s):u.isNumeric(e)?parseFloat(e):this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(e)?parseFloat(e.replace(",","")):e;default:return(a=u.stringToDate(e))?a:u.isNumeric(e)?parseFloat(e):this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(e)?parseFloat(e.replace(",","")):e}}},e}(),t.exports=o},{"./Escaper":2,"./Exception/DumpException":3,"./Exception/ParseException":4,"./Exception/ParseMore":5,"./Pattern":8,"./Unescaper":9,"./Utils":10}],7:[function(e,t,n){var a,o,r,l,s,c;a=e("./Inline"),s=e("./Pattern"),c=e("./Utils"),o=e("./Exception/ParseException"),r=e("./Exception/ParseMore"),l=function(){function e(e){this.offset=null!=e?e:0,this.lines=[],this.currentLineNb=-1,this.currentLine="",this.refs={}}return e.prototype.PATTERN_FOLDED_SCALAR_ALL=new s("^(?:(?<type>![^\\|>]*)\\s+)?(?<separator>\\||>)(?<modifiers>\\+|\\-|\\d+|\\+\\d+|\\-\\d+|\\d+\\+|\\d+\\-)?(?<comments> +#.*)?$"),e.prototype.PATTERN_FOLDED_SCALAR_END=new s("(?<separator>\\||>)(?<modifiers>\\+|\\-|\\d+|\\+\\d+|\\-\\d+|\\d+\\+|\\d+\\-)?(?<comments> +#.*)?$"),e.prototype.PATTERN_SEQUENCE_ITEM=new s("^\\-((?<leadspaces>\\s+)(?<value>.+?))?\\s*$"),e.prototype.PATTERN_ANCHOR_VALUE=new s("^&(?<ref>[^ ]+) *(?<value>.*)"),e.prototype.PATTERN_COMPACT_NOTATION=new s("^(?<key>"+a.REGEX_QUOTED_STRING+"|[^ '\"\\{\\[].*?) *\\:(\\s+(?<value>.+?))?\\s*$"),e.prototype.PATTERN_MAPPING_ITEM=new s("^(?<key>"+a.REGEX_QUOTED_STRING+"|[^ '\"\\[\\{].*?) *\\:(\\s+(?<value>.+?))?\\s*$"),e.prototype.PATTERN_DECIMAL=new s("\\d+"),e.prototype.PATTERN_INDENT_SPACES=new s("^ +"),e.prototype.PATTERN_TRAILING_LINES=new s("(\n*)$"),e.prototype.PATTERN_YAML_HEADER=new s("^\\%YAML[: ][\\d\\.]+.*\n","m"),e.prototype.PATTERN_LEADING_COMMENTS=new s("^(\\#.*?\n)+","m"),e.prototype.PATTERN_DOCUMENT_MARKER_START=new s("^\\-\\-\\-.*?\n","m"),e.prototype.PATTERN_DOCUMENT_MARKER_END=new s("^\\.\\.\\.\\s*$","m"),e.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION={},e.prototype.CONTEXT_NONE=0,e.prototype.CONTEXT_SEQUENCE=1,e.prototype.CONTEXT_MAPPING=2,e.prototype.parse=function(t,n,r){var l,s,u,d,p,f,h,m,g,v,b,y,w,E,x,S,T,j,k,_,P,M,N,O,A,C,R,I,D,X,z,H,F,B,L,V,G,Z;for(null==n&&(n=!1),null==r&&(r=null),this.currentLineNb=-1,this.currentLine="",this.lines=this.cleanup(t).split("\n"),p=null,d=this.CONTEXT_NONE,s=!1;this.moveToNextLine();)if(!this.isCurrentLineEmpty()){if("\t"===this.currentLine[0])throw new o("A YAML file cannot contain tabs as indentation.",this.getRealCurrentLineNb()+1,this.currentLine);if(w=C=!1,Z=this.PATTERN_SEQUENCE_ITEM.exec(this.currentLine)){if(this.CONTEXT_MAPPING===d)throw new o("You cannot define a sequence item when in a mapping");d=this.CONTEXT_SEQUENCE,null==p&&(p=[]),null!=Z.value&&(A=this.PATTERN_ANCHOR_VALUE.exec(Z.value))&&(w=A.ref,Z.value=A.value),null==Z.value||""===c.trim(Z.value," ")||0===c.ltrim(Z.value," ").indexOf("#")?this.currentLineNb<this.lines.length-1&&!this.isNextLineUnIndentedCollection()?((z=new e(this.getRealCurrentLineNb()+1)).refs=this.refs,p.push(z.parse(this.getNextEmbedBlock(null,!0),n,r))):p.push(null):(null!=(H=Z.leadspaces)?H.length:void 0)&&(A=this.PATTERN_COMPACT_NOTATION.exec(Z.value))?((z=new e(this.getRealCurrentLineNb())).refs=this.refs,u=Z.value,y=this.getCurrentLineIndentation(),this.isNextLineIndented(!1)&&(u+="\n"+this.getNextEmbedBlock(y+Z.leadspaces.length+1,!0)),p.push(z.parse(u,n,r))):p.push(this.parseValue(Z.value,n,r))}else{if(!(Z=this.PATTERN_MAPPING_ITEM.exec(this.currentLine))||-1!==Z.key.indexOf(" #")){if(1===(N=this.lines.length)||2===N&&c.isEmpty(this.lines[1])){try{t=a.parse(this.lines[0],n,r)}catch(m){throw(f=m).parsedLine=this.getRealCurrentLineNb()+1,f.snippet=this.currentLine,f}if("object"===(void 0===t?"undefined":i(t))){if(t instanceof Array)v=t[0];else for(S in t){v=t[S];break}if("string"==typeof v&&0===v.indexOf("*")){for(p=[],R=0,M=t.length;R<M;R++)l=t[R],p.push(this.refs[l.slice(1)]);t=p}}return t}if("["===(B=c.ltrim(t).charAt(0))||"{"===B)try{return a.parse(t,n,r)}catch(g){throw(f=g).parsedLine=this.getRealCurrentLineNb()+1,f.snippet=this.currentLine,f}throw new o("Unable to parse.",this.getRealCurrentLineNb()+1,this.currentLine)}if(this.CONTEXT_SEQUENCE===d)throw new o("You cannot define a mapping item when in a sequence");d=this.CONTEXT_MAPPING,null==p&&(p={}),a.configure(n,r);try{S=a.parseScalar(Z.key)}catch(h){throw(f=h).parsedLine=this.getRealCurrentLineNb()+1,f.snippet=this.currentLine,f}if("<<"===S)if(C=!0,s=!0,0===(null!=(F=Z.value)?F.indexOf("*"):void 0)){if(L=Z.value.slice(1),null==this.refs[L])throw new o('Reference "'+L+'" does not exist.',this.getRealCurrentLineNb()+1,this.currentLine);if("object"!==(void 0===(V=this.refs[L])?"undefined":i(V)))throw new o("YAML merge keys used with a scalar value instead of an object.",this.getRealCurrentLineNb()+1,this.currentLine);if(V instanceof Array)for(b=E=0,k=V.length;E<k;b=++E)t=V[b],null==p[I=String(b)]&&(p[I]=t);else for(S in V)t=V[S],null==p[S]&&(p[S]=t)}else{if(t=null!=Z.value&&""!==Z.value?Z.value:this.getNextEmbedBlock(),(z=new e(this.getRealCurrentLineNb()+1)).refs=this.refs,"object"!==(void 0===(D=z.parse(t,n))?"undefined":i(D)))throw new o("YAML merge keys used with a scalar value instead of an object.",this.getRealCurrentLineNb()+1,this.currentLine);if(D instanceof Array)for(T=0,_=D.length;T<_;T++){if("object"!==(void 0===(X=D[T])?"undefined":i(X)))throw new o("Merge items must be objects.",this.getRealCurrentLineNb()+1,X);if(X instanceof Array)for(b=O=0,P=X.length;O<P;b=++O)t=X[b],x=String(b),p.hasOwnProperty(x)||(p[x]=t);else for(S in X)t=X[S],p.hasOwnProperty(S)||(p[S]=t)}else for(S in D)t=D[S],p.hasOwnProperty(S)||(p[S]=t)}else null!=Z.value&&(A=this.PATTERN_ANCHOR_VALUE.exec(Z.value))&&(w=A.ref,Z.value=A.value);C||(null==Z.value||""===c.trim(Z.value," ")||0===c.ltrim(Z.value," ").indexOf("#")?this.isNextLineIndented()||this.isNextLineUnIndentedCollection()?((z=new e(this.getRealCurrentLineNb()+1)).refs=this.refs,G=z.parse(this.getNextEmbedBlock(),n,r),(s||void 0===p[S])&&(p[S]=G)):(s||void 0===p[S])&&(p[S]=null):(G=this.parseValue(Z.value,n,r),(s||void 0===p[S])&&(p[S]=G)))}if(w)if(p instanceof Array)this.refs[w]=p[p.length-1];else{for(S in j=null,p)j=S;this.refs[w]=p[j]}}return c.isEmpty(p)?null:p},e.prototype.getRealCurrentLineNb=function(){return this.currentLineNb+this.offset},e.prototype.getCurrentLineIndentation=function(){return this.currentLine.length-c.ltrim(this.currentLine," ").length},e.prototype.getNextEmbedBlock=function(e,t){var n,a,i,r,l,s,u;if(null==e&&(e=null),null==t&&(t=!1),this.moveToNextLine(),null==e){if(r=this.getCurrentLineIndentation(),u=this.isStringUnIndentedCollectionItem(this.currentLine),!this.isCurrentLineEmpty()&&0===r&&!u)throw new o("Indentation problem.",this.getRealCurrentLineNb()+1,this.currentLine)}else r=e;for(n=[this.currentLine.slice(r)],t||(i=this.isStringUnIndentedCollectionItem(this.currentLine)),l=!(s=this.PATTERN_FOLDED_SCALAR_END).test(this.currentLine);this.moveToNextLine();)if((a=this.getCurrentLineIndentation())===r&&(l=!s.test(this.currentLine)),!l||!this.isCurrentLineComment())if(this.isCurrentLineBlank())n.push(this.currentLine.slice(r));else{if(i&&!this.isStringUnIndentedCollectionItem(this.currentLine)&&a===r){this.moveToPreviousLine();break}if(a>=r)n.push(this.currentLine.slice(r));else if("#"!==c.ltrim(this.currentLine).charAt(0)){if(0===a){this.moveToPreviousLine();break}throw new o("Indentation problem.",this.getRealCurrentLineNb()+1,this.currentLine)}}return n.join("\n")},e.prototype.moveToNextLine=function(){return!(this.currentLineNb>=this.lines.length-1)&&(this.currentLine=this.lines[++this.currentLineNb],!0)},e.prototype.moveToPreviousLine=function(){this.currentLine=this.lines[--this.currentLineNb]},e.prototype.parseValue=function(e,t,n){var i,l,s,u,d,p,f,h,m;if(0===e.indexOf("*")){if(p=e.indexOf("#"),e=-1!==p?e.substr(1,p-2):e.slice(1),void 0===this.refs[e])throw new o('Reference "'+e+'" does not exist.',this.currentLine);return this.refs[e]}if(u=this.PATTERN_FOLDED_SCALAR_ALL.exec(e))return d=null!=(f=u.modifiers)?f:"",s=Math.abs(parseInt(d)),isNaN(s)&&(s=0),m=this.parseFoldedScalar(u.separator,this.PATTERN_DECIMAL.replace(d,""),s),null!=u.type?(a.configure(t,n),a.parseScalar(u.type+" "+m)):m;if("["!==(h=e.charAt(0))&&"{"!==h&&'"'!==h&&"'"!==h)return this.isNextLineIndented()&&(e+="\n"+this.getNextEmbedBlock()),a.parse(e,t,n);for(;;)try{return a.parse(e,t,n)}catch(l){if(!((i=l)instanceof r&&this.moveToNextLine()))throw i.parsedLine=this.getRealCurrentLineNb()+1,i.snippet=this.currentLine,i;e+="\n"+c.trim(this.currentLine," ")}},e.prototype.parseFoldedScalar=function(t,n,a){var i,o,r,l,u,d,p,f,h,m;if(null==n&&(n=""),null==a&&(a=0),!(p=this.moveToNextLine()))return"";for(i=this.isCurrentLineBlank(),m="";p&&i;)(p=this.moveToNextLine())&&(m+="\n",i=this.isCurrentLineBlank());if(0===a&&(u=this.PATTERN_INDENT_SPACES.exec(this.currentLine))&&(a=u[0].length),a>0)for(null==(f=this.PATTERN_FOLDED_SCALAR_BY_INDENTATION[a])&&(f=new s("^ {"+a+"}(.*)$"),e.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION[a]=f);p&&(i||(u=f.exec(this.currentLine)));)m+=i?this.currentLine.slice(a):u[1],(p=this.moveToNextLine())&&(m+="\n",i=this.isCurrentLineBlank());else p&&(m+="\n");if(p&&this.moveToPreviousLine(),">"===t){for(d="",o=0,r=(h=m.split("\n")).length;o<r;o++)0===(l=h[o]).length||" "===l.charAt(0)?d=c.rtrim(d," ")+l+"\n":d+=l+" ";m=d}return"+"!==n&&(m=c.rtrim(m)),""===n?m=this.PATTERN_TRAILING_LINES.replace(m,"\n"):"-"===n&&(m=this.PATTERN_TRAILING_LINES.replace(m,"")),m},e.prototype.isNextLineIndented=function(e){var t,n,a;if(null==e&&(e=!0),n=this.getCurrentLineIndentation(),t=!this.moveToNextLine(),e)for(;!t&&this.isCurrentLineEmpty();)t=!this.moveToNextLine();else for(;!t&&this.isCurrentLineBlank();)t=!this.moveToNextLine();return!t&&(a=!1,this.getCurrentLineIndentation()>n&&(a=!0),this.moveToPreviousLine(),a)},e.prototype.isCurrentLineEmpty=function(){var e;return 0===(e=c.trim(this.currentLine," ")).length||"#"===e.charAt(0)},e.prototype.isCurrentLineBlank=function(){return""===c.trim(this.currentLine," ")},e.prototype.isCurrentLineComment=function(){return"#"===c.ltrim(this.currentLine," ").charAt(0)},e.prototype.cleanup=function(e){var t,n,a,i,o,r,l,s,u,d,p,f,h,m;for(-1!==e.indexOf("\r")&&(e=e.split("\r\n").join("\n").split("\r").join("\n")),t=0,e=(d=this.PATTERN_YAML_HEADER.replaceAll(e,""))[0],t=d[1],this.offset+=t,m=(p=this.PATTERN_LEADING_COMMENTS.replaceAll(e,"",1))[0],1===(t=p[1])&&(this.offset+=c.subStrCount(e,"\n")-c.subStrCount(m,"\n"),e=m),m=(f=this.PATTERN_DOCUMENT_MARKER_START.replaceAll(e,"",1))[0],1===(t=f[1])&&(this.offset+=c.subStrCount(e,"\n")-c.subStrCount(m,"\n"),e=m,e=this.PATTERN_DOCUMENT_MARKER_END.replace(e,"")),h=-1,i=0,r=(u=e.split("\n")).length;i<r;i++)s=u[i],0!==c.trim(s," ").length&&(a=s.length-c.ltrim(s).length,(-1===h||a<h)&&(h=a));if(h>0){for(n=o=0,l=u.length;o<l;n=++o)s=u[n],u[n]=s.slice(h);e=u.join("\n")}return e},e.prototype.isNextLineUnIndentedCollection=function(e){var t,n;for(null==e&&(e=null),null==e&&(e=this.getCurrentLineIndentation()),t=this.moveToNextLine();t&&this.isCurrentLineEmpty();)t=this.moveToNextLine();return!1!==t&&(n=!1,this.getCurrentLineIndentation()===e&&this.isStringUnIndentedCollectionItem(this.currentLine)&&(n=!0),this.moveToPreviousLine(),n)},e.prototype.isStringUnIndentedCollectionItem=function(){return"-"===this.currentLine||"- "===this.currentLine.slice(0,2)},e}(),t.exports=l},{"./Exception/ParseException":4,"./Exception/ParseMore":5,"./Inline":6,"./Pattern":8,"./Utils":10}],8:[function(e,t,n){var a;a=function(){function e(e,t){var n,a,i,o,r,l,s,c,u;for(null==t&&(t=""),i="",r=e.length,l=null,a=0,o=0;o<r;){if("\\"===(n=e.charAt(o)))i+=e.slice(o,+(o+1)+1||9e9),o++;else if("("===n)if(o<r-2)if("(?:"===(c=e.slice(o,+(o+2)+1||9e9)))o+=2,i+=c;else if("(?<"===c)for(a++,o+=2,s="";o+1<r;){if(">"===(u=e.charAt(o+1))){i+="(",o++,s.length>0&&(null==l&&(l={}),l[s]=a);break}s+=u,o++}else i+=n,a++;else i+=n;else i+=n;o++}this.rawRegex=e,this.cleanedRegex=i,this.regex=new RegExp(this.cleanedRegex,"g"+t.replace("g","")),this.mapping=l}return e.prototype.regex=null,e.prototype.rawRegex=null,e.prototype.cleanedRegex=null,e.prototype.mapping=null,e.prototype.exec=function(e){var t,n,a,i;if(this.regex.lastIndex=0,null==(n=this.regex.exec(e)))return null;if(null!=this.mapping)for(a in i=this.mapping)t=i[a],n[a]=n[t];return n},e.prototype.test=function(e){return this.regex.lastIndex=0,this.regex.test(e)},e.prototype.replace=function(e,t){return this.regex.lastIndex=0,e.replace(this.regex,t)},e.prototype.replaceAll=function(e,t,n){var a;for(null==n&&(n=0),this.regex.lastIndex=0,a=0;this.regex.test(e)&&(0===n||a<n);)this.regex.lastIndex=0,e=e.replace(this.regex,t),a++;return[e,a]},e}(),t.exports=a},{}],9:[function(e,t,n){var a,i,o;o=e("./Utils"),a=e("./Pattern"),i=function(){function e(){}return e.PATTERN_ESCAPED_CHARACTER=new a('\\\\([0abt\tnvfre "\\/\\\\N_LP]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})'),e.unescapeSingleQuotedString=function(e){return e.replace(/\'\'/g,"'")},e.unescapeDoubleQuotedString=function(e){return null==this._unescapeCallback&&(this._unescapeCallback=function(e){return function(t){return e.unescapeCharacter(t)}}(this)),this.PATTERN_ESCAPED_CHARACTER.replace(e,this._unescapeCallback)},e.unescapeCharacter=function(e){var t;switch(t=String.fromCharCode,e.charAt(1)){case"0":return t(0);case"a":return t(7);case"b":return t(8);case"t":case"\t":return"\t";case"n":return"\n";case"v":return t(11);case"f":return t(12);case"r":return t(13);case"e":return t(27);case" ":return" ";case'"':return'"';case"/":return"/";case"\\":return"\\";case"N":return t(133);case"_":return t(160);case"L":return t(8232);case"P":return t(8233);case"x":return o.utf8chr(o.hexDec(e.substr(2,2)));case"u":return o.utf8chr(o.hexDec(e.substr(2,4)));case"U":return o.utf8chr(o.hexDec(e.substr(2,8)));default:return""}},e}(),t.exports=i},{"./Pattern":8,"./Utils":10}],10:[function(e,t,n){var a,i,o={}.hasOwnProperty;a=e("./Pattern"),i=function(){function t(){}return t.REGEX_LEFT_TRIM_BY_CHAR={},t.REGEX_RIGHT_TRIM_BY_CHAR={},t.REGEX_SPACES=/\s+/g,t.REGEX_DIGITS=/^\d+$/,t.REGEX_OCTAL=/[^0-7]/gi,t.REGEX_HEXADECIMAL=/[^a-f0-9]/gi,t.PATTERN_DATE=new a("^(?<year>[0-9][0-9][0-9][0-9])-(?<month>[0-9][0-9]?)-(?<day>[0-9][0-9]?)(?:(?:[Tt]|[ \t]+)(?<hour>[0-9][0-9]?):(?<minute>[0-9][0-9]):(?<second>[0-9][0-9])(?:.(?<fraction>[0-9]*))?(?:[ \t]*(?<tz>Z|(?<tz_sign>[-+])(?<tz_hour>[0-9][0-9]?)(?::(?<tz_minute>[0-9][0-9]))?))?)?$","i"),t.LOCAL_TIMEZONE_OFFSET=60*(new Date).getTimezoneOffset()*1e3,t.trim=function(e,t){var n,a;return null==t&&(t="\\s"),null==(n=this.REGEX_LEFT_TRIM_BY_CHAR[t])&&(this.REGEX_LEFT_TRIM_BY_CHAR[t]=n=new RegExp("^"+t+t+"*")),n.lastIndex=0,null==(a=this.REGEX_RIGHT_TRIM_BY_CHAR[t])&&(this.REGEX_RIGHT_TRIM_BY_CHAR[t]=a=new RegExp(t+""+t+"*$")),a.lastIndex=0,e.replace(n,"").replace(a,"")},t.ltrim=function(e,t){var n;return null==t&&(t="\\s"),null==(n=this.REGEX_LEFT_TRIM_BY_CHAR[t])&&(this.REGEX_LEFT_TRIM_BY_CHAR[t]=n=new RegExp("^"+t+t+"*")),n.lastIndex=0,e.replace(n,"")},t.rtrim=function(e,t){var n;return null==t&&(t="\\s"),null==(n=this.REGEX_RIGHT_TRIM_BY_CHAR[t])&&(this.REGEX_RIGHT_TRIM_BY_CHAR[t]=n=new RegExp(t+""+t+"*$")),n.lastIndex=0,e.replace(n,"")},t.isEmpty=function(e){return!e||""===e||"0"===e||e instanceof Array&&0===e.length||this.isEmptyObject(e)},t.isEmptyObject=function(e){var t;return e instanceof Object&&0===function(){var n;for(t in n=[],e)o.call(e,t)&&n.push(t);return n}().length},t.subStrCount=function(e,t,n,a){var i,o,r,l,s,c;for(i=0,e=""+e,t=""+t,null!=n&&(e=e.slice(n)),null!=a&&(e=e.slice(0,a)),l=e.length,c=t.length,o=r=0,s=l;0<=s?r<s:r>s;o=0<=s?++r:--r)t===e.slice(o,c)&&(i++,o+=c-1);return i},t.isDigits=function(e){return this.REGEX_DIGITS.lastIndex=0,this.REGEX_DIGITS.test(e)},t.octDec=function(e){return this.REGEX_OCTAL.lastIndex=0,parseInt((e+"").replace(this.REGEX_OCTAL,""),8)},t.hexDec=function(e){return this.REGEX_HEXADECIMAL.lastIndex=0,"0x"===((e=this.trim(e))+"").slice(0,2)&&(e=(e+"").slice(2)),parseInt((e+"").replace(this.REGEX_HEXADECIMAL,""),16)},t.utf8chr=function(e){var t;return t=String.fromCharCode,128>(e%=2097152)?t(e):2048>e?t(192|e>>6)+t(128|63&e):65536>e?t(224|e>>12)+t(128|e>>6&63)+t(128|63&e):t(240|e>>18)+t(128|e>>12&63)+t(128|e>>6&63)+t(128|63&e)},t.parseBoolean=function(e,t){var n;return null==t&&(t=!0),"string"==typeof e?(n=e.toLowerCase(),!(!t&&"no"===n)&&("0"!==n&&("false"!==n&&""!==n))):!!e},t.isNumeric=function(e){return this.REGEX_SPACES.lastIndex=0,"number"==typeof e||"string"==typeof e&&!isNaN(e)&&""!==e.replace(this.REGEX_SPACES,"")},t.stringToDate=function(e){var t,n,a,i,o,r,l,s,c,u;if(!(null!=e?e.length:void 0))return null;if(!(o=this.PATTERN_DATE.exec(e)))return null;if(u=parseInt(o.year,10),l=parseInt(o.month,10)-1,n=parseInt(o.day,10),null==o.hour)return t=new Date(Date.UTC(u,l,n));if(i=parseInt(o.hour,10),r=parseInt(o.minute,10),s=parseInt(o.second,10),null!=o.fraction){for(a=o.fraction.slice(0,3);a.length<3;)a+="0";a=parseInt(a,10)}else a=0;return null!=o.tz&&(c=6e4*(60*parseInt(o.tz_hour,10)+(null!=o.tz_minute?parseInt(o.tz_minute,10):0)),"-"===o.tz_sign&&(c*=-1)),t=new Date(Date.UTC(u,l,n,i,r,s,a)),c&&t.setTime(t.getTime()-c),t},t.strRepeat=function(e,t){var n,a;for(a="",n=0;n<t;)a+=e,n++;return a},t.getStringFromFile=function(t,n){var a,i,o,r,l,s,c;if(null==n&&(n=null),c=null,"undefined"!=typeof window&&null!==window)if(window.XMLHttpRequest)c=new XMLHttpRequest;else if(window.ActiveXObject)for(o=0,r=(s=["Msxml2.XMLHTTP.6.0","Msxml2.XMLHTTP.3.0","Msxml2.XMLHTTP","Microsoft.XMLHTTP"]).length;o<r;o++){l=s[o];try{c=new ActiveXObject(l)}catch(e){}}return null!=c?null!=n?(c.onreadystatechange=function(){if(4===c.readyState)return 200===c.status||0===c.status?n(c.responseText):n(null)},c.open("GET",t,!0),c.send(null)):(c.open("GET",t,!1),c.send(null),200===c.status||0===c.status?c.responseText:null):(i=e("fs"),null!=n?i.readFile(t,function(e,t){return n(e?null:String(t))}):null!=(a=i.readFileSync(t))?String(a):null)},t}(),t.exports=i},{"./Pattern":8}],11:[function(e,t,n){var a,i,o,r;i=e("./Parser"),a=e("./Dumper"),o=e("./Utils"),r=function(){function e(){}return e.parse=function(e,t,n){return null==t&&(t=!1),null==n&&(n=null),(new i).parse(e,t,n)},e.parseFile=function(e,t,n,a){var i;return null==t&&(t=null),null==n&&(n=!1),null==a&&(a=null),null!=t?o.getStringFromFile(e,function(e){return function(i){var o;o=null,null!=i&&(o=e.parse(i,n,a)),t(o)}}(this)):null!=(i=o.getStringFromFile(e))?this.parse(i,n,a):null},e.dump=function(e,t,n,i,o){var r;return null==t&&(t=2),null==n&&(n=4),null==i&&(i=!1),null==o&&(o=null),(r=new a).indentation=n,r.dump(e,t,0,i,o)},e.stringify=function(e,t,n,a,i){return this.dump(e,t,n,a,i)},e.load=function(e,t,n,a){return this.parseFile(e,t,n,a)},e}(),"undefined"!=typeof window&&null!==window&&(window.YAML=r),"undefined"!=typeof window&&null!==window||(this.YAML=r),t.exports=r},{"./Dumper":1,"./Parser":7,"./Utils":10}]},{},[11])},429:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,o=void 0;try{for(var r,l=e[Symbol.iterator]();!(a=(r=l.next()).done)&&(n.push(r.value),!t||n.length!==t);a=!0);}catch(e){i=!0,o=e}finally{try{!a&&l.return&&l.return()}finally{if(i)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),o=b(n(1)),r=b(n(242)),l=b(n(47)),s=b(n(215)),c=b(n(61)),u=b(n(15)),d=b(n(430)),p=b(n(44)),f=b(n(27)),h=b(n(45)),m=b(n(68)),g=b(n(245)),v=n(246);function b(e){return e&&e.__esModule?e:{default:e}}function y(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var w="https://cota.cainiao-inc.com/?source=asim#/packing";location.host.indexOf("pre-")>-1?w="https://pre-cota.cainiao-inc.com/?source=asim#/packing":location.host.indexOf(".test")>-1&&(w="https://cota.cainiao-inc.test/?source=asim#/packing");var E=function(e){return e&&e.indexOf("nasa")>-1||["autogo_full_traffic_docker","autogo_full_scenario_docker_ne","autogo_full_scenario_docker"].indexOf(e)>-1},x=p.default.Item,S=v.Nav.Item,T=v.Nav.PopupItem,j=function(e){function t(){var e,n,a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,o=Array(i),r=0;r<i;r++)o[r]=arguments[r];return n=a=y(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(o))),a.field=new c.default(a),a.fieldMap=new c.default(a),a.state={things:[],errorVisible:!1,errorMessage:"",configVisible:!1,mapVisible:!1,autoSelect:!0,numbers:1,algoType:!0,nasaTrue:!1,mapScenes:[],runTypes:[],nasaDevices:[],userDefinedValue:!1,mapSceneValue:"",asimDockerNameValue:"",dockersDefaultValue:""},y(a,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),i(t,[{key:"componentDidMount",value:function(){var e=this.props.initData.data,t=e||{},n=t.mapScene,a=t.mapId,i=t.dockerVersion,o=t.dockerNameAsim,r=t.runType,l=t.nasaEnv,s=t.nasaDevice,c=t.dockerNameIpc,u=t.dockerNamePar;this.setState({mapScene:n,mapSceneValue:!n&&a?"0":"mapScene",mapId:a,dockerVersion:i,asimDockerNameValue:o,runType:r,nasaEnv:l,nasaDevice:s,dockerNameIpc:c,dockerNamePar:u,nasaTrue:E(r)}),!n&&a&&this.fieldMap.setValue("mapId",e.mapId),this.getDockerNameIpcSource(),this.getMapScenes()}},{key:"getRunTypes",value:function(){var e=this,t=g.default.getNewRunType,n=t.url,a=t.data;0===this.state.runTypes.length&&m.default.getData(n,a,function(t){var n=[],a=t;for(var i in a)n.push({label:a[i],value:i});e.setState({runTypes:n})})}},{key:"getNasaDevice",value:function(){var e=this,t=g.default.getNasaDevice,n=t.url,a=t.data;m.default.getData(n,a,function(t){e.setState({nasaDevices:t.map(function(e){return{label:e,value:e}})})})}},{key:"componentWillUnmount",value:function(){this.setState=function(e,t){return!1}}},{key:"save",value:function(){var e=this,t=r.default.convert2yaml(),n=window.YAML.stringify(t,4);"[]"===n&&(n="");var a=(window.globalState||{}).schema,i=a.caseId,o=a.name,s=a.algoVersion,c=a.mapVersion,u=g.default.createWorkspace,d=u.url,p=u.data,f=u.method;Object.assign(p,{name:o,mapId:c,caseId:i,algoVersion:s}),p.scenario=n,m.default.getData(d,p,function(t){var n=t||{},a=n.caseCheckSuccess,i=n.caseCheckMessage;a?l.default.success("保存成功"):e.setState({errorMessage:"失败："+i||!1,errorVisible:!0})},function(){},f)}},{key:"play",value:function(){var e=this,t=window.globalState.schema,n=t.workSpaceId,a=t.caseId;if(n){var i=g.default.read,o=i.url,r=i.data;r.caseId=a,m.default.getData(o,r,function(t){e.setPlayUrl(Object.assign(t,{caseId:a,workSpaceId:n}))})}else l.default.warning("请先操作保存，再预览")}},{key:"setPlayUrl",value:function(e){var t=e.workSpaceId,n=e.caseId,i=e.runType,o=e.nasaEnv,r=e.nasaDevice,s=e.dockerNameIpc,c=e.dockerNamePar,u=e.dockerNameAsim,d=e.mapId,p=e.previewNum,f=parent.window&&parent.window.globalData&&parent.window.globalData.teamId;if(f){if(!u)return this.configVisible=!0,void this.config();d=encodeURIComponent(d);var h=window.open("/manage/skyeye/skip"),v=g.default.play,b=v.url,y=v.data;p=p||1,Object.assign(y,{workSpaceId:t,caseId:n,dockerNameAsim:u,mapId:d,previewNum:p,teamId:f,runType:i,nasaEnv:o,nasaDevice:r,dockerNameIpc:s,dockerNamePar:c}),m.default.getData(b,y,function(e){if(e.length<1)return h.close(),!1;var t=[],n=[];e.map(function(e){var a=e.serverInfo,i=a&&JSON.parse(a.replace(/&quot;/g,'"'))||{},o=i.ip,r=i.dockerPort;t.push(o),n.push(r)});var i=e[0]||{},o=i.token,r=i.utmdId,l=i.taskId,s=i.offset,c=a(s,3),u=c[0],d=c[1],p=c[2],f=function(){h.dispatchEvent(new CustomEvent("queryData",{detail:{token:o,x:u,y:d,z:p,taskId:l,utmdId:r,ip:t.join(","),port:n.join(",")}}))};h.taskId||setTimeout(function(){f()},500),f()},function(){h.close()},"PUT")}else l.default.error("teamId不存在，请使用正确方式获取teamId")}},{key:"runTypesChange",value:function(e){this.setState({nasaTrue:E(e)})}},{key:"submitConfigData",value:function(){var e=this,t=window.globalState.schema,n=t.caseId,a=t.mapVersion,i=t.name,o=t.algoVersion,r=a;this.field.validate(function(t,a){if(!t){a.previewNum=1;var l=a.dockers.split("|-|");a.dockerNameIpc=a.dockerNameIpc||l[1],a.dockerNamePar=a.dockerNamePar||l[2],a.dockerNameAsim=a.dockerNameAsim||a.dockerNameIpc,a.dockerVersion=l[0];var s=g.default.createWorkspace,c=s.url,u=s.data,d=s.method;e.state.nasaTrue||(a.nasaDevice="",a.nasaEnv=""),Object.assign(u,{caseId:n,mapId:r,name:i,algoVersion:o},a),m.default.getData(c,u,function(t){e.configVisible&&e.play(),e.setState({configVisible:!1,asimDockerNameValue:a.dockerNameAsim,runType:a.runType,dockerNameIpc:a.dockerNameIpc,dockerNamePar:a.dockerNamePar,nasaEnv:a.nasaEnv,nasaDevice:a.nasaDevice})},function(){},d)}})}},{key:"submitMapData",value:function(){var e=this,t=window.globalState.schema,n=t.caseId,a=t.name,i=t.mapVersion;this.fieldMap.validate(function(t,o){if(!t){"0"===o.mapScene?o.mapScene="":i="";var r=g.default.addCase,l=r.url,s=r.data,c=r.method;Object.assign(s,{id:n,mapId:i,name:a},o),m.default.getData(l,s,function(){e.setState({mapVisible:!1},function(){e.fieldMap.setValue("mapId",o.mapId),e.props.getScenario()})},function(){},c)}})}},{key:"config",value:function(){this.setState({configVisible:!0}),this.getRunTypes(),this.getNasaDevice()}},{key:"changeType",value:function(e){var t=e?"translate":"rotate",n=window.globalState.controls,a=n.thingControl,i=n.targetPointContorl;a.setMode(t),i.setMode(t),this.setState({transformControlMode:t})}},{key:"setMapConfigVisible",value:function(){this.setState({mapVisible:!0})}},{key:"getDockerNameIpcSource",value:function(){var e=this,t=g.default.getDocker,n=t.url,a=t.data;m.default.getData(n,a,function(t){var n=[];t.map(function(e){var t={};t.version=e.version,e.agBuildList.map(function(e){t[e.platform]=e.buildDockerVersion}),n.push(t)});var a="",i=n.map(function(t,n){var i=t.version+"|-|"+t.x86+"|-|"+t.arm+"|-|"+n;return t.version===e.state.dockerVersion&&(a=i),{label:t.version,value:i}})||[];i.unshift({label:"自定义镜像",value:"0"}),e.setState({dockers:i,dockersDefaultValue:a||"0",showDefineDocker:!a})})}},{key:"selectDockerChange",value:function(e){this.setState({showDefineDocker:"0"===e,dockersDefaultValue:e,dockerNameIpc:""})}},{key:"getMapScenes",value:function(e){var t=this,n=g.default.getMapScene,a=n.url,i=n.data;m.default.getData(a,i,function(e){var n=e.map(function(e){return{label:e.mapName,value:e.id}});n.push({label:"指定地图版本",value:"0"}),t.setState({mapScenes:n})})}},{key:"render",value:function(){var e=this;return o.default.createElement("div",{className:"centerbar"},o.default.createElement("div",{className:"centerbar-buttons"},o.default.createElement(v.Nav,{direction:"hoz",activeDirection:"right",type:"primary"},o.default.createElement(S,{key:"0",onClick:this.setMapConfigVisible.bind(this)},o.default.createElement("i",{className:"et-icon icon-map"}),o.default.createElement("span",null,"地图")),o.default.createElement(S,{key:"1",onClick:t.delete.bind(this)},o.default.createElement("i",{className:"next-icon next-icon-ashbin "}),o.default.createElement("span",null,"删除")),o.default.createElement(S,{key:"2",onClick:this.save.bind(this)},o.default.createElement("i",{className:"et-icon icon-iconset0237"}),o.default.createElement("span",null,"保存")),o.default.createElement(T,{key:"5",icon:"et-icon",label:"运行"},o.default.createElement(v.Menu,null,o.default.createElement(v.Menu.Item,{key:"51",onClick:this.play.bind(this)},"天眼播放"),o.default.createElement(v.Menu.Item,{key:"53",onClick:this.config.bind(this)},"配置"))))),o.default.createElement("div",{className:"case-name"},window.globalState.schema&&window.globalState.schema.name),o.default.createElement(s.default,{className:"switch-control",defaultChecked:!0,checkedChildren:"位移",onChange:function(t){e.changeType(t)},unCheckedChildren:"旋转"}),o.default.createElement(d.default,{title:"播放配置",style:{width:"400px"},visible:this.state.configVisible,onOk:function(t){e.submitConfigData()},onCancel:function(t){e.setState({configVisible:!1})},onClose:function(t){e.setState({configVisible:!1})}},o.default.createElement(p.default,{labelCol:{span:6},wrapperCol:{fixedSpan:10},field:this.field},o.default.createElement(x,{label:"运行类型",required:!0,requiredMessage:"请选择运行类型"},o.default.createElement(h.default,{style:{width:"210px"},defaultValue:this.state.runType,onChange:this.runTypesChange.bind(this),dataSource:this.state.runTypes,name:"runType"})),o.default.createElement(x,{label:"镜像选择",required:!0,requiredMessage:"请选择镜像选择"},o.default.createElement(h.default,{style:{width:"210px"},defaultValue:this.state.dockersDefaultValue,onChange:this.selectDockerChange.bind(this),dataSource:this.state.dockers,name:"dockers"}),o.default.createElement("a",{style:{marginTop:10,display:"block"},href:w,target:"_blank"},"我要构建docker")),this.state.showDefineDocker&&o.default.createElement(x,{label:"仿真镜像:",required:!0,requiredMessage:"仿真镜像不能为空"},o.default.createElement(f.default,{style:{width:"200px"},defaultValue:this.state.dockerNameIpc,name:"dockerNameIpc"})),this.state.showDefineDocker&&this.state.nasaTrue&&o.default.createElement(x,{label:"平行驾驶镜像",required:!0,requiredMessage:"请选择平行驾驶镜像"},o.default.createElement(f.default,{style:{width:"210px"},defaultValue:this.state.dockerNamePar,name:"dockerNamePar"})),this.state.nasaTrue&&o.default.createElement(x,{label:"车辆列表",required:!0,requiredMessage:"请选择车辆列表"},o.default.createElement(h.default,{style:{width:"210px"},defaultValue:this.state.nasaDevice,dataSource:this.state.nasaDevices,name:"nasaDevice"})),this.state.nasaTrue&&o.default.createElement(p.default.Item,{label:"NASA环境",required:!0,requiredMessage:"NASA环境为必选项"},o.default.createElement(h.default,{style:{width:"210px"},defaultValue:this.state.nasaEnv,name:"nasaEnv",dataSource:[{label:"daily",value:"daily"},{label:"pre",value:"pre"},{label:"online",value:"online"}]})))),o.default.createElement(d.default,{title:"地图配置",style:{width:"400px"},visible:this.state.mapVisible,onOk:function(t){e.submitMapData()},onCancel:function(t){e.setState({mapVisible:!1})},onClose:function(t){e.setState({mapVisible:!1})}},o.default.createElement(p.default,{labelCol:{span:6},wrapperCol:{fixedSpan:10},field:this.fieldMap},o.default.createElement(x,{label:"地图名称:",required:!0,requiredMessage:"地图名称"},o.default.createElement(h.default,{name:"mapScene",defaultValue:this.state.mapSceneValue,onChange:function(t){e.setState({mapSceneValue:t})},dataSource:this.state.mapScenes,style:{width:"200px"},autoWidth:!0})),"0"===this.state.mapSceneValue?o.default.createElement(x,{label:"地图版本:",required:!0,requiredMessage:"地图版本为必填项"},o.default.createElement(f.default,{style:{width:"200px"},defaultValue:this.state.mapId,name:"mapId"})):"")),o.default.createElement(d.default,{title:"提示",style:{width:400},visible:this.state.errorVisible,footer:o.default.createElement(u.default,{type:"primary",onClick:function(){e.setState({errorVisible:!1})}},"我知道了"),onClose:function(){e.setState({errorVisible:!1})}},this.state.errorMessage))}}],[{key:"delete",value:function(e){window.globalState.dispatchEvent({type:"deleteThing",data:e})}}]),t}();t.default=j},432:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var i=window.THREE,o=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.agents={},n.goals={},n.roles={},n.movements={},n.apperances={},n.points=[],n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.EventDispatcher),a(t,[{key:"addObject",value:function(e){window.globalState.schema.objects[e.name]=e}},{key:"removeObject",value:function(e){delete window.globalState.schema.objects[e]}},{key:"modifyObject",value:function(e){window.globalState.schema.objects[e.name]=e}},{key:"modifyTrigger",value:function(e){window.globalState.schema.triggers[e.name]=e}},{key:"removeTrigger",value:function(e){delete window.globalState.schema.triggers[e.name]}},{key:"modifyAgentSource",value:function(e){for(var t in window.globalState.schema.agentSources||(window.globalState.schema.agentSources={}),window.globalState.schema.agentSources)window.globalState.schema.agentSources[t].name===e.name&&(window.globalState.schema.agentSources[t]=e)}},{key:"removeAgentSource",value:function(e){window.globalState.schema.agentSources=window.globalState.schema.agentSources.filter(function(t){return t.name!==e.name})}}]),t}();t.default=o},433:function(e,t,n){var a=n(434);"string"==typeof a&&(a=[[e.i,a,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(31)(a,i);a.locals&&(e.exports=a.locals)},434:function(e,t,n){(e.exports=n(30)(!1)).push([e.i,"#c{height:100%;font-weight:lighter;width:100%}#window1{display:none}#watchInfo{display:none!important}.crosshair{cursor:crosshair}.control{display:none!important}.m-studio{position:relative;height:100%}.m-studio .topbar{width:100%;height:80px;background:#141a21}.m-studio .topbar .topbar-title{color:#000;font-weight:700;display:inline-block;padding:0 24px;line-height:80px;color:#fff;font-style:italic;font-family:DIN-BlackItalic;font-size:34px;background-color:#2466ff}.m-studio .topbar .menus{position:absolute;top:0;left:400px}.m-studio .topbar .menus .menu-item{color:#fff;line-height:80px;height:79px;font-size:20px;padding:0 20px;font-weight:lighter;display:inline-block}.m-studio .topbar .menus .menu-item.active{border-bottom:4px solid;border-bottom-color:#2466ff;color:#2466ff}.m-studio .topbar .menus .menu-item-split{height:20px;border-right:1px solid hsla(0,0%,100%,.2);display:inline-block;line-height:80px}.m-studio .m-studio-layout{display:flex;flex-wrap:nowrap;height:100%}.m-studio .centerbar{background:#1a222b;width:100%;height:40px;line-height:40px;z-index:102}.m-studio .centerbar .case-name{display:inline-block;color:#fff;margin:0 auto;margin-right:50px;float:right}.m-studio .centerbar .centerbar-buttons{float:right;line-height:38px;margin-right:40px;color:#fff}.m-studio .centerbar .centerbar-buttons button{color:#fff;font-size:16px;line-height:20px;margin-right:40px}.m-studio .centerbar .centerbar-buttons button i{margin-right:8px;font-size:17px}.m-studio .centerbar .centerbar-buttons button:hover{color:#2466ff}.m-studio .centerbar .switch-control{width:100px;vertical-align:middle;margin-left:20px;background:none;border:1px solid rgba(55,55,55,.2);border:1px solid rgba(0,0,0,.3)}.m-studio .centerbar .switch-control:hover{background:none}.m-studio .leftbar{background:#141a21;height:100%;z-index:103;display:flex}.m-studio .rightbar{position:relative;flex-shrink:0;width:240px;height:100%;background:#1a222b;z-index:102;transition:width .3s ease;white-space:nowrap}.m-studio .rightbar .movePanel,.m-studio .rightbar .next-tabs,.m-studio .rightbar .next-tabs-content,.m-studio .rightbar .next-tabs-tabpane{height:100%}.m-studio .rightbar .next-tabs-btn-next,.m-studio .rightbar .next-tabs-btn-prev{display:none}.m-studio .rightbar .next-tabs-nav-container{padding-right:0}.m-studio .rightbar .next-tabs-nav-container-scrolling{padding-right:none}.m-studio .rightbar .tablist button{display:none}.m-studio .rightbar .right-bar-icon{position:absolute;left:-30px;top:10px;cursor:pointer;color:#fff;transform:rotate(180deg);transition:transform .5s}.m-studio .rightbar .right-bar-icon:hover{color:#2466ff}.m-studio .rightbar .next-tabs-bar{color:#fff;border:none}.m-studio .rightbar .next-tabs-bar .next-tabs-tab-inner{color:#8a8e92;border-right:1px solid #000}.m-studio .rightbar .next-tabs-bar .active .next-tabs-tab-inner{background:#363c43;color:#fff}.m-studio .rightbar .next-tabs-bar .active .next-tabs-tab-inner:before{border:none}.m-studio .rightbar .next-tabs-bar .next-tabs-nav-wrap{border-bottom:1px solid #000}.m-studio .rightbar.shrink{width:0}.m-studio .rightbar.shrink .right-bar-icon{transform:rotate(0deg)}.m-studio .viewer{position:absolute;background:#f0f}.m-studio .panel{height:50%;width:100%}.m-studio .panel .panel-title-bar{height:30px;background:#eaebef;box-shadow:0 1 5px 1px rgba(0,0,0,.3)}.m-studio .panel .panel-title-bar .panel-title{font-size:14px;color:#000;padding-left:10px;line-height:30px;margin:0}.m-studio .panel .panel-content{background:#fff;height:100%;padding:10px 0;overflow-y:auto}.m-studio .panel .panel-content .splitLine{width:100%;border-bottom:1px solid #efefef}.m-studio .functionPanel{width:60px;height:100%;display:inline-block;background:#090e13}.m-studio .functionPanel>div{border:none;padding:17px 20px;color:#fff;border-bottom:3px solid transparent;cursor:pointer}.m-studio .functionPanel>div i{font-size:18px}.m-studio .functionPanel .active,.m-studio .functionPanel>div:hover{background:#171e26;color:#2466ff;border-bottom:3px solid #2466ff}.m-studio .functionPanel .active span{display:none}.m-studio .sidePanel{background:#171e26;display:flex;width:200px;height:100%;overflow:hidden;transition:width .5s ease;color:#fff;padding-bottom:79px;flex-direction:column;white-space:nowrap}.m-studio .sidePanel .side-panel-title{white-space:nowrap;font-size:16px;line-height:60px;padding-left:16px;border-bottom:1px solid #000}.m-studio .sidePanel .side-item{padding:10px;margin:10px;background:#2a3440;transition:background .2s ease-out;cursor:pointer;font-size:16px;color:hsla(0,0%,100%,.3);border-radius:3px}.m-studio .sidePanel .side-item.active{background:#38f;color:#fff}.m-studio .rolesPanel{flex-direction:column-reverse}.m-studio .rolesPanel .draggableItem{margin:5px 20px;cursor:pointer;color:hsla(0,0%,100%,.3);background:#2a3440;height:100px;border-radius:5px;display:flex;flex-direction:column;align-items:center}.m-studio .rolesPanel .draggableItem img{width:130px;height:60px;margin-top:12px;border-radius:5px;display:block}.m-studio .rolesPanel .draggableItem span{margin-top:4px;font-size:18px;line-height:20px;text-align:center}.m-studio .rolesPanel .slideItem{width:100%;height:60px;white-space:nowrap;overflow:hidden;cursor:pointer;background:#1a222b;transition:height .5s ease;border-bottom:1px solid #000}.m-studio .rolesPanel .slideItem .itemTitle{color:#fff;height:59px;display:flex;white-space:nowrap;justify-content:space-between;align-items:center}.m-studio .rolesPanel .slideItem .itemTitle span{white-space:nowrap;font-size:16px;line-height:60px;padding-left:16px}.m-studio .rolesPanel .slideItem .itemTitle i{transition:transform .5s ease-in;transform:rotate(-90deg);margin-right:20px;color:#5f646b;font-size:14px}.m-studio .rolesPanel .slideItem .itemContent{overflow:auto;height:calc(100% - 60px);padding-top:20px;flex-direction:column}.m-studio .rolesPanel .slideItem.active{border-top:none;height:calc(100% - 180px)}.m-studio .rolesPanel .slideItem.active .itemTitle i{transform:rotate(0)}.m-studio .rolesPanel .slideItem.active .itemContent{border-top:1px solid #000}.m-studio .attributePanel{padding:20px;height:calc(100% - 120px);overflow-y:auto}.m-studio .attributePanel>div{padding:0 10px;margin-bottom:10px;color:#fff;font-size:14px;vertical-align:middle}.m-studio .attributePanel label{color:#fff}.m-studio .attributePanel .speed-item{padding:0;margin:0}.m-studio .trigger-attr{padding:20px}.m-studio .trigger-attr .trigger-name{font-size:16px;font-weight:700;color:#fff;padding-bottom:10px}.m-studio .trigger-attr .trigger-agents{margin-top:20px}.m-studio .trigger-attr .trigger-agents div{padding:3px 10px;border:1px solid #ccc;color:#fff;margin-top:10px;display:flex;justify-content:space-between;align-items:center}.m-studio .trigger-attr .trigger-agents div .delete-trigger-agent{font-size:16px;color:#fff;cursor:pointer;padding:0 10px}.m-studio .trigger-attr .trigger-type{color:#eee}.m-studio .trigger-attr .binding-trigger{margin-top:10px}.m-studio .trigger-attr .binding-button{margin-left:10px;background-color:#2466ff}.m-studio .trigger-attr .binding.binding-button{background-color:#9af}.m-studio .triggers-list{overflow-y:auto;padding:10px;display:flex;flex-direction:column;height:calc(100% - 120px)}.m-studio .triggers-list div{padding:2px 10px;color:#fff;border-radius:2px;transition:background .2s ease-in;display:inline-block;margin:4px 6px;background:#1890ff;cursor:pointer}.m-studio .triggers-list div.active{background:#7cfc00}.m-studio .traffic-attr{padding:20px;height:calc(100% - 120px);overflow-y:auto}.m-studio .movePanel{margin-top:12px}.m-studio .movePanel .startGoalConfig{height:calc(100% - 360px)}.m-studio .movePanel .goal-content{height:calc(100% - 30px)}.m-studio .movePanel .goal-points{height:calc(100% - 150px);overflow:auto}.m-studio .movePanel .goal-angle span{color:hsla(0,0%,100%,.5);padding-right:10px}.m-studio .movePanel .topBar{height:10px}.m-studio .movePanel .goal-list{height:220px;padding-bottom:30px;overflow-y:auto;position:relative;display:flex;flex-direction:column;border-bottom:1px solid #000}.m-studio .movePanel .goal-list ul{width:100%;height:calc(100% - 30px);overflow-y:auto;padding:0 10px}.m-studio .movePanel .goal-list li{width:100%;height:30px;background:#4a535e;font-size:13px;line-height:30px;padding-right:10px;padding-left:10px;cursor:pointer;margin-bottom:10px;border-radius:5px;display:flex;color:#fff;transition:background .3s ease;justify-content:space-between}.m-studio .movePanel .goal-list li i:before{font-size:14px}.m-studio .movePanel .goal-list li.active{background:#2466ff}.m-studio .movePanel .goal-content{padding:20px;color:#fff;font-size:14px}.m-studio .movePanel .goal-content>div{margin-bottom:20px}.m-studio .movePanel .goal-content .position-info{width:100%}.m-studio .movePanel .goal-content .position-info>div{width:100%;background:#171e26;color:hsla(0,0%,100%,.5);border:1px solid #2e343c;padding:3px 5px;margin-bottom:5px}.m-studio .movePanel .goal-content .position-info>div>span{color:hsla(0,0%,100%,.3);padding-right:10px}.m-studio .movePanel .goal-content .choose-position{display:flex;align-items:flex-start;margin-top:10px}.m-studio .movePanel .goal-content .choose-position i{margin-right:10px}.m-studio .movePanel .goal-content .fuzzing-button button{width:100%;height:36px;font-size:14px;background:#2466ff}.m-studio .movePanel .goal-content .type-select{margin-bottom:10px}.m-studio .movePanel .goal-content .icon-bar i{cursor:pointer}.m-studio .movePanel .goal-content .active button{background:#1a222b;color:#fff;border-color:hsla(0,0%,100%,.1)}.m-studio .movePanel .add-goal-button{position:absolute;bottom:10px;padding:20px;width:100%}.m-studio .movePanel .add-goal-button button{width:100%;background:#2466ff;height:35px;font-size:14px}.m-studio .speed-select{padding:20px;height:calc(100% - 20px);overflow-y:auto}.m-studio .next-radio-group .next-radio-label{color:#fff}.new-scene{width:100%;left:0;position:absolute;top:0;background:#000;height:100%;z-index:1;display:flex;align-items:center;flex-direction:column;justify-content:center;color:#fff}.new-scene .scene-des{font-size:18px;margin:20px;font-weight:lighter}.new-scene .form-area{height:20px;display:flex;margin:0 auto;margin-top:20px;text-align:center}.new-scene .form-area button{margin:10px;padding:0 30px}.things-panel{padding:20px;height:calc(100% - 110px)}.things-panel .things-list{overflow-y:auto;display:flex;flex-direction:column;height:100%}.things-panel li{padding:2px 10px;color:#fff;border-radius:2px;transition:background .2s ease-in;display:inline-block;margin:4px 6px;background:#1890ff;cursor:pointer}.things-panel li.active{background:#7cfc00}.item-xg{margin:20px;cursor:pointer;color:hsla(0,0%,100%,.3);background:#2a3440;border-radius:5px;display:flex;flex-direction:column;align-items:center;padding:10px}.item-xg img{width:auto;height:60px;border-radius:5px;display:block}.item-xg span{margin-top:4px;font-size:16px;line-height:20px;text-align:center}.fuzzing-numbers{padding:20px;color:#fff}.centerbar-buttons .next-nav.next-hoz{height:40px;line-height:40px}.centerbar-buttons .next-nav.next-primary.next-hoz .next-menu-item-inner{height:40px}.centerbar .next-nav.next-primary .next-nav-item.next-menu-item,.next-nav.next-primary{background-color:#1a222b!important}",""])},435:function(e,t,n){var a=n(436);"string"==typeof a&&(a=[[e.i,a,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(31)(a,i);a.locals&&(e.exports=a.locals)},436:function(e,t,n){(e.exports=n(30)(!1)).push([e.i,'@font-face{font-family:et-icon;src:url("//at.alicdn.com/t/font_490080_48kgyzbzchb.eot");src:url("//at.alicdn.com/t/font_490080_48kgyzbzchb.eot?#iefix") format("embedded-opentype"),url("//at.alicdn.com/t/font_490080_48kgyzbzchb.woff2") format("woff2"),url("//at.alicdn.com/t/font_490080_48kgyzbzchb.woff") format("woff"),url("//at.alicdn.com/t/font_490080_48kgyzbzchb.ttf") format("truetype"),url("//at.alicdn.com/t/font_490080_48kgyzbzchb.svg#et-icon") format("svg")}.et-icon{font-family:et-icon!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-map:before{content:"\\E67A"}.icon-iconset0237:before{content:"\\E688"}.icon-yunxingzhong:before{content:"\\E633"}.icon-view1:before{content:"\\E6C0"}.icon-videocamera:before{content:"\\E888"}.icon-view:before{content:"\\E6C1"}.icon-iconfontzhizuobiaozhun023150:before{content:"\\E698"}.icon-hongfaqi:before{content:"\\E7D0"}.icon-youjiantou-copy:before{content:"\\E692"}.icon-shanchu:before{content:"\\E66A"}.icon-zuojiantou2:before{content:"\\E923"}.icon-zuojiantou:before{content:"\\E63A"}.icon-daoluyongdu:before{content:"\\E616"}.icon-caozuo_xuandian_dingwei:before{content:"\\E6B5"}.icon-wheel:before{content:"\\E61A"}.icon-zuojiantou1:before{content:"\\E623"}.icon-cheliangleixing:before{content:"\\E617"}.icon-data:before{content:"\\E6A2"}.icon-tuceng:before{content:"\\E600"}.icon-kujialeqiyezhan_mohutuozhuaichicun:before{content:"\\E647"}.icon--jiaotonggongju-:before{content:"\\E67B"}.next-nav.next-primary .next-nav-item.next-menu-item{background-color:#333!important}',""])},68:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,i=n(407),o=(a=i)&&a.__esModule?a:{default:a},r=n(246);t.default={getData:function(e,t,n,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"get",l="get"===i?t:{};(0,o.default)({url:e,method:i,data:t,params:l,timeout:3e4}).then(function(e){var t=e.data;t.success?n&&n(t.data):(a&&a(),r.Message.error(t.message||""))}).catch(function(e){a&&a(),e.response?(console.warn(e.response.data),console.warn(e.response.status),console.warn(e.response.headers),r.Message.error("请求错误，错误码："+e.response.status)):(console.warn("Error",e.message),r.Message.error("请求错误 "+e.message))})},getParamByName:function(e){var t=new RegExp("(^|&)"+e+"=([^&]*)(&|$)","i"),n=window.location.search.substr(1).match(t);return null!==n?unescape(n[2]):null},getRequest:function(e){var t={};if(-1!==(e=e||location.search).indexOf("?")||-1!==e.indexOf("#"))for(var n=e.substr(1).split("&"),a=0;a<n.length;a++)t[n[a].split("=")[0]]=decodeURIComponent(n[a].split("=")[1]);return t},decodeHTML:function(e){var t=document.createElement("div");t.innerHTML=e;var n=t.innerText||t.textContent;return t=null,n}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvY29tcG9uZW50L3NwZWVkLmpzIiwid2VicGFjazovLy8uL3NyYy9kYXRhL0RhdGFQYXJzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlldy9MZWZ0YmFyLmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3L3BhbmVscy9Sb2xlc1BhbmVsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9fbW9tZW50QDIuMjMuMEBtb21lbnQvbG9jYWxlIHN5bmMgXlxcLlxcLy4qJCIsIndlYnBhY2s6Ly8vLi9zcmMvdmlldy9wYW5lbHMvcm9sZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL0Z1bmN0aW9uUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1hHUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1RyaWdnZXJQYW5lbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlldy9wYW5lbHMvVHJhZmZpY0Zsb3dQYW5lbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlldy9Ub3BiYXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvUmlnaHRiYXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1RoaW5nUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL0F0dHJpYnV0ZVBhbmVsLmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3L3BhbmVscy9Nb3ZlUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1N0YXJ0R29hbFBhbmVsLmpzIiwid2VicGFjazovLy8uL3NyYy92aWV3L3BhbmVscy9Hb2FsUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1RoaW5nc0xpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1RyaWdnZXJBdHRyUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvcGFuZWxzL1RyYWZmaWNBdHRyUGFuZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvY29tcG9uZW50L3RyYWZmaWMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvY29tcG9uZW50L3RyYWZmaWMubGVzcz85ZTZmIiwid2VicGFjazovLy8uL3NyYy92aWV3L2NvbXBvbmVudC90cmFmZmljLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvVmlld2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9kYXRhL0RhdGFMb2FkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hhbmRsZS92aWV3cG9ydC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaGFuZGxlL0FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2hhbmRsZS9Qb2ludC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaGFuZGxlL1RoaW5nLmpzIiwid2VicGFjazovLy8uL3NyYy9oYW5kbGUvT2JqTG9hZGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9oYW5kbGUvTGluZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaGFuZGxlL1RyaWdnZXJBcmVhLmpzIiwid2VicGFjazovLy8uL3NyYy9oYW5kbGUvVHJhZmZpY0FyZWEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xpYi9UcmFuc2Zvcm1Db250cm9scy5qcyIsIndlYnBhY2s6Ly8vLi9saWIveWFtbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdmlldy9DZW50ZXJiYXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RhdGEvaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvc3R5bGUubGVzcz9mZmE1Iiwid2VicGFjazovLy8uL3NyYy9zdHlsZS9zdHlsZS5sZXNzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZS9pY29uLmNzcz83Yjk4Iiwid2VicGFjazovLy8uL3NyYy9zdHlsZS9pY29uLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMuanMiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwiaSIsInJlc29sdmVzIiwibGVuZ3RoIiwiaW5zdGFsbGVkQ2h1bmtzIiwicHVzaCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm1vZHVsZXMiLCJwYXJlbnRKc29ucEZ1bmN0aW9uIiwic2hpZnQiLCJkZWZlcnJlZE1vZHVsZXMiLCJhcHBseSIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwicmVzdWx0IiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxmaWxsZWQiLCJqIiwiZGVwSWQiLCJzcGxpY2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwicyIsImluc3RhbGxlZE1vZHVsZXMiLCIxIiwiZXhwb3J0cyIsIm1vZHVsZSIsImwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwic2xpY2UiLCJGb3JtSXRlbSIsIkZvcm0iLCJJdGVtIiwiUmFkaW9Hcm91cCIsIlJhZGlvIiwiR3JvdXAiLCJsaXN0IiwibGFiZWwiLCJTcGVlZCIsInN0YXRlIiwibm93IiwidHlwZVZhbHVlIiwic3BlZWRzIiwidW5rbm93IiwicHJvcHMiLCJzcGVlZCIsIm9uQ2hhbmdlIiwiUmVhY3QiLCJDb21wb25lbnQiLCJ0aGlzIiwiZm9ybWF0UHJvcHMiLCJzZXRTdGF0ZSIsIkFycmF5IiwiaXNBcnJheSIsIl90eXBlb2YiLCJtYXhTcGVlZCIsIm1heCIsIm1pblNwZWVkIiwibWluIiwiZGVmYXVsdFNwZWVkcyIsIm9iaiIsInR5cGUiLCJ2IiwiX3RoaXMyIiwiX3JlYWN0MiIsImRlZmF1bHQiLCJjcmVhdGVFbGVtZW50IiwiX2lucHV0MiIsInN0eWxlIiwid2lkdGgiLCJodG1sVHlwZSIsInJlYWRPbmx5IiwiY2hhbmdlU2luZ2xlIiwiY2hhbmdlQXJlYU1pbiIsIm1hcmdpbkxlZnQiLCJjaGFuZ2VBcmVhTWF4IiwiZG9tIiwiX2xvb3AiLCJ4IiwiY2xhc3NOYW1lIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Cb3R0b20iLCJlIiwiY2hhbmdlU3BlZWRzIiwiX2J1dHRvbjIiLCJzaXplIiwib25DbGljayIsImRlbGV0ZVNwZWVkcyIsImFkZFNwZWVkcyIsImluZGV4IiwiZGF0YVNvdXJjZSIsImRpc2FibGVkIiwib25UeXBlQ2hhbmdlIiwicmVuZGVyU3BlZWQiLCJnb2FsIiwibW92ZW1lbnQiLCJyb2xlIiwiYWdlbnQiLCJjb252ZXJ0MnlhbWwiLCJvYmplY3RzIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiZ2xvYmFsU3RhdGUiLCJzY2hlbWEiLCJ0cmlnZ2VycyIsInlhbWwiLCJtYWtlWWFtbEFnZW50IiwidHJpZ2dlciIsIm1ha2VZYW1sVHJpZ2dlciIsImNvbnZlcnRZYW1sQWdlbnRTb3VyY2UiLCJhZ2VudFNvdXJjZXMiLCJhZ2VudFNvdXJjZSIsIm1ha2VZYW1sQWdlbnRTb3VyY2UiLCJfdGhpcyIsImluaXRhcmVhcyIsImdvYWxhcmVhcyIsIm1hcCIsIml0ZW0iLCJtYWtlWWFtbFRyYWZmaWMiLCJ0cmFmZmljIiwicG9pbnRzIiwicG9pbnQiLCJ0cmFuc2Zvcm1Qb3NUb0xvYyIsIl90aGlzMyIsIl90aGlzNCIsInN0YXJ0UG9pbnRUeXBlIiwiaW5pdGxvY2F0aW9uIiwiRGF0ZSIsImdldFRpbWUiLCJNYXRoIiwicmFuZG9tIiwibnVtYmVycyIsInBhcnNlSW50IiwiaXNOYU4iLCJtYWtlWWFtbFJvbGUiLCJtYWtlWWFtbEdvYWwiLCJzY2FsZVRvTGF0aXR1ZGUiLCJhcHBlYXJhbmNlIiwiY2F0ZWdvcnkiLCJvZmZzZXQiLCJwYXJzZUZsb2F0IiwibWFrZVlhbWxBcHBlYXJhbmNlIiwibWFrZVlhbWxNb3ZlbWVudCIsImhlaWdodCIsIm1heF9zcGVlZCIsIm1heF9hY2NlbGVyYXRpb24iLCJtYXhfdHVybiIsIl90aGlzNSIsIm1ha2VZYW1sU3BlZWQiLCJzY3JpcHQiLCJ3YWl0dGltZSIsIm1ha2VXYWl0VGltZSIsImxvY2F0aW9uIiwibG9jYXRpb25zIiwiRVRPRkZTRVQiLCJ5IiwieiIsImNvbnZlcnQiLCJhc3NpZ24iLCJmb3JtYXRBZ2VudCIsImZvcm1hdFRyaWdnZXIiLCJmb3JtYXRBZ2VudFNvdXJjZXMiLCJmb3JtYXRUcmFmZmljIiwiYXJlYXMiLCJfdGhpczYiLCJ0cmFmZmljcyIsInJlcyIsImxvY2FsVG9Xb3JsZCIsIm1ha2VSb2xlIiwibWFrZUdvYWwiLCJwYXJzZUFnZW50IiwiX3RoaXM3IiwidHJpZ2dlcjAiLCJfdGhpczgiLCJmb3JtYXRHb2FsIiwiX3RoaXM5IiwiZm9ybWF0UGF0aCIsImdvYWxzIiwiZ29hbE5hbWUiLCJnb2FsSW5kZXgiLCJyZWFkIiwidXJsIiwiYWRkQ2FzZSIsIm1ldGhvZCIsInBsYXkiLCJnZXRSb290TGlzdCIsImdldERvY2tlciIsInBhZ2VTaXplIiwiY3VycmVudFBhZ2UiLCJjcmVhdGVXb3Jrc3BhY2UiLCJnZXROYXNhRGV2aWNlIiwiZ2V0TmV3UnVuVHlwZSIsImdldE1hcFNjZW5lIiwiUmVhY3RET00iLCJyZW5kZXIiLCJfYXBwMiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJyZXF1aXJlIiwiQXBwIiwiY29uZmlnIiwiX2NsYXNzQ2FsbENoZWNrIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsImluaXREYXRhIiwiaW5pdEdsb2JhbFN0YXRlIiwiZ2V0U2NlbmFyaW8iLCJjYWxsYmFjayIsIlRIUkVFIiwiRXZlbnREaXNwYXRjaGVyIiwiaGlzdG9yeSIsIkhpc3RvcnkiLCJ3YXRjaE1hcCIsInRoaW5ncyIsInRyYWZmaWNBcmVhcyIsIm1vZGVscyIsImNhc2VJZCIsInV0aWxzIiwiZ2V0UGFyYW1CeU5hbWUiLCJfQVBJJHJlYWQiLCJBUEkiLCJ2aWV3IiwiZ2V0RGF0YSIsImxvYWRZYW1sIiwiYWxnb1ZlcnNpb24iLCJ3b3JrU3BhY2VJZCIsIm1hcFZlcnNpb24iLCJtYXBJZCIsInNjZW5hcmlvIiwieWFtbERhdGEiLCJZQU1MIiwiTWVzc2FnZSIsImVycm9yIiwiX1RvcGJhcjIiLCJGcmFnbWVudCIsIl9MZWZ0YmFyMiIsIl9DZW50ZXJiYXIyIiwiX1JpZ2h0YmFyMiIsIl9WaWV3ZXIyIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInNyYyIsInRleHRBbGlnbiIsIl9GdW5jdGlvblBhbmVsMiIsImxlZnRiYXIiLCJfUm9sZXNQYW5lbDIiLCJ2aXNpYmxlIiwiX1hHUGFuZWwyIiwiX1RyaWdnZXJQYW5lbDIiLCJfVHJhZmZpY0Zsb3dQYW5lbDIiLCJyb2xlcyIsIlJvbGVzUGFuZWwiLCJjZmciLCJub3dGbGFnIiwiZmxhZ3MiLCJWRUhJQ0xFIiwiQklDWUNMRSIsIlBFREVTVFJJQU4iLCJvdGhlciIsIm1lIiwiJCIsImFqYXgiLCJkYXRhVHlwZSIsImpzb25wQ2FsbGJhY2siLCJzdWNjZXNzIiwidG9GaXhlZCIsImRpc3BhdGNoRXZlbnQiLCJfZHJhZ0l0ZW0iLCJjYXJGbGFnIiwiX2xvb3AyIiwiZHJhZ2dhYmxlIiwib25EcmFnIiwiaW1nIiwiZmxhZyIsIl9sb29wMyIsImNoYW5nZVRhYiIsIl9pY29uMiIsInJlbmRlclJvbGVzIiwicmV2ZXJzZSIsInJlbmRlckl0ZW0iLCIuL2FmIiwiLi9hZi5qcyIsIi4vYXIiLCIuL2FyLWR6IiwiLi9hci1kei5qcyIsIi4vYXIta3ciLCIuL2FyLWt3LmpzIiwiLi9hci1seSIsIi4vYXItbHkuanMiLCIuL2FyLW1hIiwiLi9hci1tYS5qcyIsIi4vYXItc2EiLCIuL2FyLXNhLmpzIiwiLi9hci10biIsIi4vYXItdG4uanMiLCIuL2FyLmpzIiwiLi9heiIsIi4vYXouanMiLCIuL2JlIiwiLi9iZS5qcyIsIi4vYmciLCIuL2JnLmpzIiwiLi9ibSIsIi4vYm0uanMiLCIuL2JuIiwiLi9ibi5qcyIsIi4vYm8iLCIuL2JvLmpzIiwiLi9iciIsIi4vYnIuanMiLCIuL2JzIiwiLi9icy5qcyIsIi4vY2EiLCIuL2NhLmpzIiwiLi9jcyIsIi4vY3MuanMiLCIuL2N2IiwiLi9jdi5qcyIsIi4vY3kiLCIuL2N5LmpzIiwiLi9kYSIsIi4vZGEuanMiLCIuL2RlIiwiLi9kZS1hdCIsIi4vZGUtYXQuanMiLCIuL2RlLWNoIiwiLi9kZS1jaC5qcyIsIi4vZGUuanMiLCIuL2R2IiwiLi9kdi5qcyIsIi4vZWwiLCIuL2VsLmpzIiwiLi9lbi1hdSIsIi4vZW4tYXUuanMiLCIuL2VuLWNhIiwiLi9lbi1jYS5qcyIsIi4vZW4tZ2IiLCIuL2VuLWdiLmpzIiwiLi9lbi1pZSIsIi4vZW4taWUuanMiLCIuL2VuLWlsIiwiLi9lbi1pbC5qcyIsIi4vZW4tbnoiLCIuL2VuLW56LmpzIiwiLi9lbyIsIi4vZW8uanMiLCIuL2VzIiwiLi9lcy1kbyIsIi4vZXMtZG8uanMiLCIuL2VzLXVzIiwiLi9lcy11cy5qcyIsIi4vZXMuanMiLCIuL2V0IiwiLi9ldC5qcyIsIi4vZXUiLCIuL2V1LmpzIiwiLi9mYSIsIi4vZmEuanMiLCIuL2ZpIiwiLi9maS5qcyIsIi4vZm8iLCIuL2ZvLmpzIiwiLi9mciIsIi4vZnItY2EiLCIuL2ZyLWNhLmpzIiwiLi9mci1jaCIsIi4vZnItY2guanMiLCIuL2ZyLmpzIiwiLi9meSIsIi4vZnkuanMiLCIuL2dkIiwiLi9nZC5qcyIsIi4vZ2wiLCIuL2dsLmpzIiwiLi9nb20tbGF0biIsIi4vZ29tLWxhdG4uanMiLCIuL2d1IiwiLi9ndS5qcyIsIi4vaGUiLCIuL2hlLmpzIiwiLi9oaSIsIi4vaGkuanMiLCIuL2hyIiwiLi9oci5qcyIsIi4vaHUiLCIuL2h1LmpzIiwiLi9oeS1hbSIsIi4vaHktYW0uanMiLCIuL2lkIiwiLi9pZC5qcyIsIi4vaXMiLCIuL2lzLmpzIiwiLi9pdCIsIi4vaXQuanMiLCIuL2phIiwiLi9qYS5qcyIsIi4vanYiLCIuL2p2LmpzIiwiLi9rYSIsIi4va2EuanMiLCIuL2trIiwiLi9ray5qcyIsIi4va20iLCIuL2ttLmpzIiwiLi9rbiIsIi4va24uanMiLCIuL2tvIiwiLi9rby5qcyIsIi4va3UiLCIuL2t1LmpzIiwiLi9reSIsIi4va3kuanMiLCIuL2xiIiwiLi9sYi5qcyIsIi4vbG8iLCIuL2xvLmpzIiwiLi9sdCIsIi4vbHQuanMiLCIuL2x2IiwiLi9sdi5qcyIsIi4vbWUiLCIuL21lLmpzIiwiLi9taSIsIi4vbWkuanMiLCIuL21rIiwiLi9tay5qcyIsIi4vbWwiLCIuL21sLmpzIiwiLi9tbiIsIi4vbW4uanMiLCIuL21yIiwiLi9tci5qcyIsIi4vbXMiLCIuL21zLW15IiwiLi9tcy1teS5qcyIsIi4vbXMuanMiLCIuL210IiwiLi9tdC5qcyIsIi4vbXkiLCIuL215LmpzIiwiLi9uYiIsIi4vbmIuanMiLCIuL25lIiwiLi9uZS5qcyIsIi4vbmwiLCIuL25sLWJlIiwiLi9ubC1iZS5qcyIsIi4vbmwuanMiLCIuL25uIiwiLi9ubi5qcyIsIi4vcGEtaW4iLCIuL3BhLWluLmpzIiwiLi9wbCIsIi4vcGwuanMiLCIuL3B0IiwiLi9wdC1iciIsIi4vcHQtYnIuanMiLCIuL3B0LmpzIiwiLi9ybyIsIi4vcm8uanMiLCIuL3J1IiwiLi9ydS5qcyIsIi4vc2QiLCIuL3NkLmpzIiwiLi9zZSIsIi4vc2UuanMiLCIuL3NpIiwiLi9zaS5qcyIsIi4vc2siLCIuL3NrLmpzIiwiLi9zbCIsIi4vc2wuanMiLCIuL3NxIiwiLi9zcS5qcyIsIi4vc3IiLCIuL3NyLWN5cmwiLCIuL3NyLWN5cmwuanMiLCIuL3NyLmpzIiwiLi9zcyIsIi4vc3MuanMiLCIuL3N2IiwiLi9zdi5qcyIsIi4vc3ciLCIuL3N3LmpzIiwiLi90YSIsIi4vdGEuanMiLCIuL3RlIiwiLi90ZS5qcyIsIi4vdGV0IiwiLi90ZXQuanMiLCIuL3RnIiwiLi90Zy5qcyIsIi4vdGgiLCIuL3RoLmpzIiwiLi90bC1waCIsIi4vdGwtcGguanMiLCIuL3RsaCIsIi4vdGxoLmpzIiwiLi90ciIsIi4vdHIuanMiLCIuL3R6bCIsIi4vdHpsLmpzIiwiLi90em0iLCIuL3R6bS1sYXRuIiwiLi90em0tbGF0bi5qcyIsIi4vdHptLmpzIiwiLi91Zy1jbiIsIi4vdWctY24uanMiLCIuL3VrIiwiLi91ay5qcyIsIi4vdXIiLCIuL3VyLmpzIiwiLi91eiIsIi4vdXotbGF0biIsIi4vdXotbGF0bi5qcyIsIi4vdXouanMiLCIuL3ZpIiwiLi92aS5qcyIsIi4veC1wc2V1ZG8iLCIuL3gtcHNldWRvLmpzIiwiLi95byIsIi4veW8uanMiLCIuL3poLWNuIiwiLi96aC1jbi5qcyIsIi4vemgtaGsiLCIuL3poLWhrLmpzIiwiLi96aC10dyIsIi4vemgtdHcuanMiLCJ3ZWJwYWNrQ29udGV4dCIsInJlcSIsImlkIiwid2VicGFja0NvbnRleHRSZXNvbHZlIiwiRXJyb3IiLCJjb2RlIiwia2V5cyIsInJlc29sdmUiLCJjb2xvciIsIm1vZGVsIiwiX3JlYWN0IiwiRnVuY3Rpb25QYW5lbCIsIm1lbnVzIiwiaWNvbiIsImNoYW5nZVBhbmVsIiwiZ29WZXJzaW9uIiwiVHJpZ2dlclBhbmVsIiwiZGVzYyIsInNoYXBlIiwibm93VHJpZ2dlciIsInRyaWdnZXJPYmplY3QiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlQ3Jvc3NNb3VzZSIsImhvdmVyUG9pbnQiLCJwaWdlb25NYXAiLCJyZW1vdmUiLCJ2aWV3ZXIiLCJ2aWV3cG9ydCIsInVwZGF0ZUxpbmUiLCJhZGROZXdUcmlnZ2VyIiwiY29vcmQiLCJhZGRDcm9zc01vdXNlIiwicXVlcnlTZWxlY3RvciIsIml0ZW1zIiwiZW50ZXJUcmlnZ2VyIiwicmVuZGVySXRlbXMiLCJ0cmFmZmljRmxvd1BhbmVsIiwic2VsZWN0SXRlbSIsInN0b3BQcm9wYWdhdGlvbiIsImRlbGV0ZUl0ZW0iLCJmbG9hdCIsImN1cnNvciIsInJlbW92ZUFnZW50U291cmNlIiwidHJhZmZpY0FyZWEiLCJkZWxldGVJdGVtVHJhZmZpYyIsInBlcmNlbnQiLCJtb2RpZnlBZ2VudFNvdXJjZSIsImFkZEl0ZW0iLCJzaG93TW9kZWwiLCJfZHJhZ2luZ0l0ZW0iLCJSaWdodGJhciIsIl9UaGluZ1BhbmVsMiIsIl9UcmFmZmljQXR0clBhbmVsMiIsIl9UcmlnZ2VyQXR0clBhbmVsMiIsIlRoaW5nUGFuZWwiLCJsaXN0ZW5QYW5lbENoZWNrZWQiLCJjbGlja1JpZ2h0QmFySWNvbiIsIl90YWIyIiwidGl0bGUiLCJfTW92ZVBhbmVsMiIsIl9BdHRyaWJ1dGVQYW5lbDIiLCJfVGhpbmdzTGlzdDIiLCJBdHRyaWJ1dGVQYW5lbCIsImZpZWxkIiwiRmllbGQiLCJ0aGluZyIsInNlbGVjdHRoaW5nIiwidXNlckRhdGEiLCJmb3JtYXRBdHRyIiwibWVzaCIsInJlZnMiLCJjbGVhciIsIl9zdGF0ZSIsImF1dG8iLCJzdHJhdGVneSIsIm1vZGlmeU9iamVjdCIsImFkYXB0aXZlX2xpbmUiLCJfc3RhdGUyIiwic3RyYXRlZ3lBdXRvIiwiX2Zvcm0yIiwiY2hhbmdlRm9ybSIsInBsYWNlaG9sZGVyIiwiX3NwZWVkMiIsInJlZiIsImZvcm1MYXlvdXQiLCJsYWJlbEFsaWduIiwid3JhcHBlckNvbCIsInNwYW4iLCJsYWJlbENvbCIsIm9uU3BlZWRDaGFuZ2UiLCJfc3dpdGNoMiIsImNoZWNrZWQiLCJjaGVja2VkQ2hpbGRyZW4iLCJ1bkNoZWNrZWRDaGlsZHJlbiIsIm9uU3BlZWRQQ2hhbmdlIiwicmVuZGVyQXR0ciIsIk1vdmVQYW5lbCIsIl9wb2ludCR1c2VyRGF0YSIsInBvaW50SW5kZXgiLCJ1cGRhdGVQb2ludFBvc2l0aW9uIiwiY2xlYXJNZXNocyIsInBhcmVudCIsImdlb21ldHJ5IiwiZGlzcG9zZSIsImNoYW5nZUdvYWwiLCJkZWxHb2FsIiwiYWRkR29hbCIsIl9TdGFydEdvYWxQYW5lbDIiLCJvblN0YXJ0UG9pbnRDaGFuZ2UiLCJfR29hbFBhbmVsMiIsIm9uR29hbENoYW5nZSIsInJlbmRlclRhYiIsIlN0YXJ0R29hbCIsImRvdE9wdGlvbnMiLCJzdGFydEZ1enppbmciLCJsaXN0ZW5TdGFydFBvc2l0aW9uQ2hhbmdlIiwicG9zaXRpb24iLCJyb3RhdGlvbiIsImluaXRvcmllbnQiLCJzZWxlY3RpbmciLCJ0b2dnbGVDcm9zc01vdXNlIiwibnVtIiwic3RhcnRQb2ludHMiLCJyZW5kZXJBcmVhRG90IiwicmVuZGVyTXVsdGlEb3QiLCJsZWZ0IiwicmlnaHQiLCJzZWxlY3RQb2ludCIsImZvbnRTaXplIiwic3R1ZGlvIiwiX3Byb3BzIiwiX3NlbGVjdDIiLCJjaGFuZ2VEb3RUeXBlIiwicmVuZGVyRG90IiwiR29hbFBhbmVsIiwiZG90VHlwZXMiLCJzdGFydFBvaW50IiwiZG90VHlwZSIsImxpc3RlbkNoYW5nZSIsImNvbnRyb2xzIiwidGFyZ2V0UG9pbnRDb250b3JsIiwiZGV0YWNoIiwidXBkYXRlQXJlYSIsIm9yaWVudGF0aW9uIiwibm93TG9jYXRpb24iLCJfcHJvcHMyIiwidGV4dCIsIlRoaW5nc0xpc3QiLCJwcmUiLCJ1bCIsInhnIiwiWEciLCJ1dWlkIiwic2VsZWN0VGhpbmciLCJ0cmlnZ2VyVHlwZXMiLCJiaW5kaW5nIiwiYWdlbnRzIiwibW9kaWZ5VHJpZ2dlciIsImNoYW5nZVRyaWdnZXIiLCJzZWxlY3RPYmplY3QiLCJ0cmlnZ2VyVHlwZSIsImF1dG9XaWR0aCIsIm9uVHJpZ2dlclR5cGVDaGFuZ2UiLCJhZGRCaW5kIiwiZGVsZXRlQWdlbnQiLCJyZW5kZXJCaW5kaW5nIiwicmVuZGVyVHJpZ2dlcnMiLCJUcmFmZmljUGFuZWwiLCJtYW4iLCJjYXIiLCJtb3RvciIsIl9yYW5nZTIiLCJ0b29sdGlwVmlzaWJsZSIsIm1hcmtzIiwiMCIsIjEwMCIsImhhc1RpcCIsImRlZmF1bHRWYWx1ZSIsIl90cmFmZmljMiIsImNoYW5nZVN0YXJ0QXJlYSIsImNoYW5nZUVuZEFyZWEiLCJyZW5kZXJGb3JtIiwiVHJhZmZpYyIsIm5vd09iamVjdCIsImxlYXZlT2JqZWN0IiwiY2hvb3NlVHJhZmZpYyIsImRlbGV0ZVRyYWZmaWMiLCJpdGVtT2JqZWN0IiwiYWRkTmV3VHJhZmZpYyIsInJlbmRlckxpc3QiLCJjb250ZW50Iiwib3B0aW9ucyIsImhtciIsInRyYW5zZm9ybSIsImluc2VydEludG8iLCJ1bmRlZmluZWQiLCJsb2NhbHMiLCJWaWV3ZXIiLCJnZXRNYXBUb2tlbiIsIl9BUEkkdG9rZW4iLCJpbml0U3R1ZGlvIiwiaW5pdFNjaGVtYSIsImRhdGFMb2FkZXIiLCJEYXRhTG9hZGVyIiwibG9hZERhdGEiLCJEYXRhUGFyc2VyIiwic3BsaXQiLCJTTiIsIlZFUlNJT04iLCJtYXBVcmwiLCJXYXRjaE1hcCIsImNvbnRhaW5lciIsImlzUm9zIiwiYXV0b0NlbnRlciIsImlzQW1hcCIsIm5vRGF0YSIsInBpdGNoIiwiUEkiLCJkb21haW4iLCJ1cGRhdGVWaWV3Iiwib25DYXJMb2FkIiwiem9vbSIsImZvdiIsImRyYXdUb29sIiwiUGlnZW9uR0wiLCJEcmF3VG9vbCIsImFkZExheWVyIiwicmVzaXplIiwib25yZXNpemUiLCJWaWV3cG9ydCIsIm1hcExheWVyIiwib24iLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJ0b3AiLCJjYW1lcmFDb250cm9sIiwidXBkYXRlTWFwIiwiYXJlYSIsImxpbmUiLCJwYXJzZURhdGFUb1NjZW5lIiwiYWRkVGhpbmciLCJhZGRQb2ludHMiLCJhZGRBcmVhcyIsInVwZGF0ZSIsInNldENlbnRlciIsImFkZFRyaWdnZXIiLCJhZGRQb2ludCIsInBhcnNlQWdlbnRTb3VyY2UiLCJjb25jYXQiLCJ0cmFmZmljT2JqZWN0IiwibWFwQ29udHJvbCIsIlBvaW50IiwiVGhpbmciLCJBcmVhIiwiTGluZSIsIlRyaWdnZXJBcmVhIiwiVHJhZmZpY0FyZWEiLCJpbml0Q29udHJvbHMiLCJsaXN0ZW5Eb21FdmVudHMiLCJsaXN0ZW5TZWxlY3RlZENoYW5nZSIsImluaXRDb250b3JsRXZlbnRzIiwiYWRkRHJhZ0V2ZW50cyIsInRoaW5nQ29udHJvbCIsIlRyYW5zZm9ybUNvbnRyb2xzIiwiY2FtZXJhIiwid29ybGQiLCJhZGQiLCJkb21FbGVtZW50Iiwic2V0U2l6ZSIsInNldFNwYWNlIiwiaW5wdXRIYW5kbGVyIiwicmF5Y2FzdGVyIiwibGluZVByZWNpc2lvbiIsInByZXZlbnREZWZhdWx0IiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNsaWVudFgiLCJjbGllbnRZIiwibW91c2UiLCJzZXQiLCJzb3VyY2UiLCJ0ZXN0VGhpbmciLCJzZWxlY3RUYXJnZXRQb2ludCIsImF0dGFjaCIsImNvb3JkaW5hdGVzIiwidG9nZ2xlVGhpbmciLCJ0YXJnZXQiLCJnZXRNb2RlIiwiY2hpbGRyZW4iLCJkaXNhYmxlIiwibW91c2VTdGF0dXMiLCJzZXRUaW1lb3V0IiwidGVzdERyYWdPYmplY3QiLCJkcmFnZ2luZ0l0ZW0iLCJfbGlzdGVuZXJzIiwiaW5pdE1lc2giLCJsaXN0ZW5FdmVudHMiLCJfZSRkYXRhIiwiYWRkQXJlYSIsIm1lc2hzIiwibWF0ZXJpYWwiLCJNZXNoQmFzaWNNYXRlcmlhbCIsInRyYW5zcGFyZW50Iiwic2lkZSIsIkRvdWJsZVNpZGUiLCJvcGFjaXR5IiwiTWVzaCIsIkJ1ZmZlckdlb21ldHJ5IiwiY2xvbmUiLCJ2ZXJ0aWNlc05lZWRVcGRhdGUiLCJkcmF3TW9kZSIsIlRyaWFuZ2xlU3RyaXBEcmF3TW9kZSIsImdlbmVyYXRlUG9pbnRzIiwiYWRkQXR0cmlidXRlIiwiQnVmZmVyQXR0cmlidXRlIiwiY29tcHV0ZUJvdW5kaW5nQm94IiwiYWRkQXRDb29yZGluYXRlIiwiRmxvYXQzMkFycmF5IiwibGlzdGVuQWRkUG9pbnQiLCJTcGhlcmVHZW9tZXRyeSIsIk1lc2hQaG9uZ01hdGVyaWFsIiwiYm94IiwiQm94R2VvbWV0cnkiLCJhcnJvd0dlb21ldHJ5IiwiR2VvbWV0cnkiLCJ2ZXJ0aWNlcyIsIlZlY3RvcjMiLCJhcnJvdyIsIkxpbmVTZWdtZW50cyIsImFkZFN0YXJ0UG9pbnQiLCJnZXRQb2ludEZyb21NZXNoIiwiYWRkTmV3UG9pbnQiLCJhZGRQb2ludEV2ZW50cyIsIm1vdmVUb0Nvb3JkaW5hdGUiLCJfT2JqTG9hZGVyIiwiaW5pdE1lc2hzIiwib2JqTG9hZGVyIiwiT2JqTG9hZGVyIiwiZGVsZXRlVGhpbmciLCJvYmplY3ROYW1lIiwicmVtb3ZlT2JqZWN0IiwiZmlsdGVyIiwicG9zIiwiYWRkWEciLCJnZXRIb3ZlcmVkRWxlbWVudCIsImFuYW1lIiwiYWRkT2JqZWN0IiwibG9hZFhHIiwidGhlbiIsIlByb21pc2UiLCJtdGxMb2FkZXIiLCJNVExMb2FkZXIiLCJzZXRDcm9zc09yaWdpbiIsInNldFBhdGgiLCJsb2FkIiwibWF0ZXJpYWxzIiwiT0JKTG9hZGVyIiwic2V0TWF0ZXJpYWxzIiwic2NhbGUiLCJhZGRTY2FsYXIiLCJMaW5lQmFzaWNNYXRlcmlhbCIsImFkZExpbmUiLCJwb3NpdGlvbnMiLCJiYXNlWFlaIiwiVHJpZ2dlciIsImxpbmVNYXRlcmlhbCIsImxpbmVIb3Zlck1hdGVyaWFsIiwicG9pbnRNYXRlcmlhbCIsInBvaW50SG92ZXJNYXRlcmlhbCIsInVwZGF0ZVNjaGVtYSIsImRlbGV0ZVRyaWdnZXIiLCJhZGRIb3ZlclBvaW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9yZWYiLCJhZGRTZWxlY3RFdmVudHMiLCJhZGRQb2ludFNlbGVjdEV2ZW50cyIsIl9yZWYyIiwiaG92ZXJPYmplY3QiLCJmb3JjZSIsInVwZGF0ZVBvaW50cyIsImNvbXB1dGVCb3VuZGluZ1NwaGVyZSIsImhvdmVyUG9zaXRpb24iLCJhcmVhTWF0ZXJpYWwiLCJhcmVhSG92ZXJNYXRlcmlhbCIsImluZGV4cyIsImVhcmN1dCIsIkdpem1vTWF0ZXJpYWwiLCJwYXJhbWV0ZXJzIiwiZGVwdGhUZXN0IiwiZGVwdGhXcml0ZSIsImZvZyIsIkZyb250U2lkZSIsInNldFZhbHVlcyIsIm9sZENvbG9yIiwib2xkT3BhY2l0eSIsImhpZ2hsaWdodCIsImhpZ2hsaWdodGVkIiwic2V0UkdCIiwiY29weSIsImNvbnN0cnVjdG9yIiwiR2l6bW9MaW5lTWF0ZXJpYWwiLCJsaW5ld2lkdGgiLCJwaWNrZXJNYXRlcmlhbCIsIlRyYW5zZm9ybUdpem1vIiwiaW5pdCIsIk9iamVjdDNEIiwiaGFuZGxlcyIsInBpY2tlcnMiLCJwbGFuZXMiLCJwbGFuZUdlb21ldHJ5IiwiUGxhbmVCdWZmZXJHZW9tZXRyeSIsInBsYW5lTWF0ZXJpYWwiLCJYWSIsIllaIiwiWFoiLCJYWVpFIiwiYWN0aXZlUGxhbmUiLCJzZXR1cEdpem1vcyIsImdpem1vTWFwIiwicmVuZGVyT3JkZXIiLCJJbmZpbml0eSIsImhhbmRsZUdpem1vcyIsInBpY2tlckdpem1vcyIsInRyYXZlcnNlIiwiY2hpbGQiLCJ1cGRhdGVNYXRyaXgiLCJ0ZW1wR2VvbWV0cnkiLCJhcHBseU1hdHJpeCIsIm1hdHJpeCIsImF4aXMiLCJleWUiLCJ2ZWMxIiwidmVjMiIsImxvb2tBdE1hdHJpeCIsIk1hdHJpeDQiLCJzZWFyY2giLCJxdWF0ZXJuaW9uIiwic2V0RnJvbVJvdGF0aW9uTWF0cml4IiwibG9va0F0Iiwic2V0RnJvbUV1bGVyIiwiVHJhbnNmb3JtR2l6bW9UcmFuc2xhdGUiLCJDb25lQnVmZmVyR2VvbWV0cnkiLCJ0cmFuc2xhdGUiLCJsaW5lWEdlb21ldHJ5IiwiRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZSIsImxpbmVZR2VvbWV0cnkiLCJYIiwiWSIsIkN5bGluZGVyQnVmZmVyR2VvbWV0cnkiLCJzZXRBY3RpdmVQbGFuZSIsInRlbXBNYXRyaXgiLCJhcHBseU1hdHJpeDQiLCJnZXRJbnZlcnNlIiwiZXh0cmFjdFJvdGF0aW9uIiwibWF0cml4V29ybGQiLCJhYnMiLCJUcmFuc2Zvcm1HaXptb1JvdGF0ZSIsIloiLCJyYWRpdXMiLCJmYWNpbmciLCJhcmMiLCJjb3MiLCJzaW4iLCJUb3J1c0J1ZmZlckdlb21ldHJ5IiwiZXllMiIsImFyZ3VtZW50cyIsIndvcmxkUm90YXRpb24iLCJFdWxlciIsInRlbXBRdWF0ZXJuaW9uIiwiUXVhdGVybmlvbiIsInVuaXRYIiwidW5pdFkiLCJ1bml0WiIsInF1YXRlcm5pb25YIiwicXVhdGVybmlvblkiLCJxdWF0ZXJuaW9uWiIsIm1ha2VSb3RhdGlvbkZyb21RdWF0ZXJuaW9uIiwic2V0RnJvbUF4aXNBbmdsZSIsImF0YW4yIiwibXVsdGlwbHlRdWF0ZXJuaW9ucyIsIlRyYW5zZm9ybUdpem1vU2NhbGUiLCJCb3hCdWZmZXJHZW9tZXRyeSIsImxpbmVaR2VvbWV0cnkiLCJYWVoiLCJ0cmFuc2xhdGlvblNuYXAiLCJyb3RhdGlvblNuYXAiLCJzcGFjZSIsInNjb3BlIiwiX21vZGUiLCJfZHJhZ2dpbmciLCJfZ2l6bW8iLCJyb3RhdGUiLCJnaXptb09iaiIsImNoYW5nZUV2ZW50IiwibW91c2VEb3duRXZlbnQiLCJtb3VzZVVwRXZlbnQiLCJvYmplY3RDaGFuZ2VFdmVudCIsInJheSIsIlJheWNhc3RlciIsInBvaW50ZXJWZWN0b3IiLCJWZWN0b3IyIiwib2Zmc2V0Um90YXRpb24iLCJ0ZW1wVmVjdG9yIiwicXVhdGVybmlvblhZWiIsInF1YXRlcm5pb25FIiwib2xkUG9zaXRpb24iLCJvbGRTY2FsZSIsIm9sZFJvdGF0aW9uTWF0cml4IiwicGFyZW50Um90YXRpb25NYXRyaXgiLCJwYXJlbnRTY2FsZSIsIndvcmxkUG9zaXRpb24iLCJ3b3JsZFJvdGF0aW9uTWF0cml4IiwiY2FtUG9zaXRpb24iLCJjYW1Sb3RhdGlvbiIsIm9uUG9pbnRlckhvdmVyIiwiZXZlbnQiLCJidXR0b24iLCJpbnRlcnNlY3QiLCJpbnRlcnNlY3RPYmplY3RzIiwiY2hhbmdlZFRvdWNoZXMiLCJvblBvaW50ZXJEb3duIiwicG9pbnRlciIsInN1YiIsIm5vcm1hbGl6ZSIsInBsYW5lSW50ZXJzZWN0Iiwic2V0RnJvbU1hdHJpeFNjYWxlIiwib25Qb2ludGVyTW92ZSIsIm11bHRpcGx5Iiwicm91bmQiLCJnZXRXb3JsZFBvc2l0aW9uIiwiY3Jvc3MiLCJhbmdsZVRvIiwib25Qb2ludGVyVXAiLCJUb3VjaEV2ZW50Iiwic2V0RnJvbUNhbWVyYSIsImludGVyc2VjdGlvbnMiLCJzZXRNb2RlIiwic2V0VHJhbnNsYXRpb25TbmFwIiwic2V0Um90YXRpb25TbmFwIiwidXBkYXRlTWF0cml4V29ybGQiLCJzZXRGcm9tTWF0cml4UG9zaXRpb24iLCJQZXJzcGVjdGl2ZUNhbWVyYSIsIk9ydGhvZ3JhcGhpY0NhbWVyYSIsInUiLCJhIiwiZiIsImluZGVudGF0aW9uIiwiZHVtcCIsImgiLCJzdHJSZXBlYXQiLCJpc0VtcHR5IiwiLi9JbmxpbmUiLCIuL1V0aWxzIiwiMiIsIkxJU1RfRVNDQVBFRVMiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJMSVNUX0VTQ0FQRUQiLCJNQVBQSU5HX0VTQ0FQRUVTX1RPX0VTQ0FQRUQiLCJQQVRURVJOX0NIQVJBQ1RFUlNfVE9fRVNDQVBFIiwiUEFUVEVSTl9NQVBQSU5HX0VTQ0FQRUVTIiwiam9pbiIsIlBBVFRFUk5fU0lOR0xFX1FVT1RJTkciLCJyZXF1aXJlc0RvdWJsZVF1b3RpbmciLCJ0ZXN0IiwiZXNjYXBlV2l0aERvdWJsZVF1b3RlcyIsInJlcGxhY2UiLCJyZXF1aXJlc1NpbmdsZVF1b3RpbmciLCJlc2NhcGVXaXRoU2luZ2xlUXVvdGVzIiwiLi9QYXR0ZXJuIiwiMyIsIm1lc3NhZ2UiLCJwYXJzZWRMaW5lIiwic25pcHBldCIsIl9fc3VwZXJfXyIsInRvU3RyaW5nIiwiNCIsIjUiLCI2IiwiaW5kZXhPZiIsIlJFR0VYX1FVT1RFRF9TVFJJTkciLCJQQVRURVJOX1RSQUlMSU5HX0NPTU1FTlRTIiwiUEFUVEVSTl9RVU9URURfU0NBTEFSIiwiUEFUVEVSTl9USE9VU0FORF9OVU1FUklDX1NDQUxBUiIsIlBBVFRFUk5fU0NBTEFSX0JZX0RFTElNSVRFUlMiLCJzZXR0aW5ncyIsImNvbmZpZ3VyZSIsImV4Y2VwdGlvbk9uSW52YWxpZFR5cGUiLCJvYmplY3REZWNvZGVyIiwidHJpbSIsImNoYXJBdCIsInBhcnNlU2VxdWVuY2UiLCJwYXJzZU1hcHBpbmciLCJwYXJzZVNjYWxhciIsInRvSVNPU3RyaW5nIiwiZHVtcE9iamVjdCIsImlzRGlnaXRzIiwiaXNOdW1lcmljIiwiUEFUVEVSTl9EQVRFIiwidG9Mb3dlckNhc2UiLCJFIiwiVCIsIl8iLCJwYXJzZVF1b3RlZFNjYWxhciIsImx0cmltIiwiZXhlYyIsInJ0cmltIiwiZXZhbHVhdGVTY2FsYXIiLCJzdWJzdHIiLCJ1bmVzY2FwZURvdWJsZVF1b3RlZFN0cmluZyIsInVuZXNjYXBlU2luZ2xlUXVvdGVkU3RyaW5nIiwiTmFOIiwicGFyc2VCb29sZWFuIiwic3RyaW5nVG9EYXRlIiwiaGV4RGVjIiwib2N0RGVjIiwiLi9Fc2NhcGVyIiwiLi9FeGNlcHRpb24vRHVtcEV4Y2VwdGlvbiIsIi4vRXhjZXB0aW9uL1BhcnNlRXhjZXB0aW9uIiwiLi9FeGNlcHRpb24vUGFyc2VNb3JlIiwiLi9VbmVzY2FwZXIiLCI3IiwibGluZXMiLCJjdXJyZW50TGluZU5iIiwiY3VycmVudExpbmUiLCJQQVRURVJOX0ZPTERFRF9TQ0FMQVJfQUxMIiwiUEFUVEVSTl9GT0xERURfU0NBTEFSX0VORCIsIlBBVFRFUk5fU0VRVUVOQ0VfSVRFTSIsIlBBVFRFUk5fQU5DSE9SX1ZBTFVFIiwiUEFUVEVSTl9DT01QQUNUX05PVEFUSU9OIiwiUEFUVEVSTl9NQVBQSU5HX0lURU0iLCJQQVRURVJOX0RFQ0lNQUwiLCJQQVRURVJOX0lOREVOVF9TUEFDRVMiLCJQQVRURVJOX1RSQUlMSU5HX0xJTkVTIiwiUEFUVEVSTl9ZQU1MX0hFQURFUiIsIlBBVFRFUk5fTEVBRElOR19DT01NRU5UUyIsIlBBVFRFUk5fRE9DVU1FTlRfTUFSS0VSX1NUQVJUIiwiUEFUVEVSTl9ET0NVTUVOVF9NQVJLRVJfRU5EIiwiUEFUVEVSTl9GT0xERURfU0NBTEFSX0JZX0lOREVOVEFUSU9OIiwiQ09OVEVYVF9OT05FIiwiQ09OVEVYVF9TRVFVRU5DRSIsIkNPTlRFWFRfTUFQUElORyIsIkEiLCJMIiwiTiIsImciLCJSIiwiQyIsIkkiLCJTIiwidyIsIlAiLCJiIiwiRCIsIk8iLCJNIiwiRyIsIlUiLCJGIiwiayIsIkgiLCJCIiwiUSIsImNsZWFudXAiLCJtb3ZlVG9OZXh0TGluZSIsImlzQ3VycmVudExpbmVFbXB0eSIsImdldFJlYWxDdXJyZW50TGluZU5iIiwiaXNOZXh0TGluZVVuSW5kZW50ZWRDb2xsZWN0aW9uIiwiZ2V0TmV4dEVtYmVkQmxvY2siLCJsZWFkc3BhY2VzIiwiZ2V0Q3VycmVudExpbmVJbmRlbnRhdGlvbiIsImlzTmV4dExpbmVJbmRlbnRlZCIsInBhcnNlVmFsdWUiLCJpc1N0cmluZ1VuSW5kZW50ZWRDb2xsZWN0aW9uSXRlbSIsImlzQ3VycmVudExpbmVDb21tZW50IiwiaXNDdXJyZW50TGluZUJsYW5rIiwibW92ZVRvUHJldmlvdXNMaW5lIiwibW9kaWZpZXJzIiwicGFyc2VGb2xkZWRTY2FsYXIiLCJzZXBhcmF0b3IiLCJyZXBsYWNlQWxsIiwic3ViU3RyQ291bnQiLCI4IiwicmF3UmVnZXgiLCJjbGVhbmVkUmVnZXgiLCJyZWdleCIsIlJlZ0V4cCIsIm1hcHBpbmciLCJsYXN0SW5kZXgiLCI5IiwiUEFUVEVSTl9FU0NBUEVEX0NIQVJBQ1RFUiIsIl91bmVzY2FwZUNhbGxiYWNrIiwidW5lc2NhcGVDaGFyYWN0ZXIiLCJ1dGY4Y2hyIiwiMTAiLCJSRUdFWF9MRUZUX1RSSU1fQllfQ0hBUiIsIlJFR0VYX1JJR0hUX1RSSU1fQllfQ0hBUiIsIlJFR0VYX1NQQUNFUyIsIlJFR0VYX0RJR0lUUyIsIlJFR0VYX09DVEFMIiwiUkVHRVhfSEVYQURFQ0lNQUwiLCJMT0NBTF9USU1FWk9ORV9PRkZTRVQiLCJnZXRUaW1lem9uZU9mZnNldCIsImlzRW1wdHlPYmplY3QiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJob3VyIiwiVVRDIiwibWludXRlIiwic2Vjb25kIiwiZnJhY3Rpb24iLCJ0eiIsInR6X2hvdXIiLCJ0el9taW51dGUiLCJ0el9zaWduIiwic2V0VGltZSIsImdldFN0cmluZ0Zyb21GaWxlIiwiWE1MSHR0cFJlcXVlc3QiLCJBY3RpdmVYT2JqZWN0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlc3BvbnNlVGV4dCIsIm9wZW4iLCJzZW5kIiwicmVhZEZpbGUiLCJyZWFkRmlsZVN5bmMiLCIxMSIsInBhcnNlRmlsZSIsIi4vRHVtcGVyIiwiLi9QYXJzZXIiLCJfbmV4dCIsIkhFTFBfVVJMIiwiaG9zdCIsInRlc3ROYXNhIiwic3RyIiwiTmF2IiwiUG9wdXBJdGVtIiwiQ2VudGVyYmFyIiwiZmllbGRNYXAiLCJlcnJvclZpc2libGUiLCJlcnJvck1lc3NhZ2UiLCJjb25maWdWaXNpYmxlIiwibWFwVmlzaWJsZSIsImF1dG9TZWxlY3QiLCJhbGdvVHlwZSIsIm5hc2FUcnVlIiwibWFwU2NlbmVzIiwicnVuVHlwZXMiLCJuYXNhRGV2aWNlcyIsInVzZXJEZWZpbmVkVmFsdWUiLCJtYXBTY2VuZVZhbHVlIiwiYXNpbURvY2tlck5hbWVWYWx1ZSIsImRvY2tlcnNEZWZhdWx0VmFsdWUiLCJtYXBTY2VuZSIsImRvY2tlclZlcnNpb24iLCJkb2NrZXJOYW1lQXNpbSIsInJ1blR5cGUiLCJuYXNhRW52IiwibmFzYURldmljZSIsImRvY2tlck5hbWVJcGMiLCJkb2NrZXJOYW1lUGFyIiwic2V0VmFsdWUiLCJnZXREb2NrZXJOYW1lSXBjU291cmNlIiwiZ2V0TWFwU2NlbmVzIiwiX0FQSSRnZXROZXdSdW5UeXBlIiwiX0FQSSRnZXROYXNhRGV2aWNlIiwieWFtbEpzb24iLCJfQVBJJGNyZWF0ZVdvcmtzcGFjZSIsIl9yZWY0IiwiY2FzZUNoZWNrU3VjY2VzcyIsImNhc2VDaGVja01lc3NhZ2UiLCJfd2luZG93JGdsb2JhbFN0YXRlJHMiLCJzZXRQbGF5VXJsIiwid2FybmluZyIsImluZm8iLCJwcmV2aWV3TnVtIiwidGVhbUlkIiwiZ2xvYmFsRGF0YSIsImVuY29kZVVSSUNvbXBvbmVudCIsIndpbiIsIl9BUEkkcGxheSIsImNsb3NlIiwiaXBzIiwicG9ydHMiLCJzZXJ2ZXJJbmZvIiwiX3JlZjUiLCJpcCIsImRvY2tlclBvcnQiLCJfcmVmNiIsInRva2VuIiwidXRtZElkIiwidGFza0lkIiwiX29mZnNldCIsIl9zbGljZWRUb0FycmF5IiwiaW5pdFNraXAiLCJDdXN0b21FdmVudCIsImRldGFpbCIsInBvcnQiLCJfd2luZG93JGdsb2JhbFN0YXRlJHMyIiwidmFsaWRhdGUiLCJlcnIiLCJ2YWx1ZXMiLCJkb2NrZXJJdGVtcyIsImRvY2tlcnMiLCJfQVBJJGNyZWF0ZVdvcmtzcGFjZTIiLCJfd2luZG93JGdsb2JhbFN0YXRlJHMzIiwiX0FQSSRhZGRDYXNlIiwiZ2V0UnVuVHlwZXMiLCJfd2luZG93JGdsb2JhbFN0YXRlJGMiLCJ0cmFuc2Zvcm1Db250cm9sTW9kZSIsIl9BUEkkZ2V0RG9ja2VyIiwidmVyc2lvbiIsImFnQnVpbGRMaXN0Iiwib25lIiwicGxhdGZvcm0iLCJidWlsZERvY2tlclZlcnNpb24iLCJ1bnNoaWZ0Iiwic2hvd0RlZmluZURvY2tlciIsIl9BUEkkZ2V0TWFwU2NlbmUiLCJtYXBOYW1lIiwiX3RoaXMxMCIsImRpcmVjdGlvbiIsImFjdGl2ZURpcmVjdGlvbiIsInNldE1hcENvbmZpZ1Zpc2libGUiLCJkZWxldGUiLCJzYXZlIiwiTWVudSIsImRlZmF1bHRDaGVja2VkIiwiY2hhbmdlVHlwZSIsIl9kaWFsb2cyIiwib25PayIsInN1Ym1pdENvbmZpZ0RhdGEiLCJvbkNhbmNlbCIsIm9uQ2xvc2UiLCJmaXhlZFNwYW4iLCJyZXF1aXJlZCIsInJlcXVpcmVkTWVzc2FnZSIsInJ1blR5cGVzQ2hhbmdlIiwic2VsZWN0RG9ja2VyQ2hhbmdlIiwibWFyZ2luVG9wIiwiaHJlZiIsInN1Ym1pdE1hcERhdGEiLCJmb290ZXIiLCJtb3ZlbWVudHMiLCJhcHBlcmFuY2VzIiwiX2F4aW9zIiwiZm4iLCJlcnJGbiIsInBhcmFtcyIsIl9heGlvczIiLCJ0aW1lb3V0IiwiY2F0Y2giLCJyZXNwb25zZSIsImNvbnNvbGUiLCJ3YXJuIiwiaGVhZGVycyIsInJlZyIsIm1hdGNoIiwidW5lc2NhcGUiLCJnZXRSZXF1ZXN0IiwidGhlUmVxdWVzdCIsInN0cnMiLCJkZWNvZGVVUklDb21wb25lbnQiLCJkZWNvZGVIVE1MIiwidGVtcCIsImlubmVySFRNTCIsIm91dHB1dCIsImlubmVyVGV4dCIsInRleHRDb250ZW50Il0sIm1hcHBpbmdzIjoiYUFDQSxTQUFBQSxFQUFBQyxHQVFBLElBUEEsSUFNQUMsRUFBQUMsRUFOQUMsRUFBQUgsRUFBQSxHQUNBSSxFQUFBSixFQUFBLEdBQ0FLLEVBQUFMLEVBQUEsR0FJQU0sRUFBQSxFQUFBQyxFQUFBLEdBQ1FELEVBQUFILEVBQUFLLE9BQW9CRixJQUM1QkosRUFBQUMsRUFBQUcsR0FDQUcsRUFBQVAsSUFDQUssRUFBQUcsS0FBQUQsRUFBQVAsR0FBQSxJQUVBTyxFQUFBUCxHQUFBLEVBRUEsSUFBQUQsS0FBQUcsRUFDQU8sT0FBQUMsVUFBQUMsZUFBQUMsS0FBQVYsRUFBQUgsS0FDQWMsRUFBQWQsR0FBQUcsRUFBQUgsSUFLQSxJQUZBZSxLQUFBaEIsR0FFQU8sRUFBQUMsUUFDQUQsRUFBQVUsT0FBQVYsR0FPQSxPQUhBVyxFQUFBUixLQUFBUyxNQUFBRCxFQUFBYixHQUFBLElBR0FlLElBRUEsU0FBQUEsSUFFQSxJQURBLElBQUFDLEVBQ0FmLEVBQUEsRUFBaUJBLEVBQUFZLEVBQUFWLE9BQTRCRixJQUFBLENBRzdDLElBRkEsSUFBQWdCLEVBQUFKLEVBQUFaLEdBQ0FpQixHQUFBLEVBQ0FDLEVBQUEsRUFBa0JBLEVBQUFGLEVBQUFkLE9BQTJCZ0IsSUFBQSxDQUM3QyxJQUFBQyxFQUFBSCxFQUFBRSxHQUNBLElBQUFmLEVBQUFnQixLQUFBRixHQUFBLEdBRUFBLElBQ0FMLEVBQUFRLE9BQUFwQixJQUFBLEdBQ0FlLEVBQUFNLElBQUFDLEVBQUFOLEVBQUEsS0FHQSxPQUFBRCxFQUlBLElBQUFRLEVBQUEsR0FLQXBCLEVBQUEsQ0FDQXFCLEVBQUEsR0FHQVosRUFBQSxHQUdBLFNBQUFTLEVBQUEx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Q0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxVQUFBLElBQ0FDLGFBQUEsSUFDQUMsVUFBQSxJQUNBQyxhQUFBLElBQ0FDLFVBQUEsSUFDQUMsYUFBQSxJQUNBQyxVQUFBLElBQ0FDLGFBQUEsSUFDQUMsVUFBQSxJQUNBQyxhQUFBLElBQ0FDLFVBQUEsSUFDQUMsYUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLGFBQUEsSUFDQUMsVUFBQSxJQUNBQyxhQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsYUFBQSxJQUNBQyxVQUFBLElBQ0FDLGFBQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxhQUFBLElBQ0FDLGdCQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsVUFBQSxJQUNBQyxhQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsYUFBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsYUFBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxVQUFBLElBQ0FDLGFBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxhQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFlBQUEsSUFDQUMsZUFBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsT0FBQSxJQUNBQyxVQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVBQUEsSUFDQUMsUUFBQSxJQUNBQyxXQUFBLElBQ0FDLE9BQUEsSUFDQUMsVUFBQSxJQUNBQyxPQUFBLElBQ0FDLFVB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QU84SCxTQUFTNnlCLE9BQU82SyxPQUFPLEdBQUcyUCxNQUFNRCxHQUNqRCxPQUFVLE9BQU5sMkMsRUFDS28yQyxTQUFTcDJDLEVBQUUsSUFFYixNQVlQcTJDLFdBbkVpQixTQUFDMXJDLEdBRWxCLElBQU0yckMsRUFBYSxHQUNuQixJQUEwQixLQUYxQjNyQyxFQUFNQSxHQUFPN0IsU0FBUzZ5QixRQUVkZ0osUUFBUSxPQUFxQyxJQUF0Qmg2QixFQUFJZzZCLFFBQVEsS0FHekMsSUFGQSxJQUNNNFIsRUFETTVyQyxFQUFJNjdCLE9BQU8sR0FDTmxaLE1BQU0sS0FDZDN2QixFQUFJLEVBQUdBLEVBQUk0NEMsRUFBSzE0QyxPQUFRRixJQUMvQjI0QyxFQUFXQyxFQUFLNTRDLEdBQUcydkIsTUFBTSxLQUFLLElBQU1rcEIsbUJBQW1CRCxFQUFLNTRDLEdBQUcydkIsTUFBTSxLQUFLLElBRzlFLE9BQU9ncEIsR0EwRFBHLFdBWGlCLFNBQUMvc0IsR0FDbEIsSUFBSWd0QixFQUFPaHJDLFNBQVNuSSxjQUFjLE9BQ2xDbXpDLEVBQUtDLFVBQVlqdEIsRUFDakIsSUFBTWt0QixFQUFTRixFQUFLRyxXQUFhSCxFQUFLSSxZQUV0QyxPQURBSixFQUFPLEtBQ0FFIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MTogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbMjQ3LDBdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBGb3JtIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9mb3JtJztcbmltcG9ydCBJbnB1dCBmcm9tICdAYWxpZmUvbmV4dC9saWIvaW5wdXQnO1xuaW1wb3J0IFJhZGlvIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9yYWRpbyc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9idXR0b24nO1xuXG5jb25zdCBGb3JtSXRlbSA9IEZvcm0uSXRlbTtcbmNvbnN0IFJhZGlvR3JvdXAgPSBSYWRpby5Hcm91cDtcbmNvbnN0IGxpc3QgPSBbXG4gIHtcbiAgICB2YWx1ZTogJ3NpbmdsZScsXG4gICAgbGFiZWw6ICfljZXlgLwnXG4gIH0sIHtcbiAgICB2YWx1ZTogJ2FyZWEnLFxuICAgIGxhYmVsOiAn5Yy66Ze0J1xuICB9LCB7XG4gICAgdmFsdWU6ICdtdWx0aScsXG4gICAgbGFiZWw6ICfnprvmlaMnXG4gIH1cbl07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwZWVkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGUgPSB7XG4gICAgbm93OiAnJyxcbiAgICB0eXBlVmFsdWU6ICdzaW5nbGUnLFxuICAgIHNwZWVkczogW10sXG4gICAgdW5rbm93OiBmYWxzZVxuICB9XG4gIHByb3BzID0ge1xuICAgIGxhYmVsOiAn6YCf5bqmKG0vcyk6JyxcbiAgICBzcGVlZDogbnVsbCxcbiAgICBvbkNoYW5nZTogKCkgPT4ge1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuZm9ybWF0UHJvcHModGhpcy5wcm9wcyk7XG4gIH1cblxuICBVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcykge1xuICAgIHRoaXMuZm9ybWF0UHJvcHMocHJvcHMpO1xuICB9XG5cbiAgZm9ybWF0UHJvcHMocHJvcHMpIHtcbiAgICBjb25zdCBzcGVlZCA9IHByb3BzLnNwZWVkO1xuICAgIGxldCB1bmtub3cgPSBwcm9wcy51bmtub3c7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB1bmtub3dcbiAgICB9KVxuICAgIGxldCB0eXBlVmFsdWUgPSAnJztcbiAgICBpZiAoQXJyYXkuaXNBcnJheShzcGVlZCkpIHtcbiAgICAgIHR5cGVWYWx1ZSA9ICdtdWx0aSc7XG4gICAgICB0aGlzLnNldFN0YXRlKHtzcGVlZHM6IHNwZWVkfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Yoc3BlZWQpID09PSAnb2JqZWN0Jykge1xuICAgICAgdHlwZVZhbHVlID0gJ2FyZWEnO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7bWF4U3BlZWQ6IHNwZWVkLm1heCwgbWluU3BlZWQ6IHNwZWVkLm1pbn0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0eXBlVmFsdWUgPSAnc2luZ2xlJztcbiAgICAgIHRoaXMuc2V0U3RhdGUoe3NwZWVkfSk7XG4gICAgfVxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZGVmYXVsdFNwZWVkczogcHJvcHMuZGVmYXVsdFNwZWVkcyxcbiAgICAgIHR5cGVWYWx1ZVxuICAgIH0pO1xuICB9XG5cbiAgY2hhbmdlU3RhdGUob2JqKSB7XG4gICAgdGhpcy5zZXRTdGF0ZShvYmopO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzcGVlZDogJycsXG4gICAgICBzcGVlZHM6IFtdLFxuICAgICAgbWF4U3BlZWQ6ICcnLFxuICAgICAgbWluU3BlZWQ6ICcnXG4gICAgfSk7XG4gIH1cblxuICBvblR5cGVDaGFuZ2UodHlwZSkge1xuICAgIGxldCB2YWx1ZTtcbiAgICBpZiAodHlwZSA9PT0gJ3NpbmdsZScpIHtcbiAgICAgIHZhbHVlID0gdGhpcy5zdGF0ZS5zcGVlZDtcblxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ211bHRpJykge1xuICAgICAgaWYgKHRoaXMuc3RhdGUuc3BlZWRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFsdWUgPSB0aGlzLnN0YXRlLnNwZWVkcztcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wcm9wcy5kZWZhdWx0U3BlZWRzKSB7XG4gICAgICAgIHZhbHVlID0gdGhpcy5wcm9wcy5kZWZhdWx0U3BlZWRzO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mKHRoaXMuc3RhdGUubWluU3BlZWQpICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YodGhpcy5zdGF0ZS5tYXhTcGVlZCkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhbHVlID0ge21pbjogdGhpcy5zdGF0ZS5taW5TcGVlZCwgbWF4OiB0aGlzLnN0YXRlLm1heFNwZWVkfTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB0eXBlVmFsdWU6IHR5cGVcbiAgICB9KTtcbiAgICBpZiAodHlwZW9mKHZhbHVlKSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlICYmIHRoaXMucHJvcHMub25DaGFuZ2UodmFsdWUsIHRoaXMuc3RhdGUudHlwZVZhbHVlKTtcbiAgfVxuXG4gIGNoYW5nZVNpbmdsZSh2KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7c3BlZWQ6IHZ9KTtcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlICYmIHRoaXMucHJvcHMub25DaGFuZ2UodiwgdGhpcy5zdGF0ZS50eXBlVmFsdWUpO1xuICB9XG5cbiAgY2hhbmdlQXJlYU1pbih2KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7bWluU3BlZWQ6IHZ9KTtcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlICYmIHRoaXMucHJvcHMub25DaGFuZ2Uoe21pbjogdiwgbWF4OiB0aGlzLnN0YXRlLm1heFNwZWVkfSwgdGhpcy5zdGF0ZS50eXBlVmFsdWUpO1xuICB9XG5cbiAgY2hhbmdlQXJlYU1heCh2KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7bWF4U3BlZWQ6IHZ9KTtcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlICYmIHRoaXMucHJvcHMub25DaGFuZ2Uoe21pbjogdGhpcy5zdGF0ZS5taW5TcGVlZCwgbWF4OiB2fSwgdGhpcy5zdGF0ZS50eXBlVmFsdWUpO1xuICB9XG5cbiAgcmVuZGVyU3BlZWQoKSB7XG4gICAgY29uc3QgbGFiZWwgPSB0aGlzLnByb3BzLmxhYmVsIHx8ICfpgJ/luqYobS9zKTonO1xuICAgIGlmICh0aGlzLnN0YXRlLnR5cGVWYWx1ZSA9PT0gJ3NpbmdsZScpIHtcbiAgICAgIHJldHVybiA8Rm9ybUl0ZW0gbGFiZWw9e2xhYmVsICsgJ+WPquiDvei+k+WFpeaVsOWAvOexu+Weiyd9PlxuICAgICAgICA8SW5wdXRcbiAgICAgICAgICBuYW1lPVwic3BlZWRcIiBzdHlsZT17e3dpZHRoOiAnODBweCd9fVxuICAgICAgICAgIGh0bWxUeXBlPVwibnVtYmVyXCJcbiAgICAgICAgICBtaW49ezB9XG4gICAgICAgICAgbWF4PXs1MH1cbiAgICAgICAgICByZWFkT25seT17dGhpcy5zdGF0ZS51bmtub3d9XG4gICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudW5rbm93ID8gMCA6IHRoaXMuc3RhdGUuc3BlZWR9XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMuY2hhbmdlU2luZ2xlLmJpbmQodGhpcyl9Lz5cbiAgICAgIDwvRm9ybUl0ZW0+O1xuICAgIH0gZWxzZSBpZiAodGhpcy5zdGF0ZS50eXBlVmFsdWUgPT09ICdhcmVhJykge1xuICAgICAgcmV0dXJuIDxGb3JtSXRlbSBsYWJlbD17bGFiZWwgKyAn5Y+q6IO96L6T5YWl5pWw5YC857G75Z6LJ30+XG4gICAgICAgIDxJbnB1dCBuYW1lPVwibWluU3BlZWRcIiBzdHlsZT17e3dpZHRoOiAnNjBweCd9fSBtaW49ezB9XG4gICAgICAgICAgICAgICBtYXg9ezUwfSBodG1sVHlwZT1cIm51bWJlclwiIHZhbHVlPXt0aGlzLnN0YXRlLm1pblNwZWVkIHx8IDB9XG4gICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5jaGFuZ2VBcmVhTWluLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgPElucHV0IG5hbWU9XCJtYXhTcGVlZFwiIG1pbj17MH1cbiAgICAgICAgICAgICAgIG1heD17NTB9IHN0eWxlPXt7d2lkdGg6ICc2MHB4JywgbWFyZ2luTGVmdDogJzEwcHgnfX0gaHRtbFR5cGU9XCJudW1iZXJcIiB2YWx1ZT17dGhpcy5zdGF0ZS5tYXhTcGVlZCB8fCAwfVxuICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuY2hhbmdlQXJlYU1heC5iaW5kKHRoaXMpfS8+XG4gICAgICA8L0Zvcm1JdGVtPjtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgc3BlZWRzID0gdGhpcy5zdGF0ZS5zcGVlZHM7XG4gICAgICBjb25zdCBkb20gPSBbXTtcbiAgICAgIGZvciAoY29uc3QgeCBpbiBzcGVlZHMpIHtcbiAgICAgICAgZG9tLnB1c2goXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGVlZC1pdGVtXCIga2V5PXt4fT5cbiAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiAnODBweCcsIG1hcmdpblJpZ2h0OiAnNXB4JywgbWFyZ2luQm90dG9tOiAnNXB4J319XG4gICAgICAgICAgICAgIG1pbj17MH1cbiAgICAgICAgICAgICAgbWF4PXs1MH0gaHRtbFR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICBvbkNoYW5nZT17KHMsIGUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZVNwZWVkcyhzLCB4KVxuICAgICAgICAgICAgICB9fSBuYW1lPVwibWF4X3NwZWVkXCIgdmFsdWU9e3NwZWVkc1t4XX0vPlxuICAgICAgICAgICAgPEJ1dHRvbiBzaXplPVwic21hbGxcIiBvbkNsaWNrPXtlID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5kZWxldGVTcGVlZHMoeClcbiAgICAgICAgICAgIH19Pi08L0J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiA8Rm9ybUl0ZW0gbGFiZWw9e2xhYmVsfT48QnV0dG9uIHNpemU9XCJzbWFsbFwiIHR5cGU9XCJwcmltYXJ5XCIgb25DbGljaz17ZSA9PiB0aGlzLmFkZFNwZWVkcygpfT4rPC9CdXR0b24+e2RvbX1cbiAgICAgIDwvRm9ybUl0ZW0+O1xuICAgIH1cbiAgfVxuXG4gIGNoYW5nZVNwZWVkcyhzLCBpbmRleCkge1xuICAgIGNvbnN0IHtzcGVlZHN9ID0gdGhpcy5zdGF0ZTtcbiAgICBzcGVlZHNbaW5kZXhdID0gcztcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHNwZWVkc1xuICAgIH0pO1xuICAgIHRoaXMucHJvcHMub25DaGFuZ2UgJiYgdGhpcy5wcm9wcy5vbkNoYW5nZShzcGVlZHMsIHRoaXMuc3RhdGUudHlwZVZhbHVlKTtcbiAgfVxuXG4gIGFkZFNwZWVkcygpIHtcbiAgICBjb25zdCB7c3BlZWRzfSA9IHRoaXMuc3RhdGU7XG4gICAgc3BlZWRzLnB1c2goMCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzcGVlZHNcbiAgICB9KTtcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlICYmIHRoaXMucHJvcHMub25DaGFuZ2Uoc3BlZWRzLCB0aGlzLnN0YXRlLnR5cGVWYWx1ZSk7XG4gIH1cblxuICBkZWxldGVTcGVlZHMoeCkge1xuICAgIGNvbnN0IHtzcGVlZHN9ID0gdGhpcy5zdGF0ZTtcbiAgICBzcGVlZHMuc3BsaWNlKHgsIDEpO1xuICAgIHRoaXMuc2V0U3RhdGUoe3NwZWVkc30pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoPGRpdj48Rm9ybUl0ZW0gbGFiZWw9XCLmlbDlgLznsbvlnos6XCI+XG4gICAgICA8UmFkaW9Hcm91cCBkYXRhU291cmNlPXtsaXN0fSB2YWx1ZT17dGhpcy5zdGF0ZS51bmtub3cgPyAnc2luZ2xlJyA6IHRoaXMuc3RhdGUudHlwZVZhbHVlfVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMuc3RhdGUudW5rbm93fSBvbkNoYW5nZT17dGhpcy5vblR5cGVDaGFuZ2UuYmluZCh0aGlzKX0vPlxuICAgIDwvRm9ybUl0ZW0+XG4gICAgICB7dGhpcy5yZW5kZXJTcGVlZCgpfVxuICAgIDwvZGl2Pik7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgc3RhdGU6IHtcbiAgICBnb2FsOiB7fSxcbiAgICBtb3ZlbWVudDoge30sXG4gICAgcm9sZToge30sXG4gICAgYWdlbnQ6IHt9XG4gIH0sXG5cbiAgLyoqKioqKioqKioqKioqKioqKiAgXG4gKiAg5p6E6YCgeWFtbOimgeaxgueahGpzb27nu5PmnoRcbiAqICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXG4gIGNvbnZlcnQyeWFtbCgpIHtcbiAgICBjb25zdCBvYmplY3RzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm9iamVjdHMpKTtcbiAgICBjb25zdCB0cmlnZ2VycyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkod2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS50cmlnZ2VycykpO1xuICAgIHRoaXMueWFtbCA9IFtdO1xuICAgIGZvciAoY29uc3QgeCBpbiBvYmplY3RzKSB7XG4gICAgICBsZXQgYWdlbnQgPSBvYmplY3RzW3hdO1xuICAgICAgYWdlbnQgPSB0aGlzLm1ha2VZYW1sQWdlbnQoYWdlbnQpO1xuICAgICAgdGhpcy55YW1sLnB1c2goeyBhZ2VudCB9KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCB4IGluIHRyaWdnZXJzKSB7XG4gICAgICBjb25zdCB0cmlnZ2VyID0gdGhpcy5tYWtlWWFtbFRyaWdnZXIodHJpZ2dlcnNbeF0pO1xuICAgICAgdGhpcy55YW1sLnB1c2goeyB0cmlnZ2VyIH0pO1xuICAgIH1cbiAgICB0aGlzLmNvbnZlcnRZYW1sQWdlbnRTb3VyY2UoKTtcbiAgICByZXR1cm4gdGhpcy55YW1sO1xuICB9LFxuXG4gIC8v5Lqk6YCa5rWB57yW56CBXG4gIGNvbnZlcnRZYW1sQWdlbnRTb3VyY2UoKSB7XG4gICAgY29uc3QgYWdlbnRTb3VyY2VzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLmFnZW50U291cmNlcyB8fCB7fSkpO1xuICAgIGZvciAoY29uc3QgeCBpbiBhZ2VudFNvdXJjZXMpIHtcbiAgICAgIGNvbnN0IGFnZW50U291cmNlID0gdGhpcy5tYWtlWWFtbEFnZW50U291cmNlKGFnZW50U291cmNlc1t4XSk7XG4gICAgICB0aGlzLnlhbWwucHVzaCh7IGFnZW50U291cmNlIH0pO1xuICAgIH1cbiAgfSxcblxuICBtYWtlWWFtbEFnZW50U291cmNlKGFnZW50U291cmNlKSB7XG4gICAgY29uc3QgaW5pdGFyZWFzID0gW10sIGdvYWxhcmVhcyA9IFtdO1xuICAgIGFnZW50U291cmNlLmluaXRhcmVhcy5tYXAoaXRlbSA9PiB7XG4gICAgICBpbml0YXJlYXMucHVzaChpdGVtLm5hbWUpO1xuICAgICAgdGhpcy5tYWtlWWFtbFRyYWZmaWMoaXRlbSk7XG4gICAgfSk7XG4gICAgYWdlbnRTb3VyY2UuZ29hbGFyZWFzLm1hcChpdGVtID0+IHtcbiAgICAgIGdvYWxhcmVhcy5wdXNoKGl0ZW0ubmFtZSk7XG4gICAgICB0aGlzLm1ha2VZYW1sVHJhZmZpYyhpdGVtKTtcbiAgICB9KTtcbiAgICBhZ2VudFNvdXJjZS5pbml0YXJlYXMgPSBpbml0YXJlYXM7XG4gICAgYWdlbnRTb3VyY2UuZ29hbGFyZWFzID0gZ29hbGFyZWFzO1xuICAgIHJldHVybiBhZ2VudFNvdXJjZTtcbiAgfSxcblxuICBtYWtlWWFtbFRyYWZmaWModHJhZmZpYykge1xuICAgIGNvbnN0IHBvaW50cyA9IFtdO1xuICAgIHRyYWZmaWMucG9pbnRzLm1hcChwb2ludCA9PiB7XG4gICAgICBwb2ludHMucHVzaCh0aGlzLnRyYW5zZm9ybVBvc1RvTG9jKHBvaW50KSk7XG4gICAgfSk7XG4gICAgdHJhZmZpYy5wb2ludHMgPSBwb2ludHM7XG4gICAgdGhpcy55YW1sLnB1c2goeyB0cmFmZmljIH0pO1xuICB9LFxuXG4gIG1ha2VZYW1sVHJpZ2dlcih0cmlnZ2VyKSB7XG4gICAgY29uc3QgcG9pbnRzID0gW107XG4gICAgdHJpZ2dlci5wb2ludHMubWFwKGl0ZW0gPT4ge1xuICAgICAgcG9pbnRzLnB1c2godGhpcy50cmFuc2Zvcm1Qb3NUb0xvYyhpdGVtKSk7XG4gICAgfSk7XG4gICAgdHJpZ2dlci5wb2ludHMgPSBwb2ludHM7XG4gICAgcmV0dXJuIHRyaWdnZXI7XG4gIH0sXG5cbiAgbWFrZVlhbWxBZ2VudChhZ2VudCkge1xuICAgIGlmIChhZ2VudC5zdGFydFBvaW50VHlwZSA9PT0gJ3NpbmdsZScpIHtcbiAgICAgIGFnZW50LmluaXRsb2NhdGlvbiA9IHRoaXMudHJhbnNmb3JtUG9zVG9Mb2MoYWdlbnQuaW5pdGxvY2F0aW9uWzBdKTtcbiAgICB9IGVsc2UgaWYgKGFnZW50LnN0YXJ0UG9pbnRUeXBlID09PSAnYXJlYScpIHsgXG4gICAgICBhZ2VudC5pbml0bG9jYXRpb24gPSB7XG4gICAgICAgIG1pbjogdGhpcy50cmFuc2Zvcm1Qb3NUb0xvYyhhZ2VudC5pbml0bG9jYXRpb25bMF0pLFxuICAgICAgICBtYXg6IHRoaXMudHJhbnNmb3JtUG9zVG9Mb2MoYWdlbnQuaW5pdGxvY2F0aW9uWzFdKVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWdlbnQuaW5pdGxvY2F0aW9uLm1hcChpdGVtID0+IHRoaXMudHJhbnNmb3JtUG9zVG9Mb2MoaXRlbSkpO1xuICAgIH1cbiAgICBjb25zdCByb2xlID0gYWdlbnQucm9sZTtcbiAgICBjb25zdCBnb2FsID0gYWdlbnQuZ29hbDtcbiAgICBnb2FsLm5hbWUgPSAnZ29hbF8nICsgbmV3IERhdGUoKS5nZXRUaW1lKCkgKiBNYXRoLnJhbmRvbSgpO1xuICAgIGFnZW50LnJvbGUgPSByb2xlLm5hbWU7XG4gICAgYWdlbnQuZ29hbCA9IGdvYWwubmFtZTtcbiAgICBhZ2VudC5udW1iZXJzID0gcGFyc2VJbnQoYWdlbnQubnVtYmVycyB8fCAxKTtcbiAgICBpZiAoaXNOYU4oYWdlbnQubnVtYmVycykpYWdlbnQubnVtYmVycyA9IDE7XG4gICAgdGhpcy5tYWtlWWFtbFJvbGUocm9sZSk7XG4gICAgdGhpcy5tYWtlWWFtbEdvYWwoZ29hbCk7XG4gICAgZGVsZXRlIGFnZW50LnNjYWxlVG9MYXRpdHVkZTtcbiAgICBkZWxldGUgYWdlbnQuc3RhcnRQb2ludFR5cGU7Ly/liKDpmaTlhpfkvZnmlbDmja5cbiAgICByZXR1cm4gYWdlbnQ7XG4gIH0sXG5cbiAgbWFrZVlhbWxSb2xlKHJvbGUpIHtcbiAgICBpZiAocm9sZS5uYW1lID09PSAnZ3BsdXMnKSByZXR1cm47XG4gICAgY29uc3QgYXBwZWFyYW5jZSA9IHJvbGUuYXBwZWFyYW5jZTtcbiAgICBjb25zdCBtb3ZlbWVudCA9IHJvbGUubW92ZW1lbnQ7XG4gICAgcm9sZS5hcHBlYXJhbmNlID0gcm9sZS5hcHBlYXJhbmNlLm5hbWU7XG4gICAgcm9sZS5tb3ZlbWVudCA9IHJvbGUubW92ZW1lbnQubmFtZTtcbiAgICByb2xlLmNhdGVnb3J5ID0gcm9sZS5jYXRlZ29yeSB8fCAnVU5LTk9XTic7XG4gICAgaWYgKCFyb2xlLm9mZnNldClyb2xlLm9mZnNldCA9IDA7XG4gICAgaWYgKHR5cGVvZihyb2xlLm9mZnNldC5taW4pICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcm9sZS5vZmZzZXQgPSB7XG4gICAgICAgIG1pbjogcGFyc2VGbG9hdChyb2xlLm9mZnNldC5taW4pLFxuICAgICAgICBtYXg6IHBhcnNlRmxvYXQocm9sZS5vZmZzZXQubWF4KVxuICAgICAgfTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkocm9sZS5vZmZzZXQpKSB7XG4gICAgICBjb25zdCBzcGVlZHMgPSBbXTtcbiAgICAgIGZvciAoY29uc3QgeCBpbiByb2xlLm9mZnNldCkge1xuICAgICAgICBzcGVlZHMucHVzaChwYXJzZUZsb2F0KHJvbGUub2Zmc2V0W3hdKSk7XG4gICAgICB9XG4gICAgICByb2xlLm9mZnNldCA9IHNwZWVkcztcbiAgICB9IGVsc2Uge1xuICAgICAgcm9sZS5vZmZzZXQgPSBwYXJzZUZsb2F0KHJvbGUub2Zmc2V0IHx8IDApO1xuICAgIH1cbiAgICB0aGlzLm1ha2VZYW1sQXBwZWFyYW5jZShhcHBlYXJhbmNlKTtcbiAgICB0aGlzLm1ha2VZYW1sTW92ZW1lbnQobW92ZW1lbnQpO1xuICAgIHRoaXMueWFtbC5wdXNoKHsgbW92ZW1lbnQgfSk7XG4gICAgdGhpcy55YW1sLnB1c2goeyBhcHBlYXJhbmNlIH0pO1xuICAgIHRoaXMueWFtbC5wdXNoKHsgcm9sZTogcm9sZSB9KTtcbiAgfSxcblxuICBtYWtlWWFtbEFwcGVhcmFuY2UoYXBwZWFyYW5jZSkge1xuICAgIGFwcGVhcmFuY2UubGVuZ3RoID0gcGFyc2VGbG9hdChhcHBlYXJhbmNlLmxlbmd0aCk7XG4gICAgYXBwZWFyYW5jZS53aWR0aCA9IHBhcnNlRmxvYXQoYXBwZWFyYW5jZS53aWR0aCk7XG4gICAgYXBwZWFyYW5jZS5oZWlnaHQgPSBwYXJzZUZsb2F0KGFwcGVhcmFuY2UuaGVpZ2h0KTtcbiAgfSxcblxuICBtYWtlWWFtbE1vdmVtZW50KG1vdmVtZW50KSB7XG4gICAgaWYgKHR5cGVvZihtb3ZlbWVudC5tYXhfc3BlZWQubWluKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIG1vdmVtZW50Lm1heF9zcGVlZCA9IHtcbiAgICAgICAgbWluOiBwYXJzZUZsb2F0KG1vdmVtZW50Lm1heF9zcGVlZC5taW4pLFxuICAgICAgICBtYXg6IHBhcnNlRmxvYXQobW92ZW1lbnQubWF4X3NwZWVkLm1heClcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG1vdmVtZW50Lm1heF9zcGVlZCkpIHtcbiAgICAgIGNvbnN0IHNwZWVkcyA9IFtdO1xuICAgICAgZm9yIChjb25zdCB4IGluIG1vdmVtZW50Lm1heF9zcGVlZCkge1xuICAgICAgICBzcGVlZHMucHVzaChwYXJzZUZsb2F0KG1vdmVtZW50Lm1heF9zcGVlZFt4XSkpO1xuICAgICAgfVxuICAgICAgbW92ZW1lbnQubWF4X3NwZWVkID0gc3BlZWRzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtb3ZlbWVudC5tYXhfc3BlZWQgPSBwYXJzZUZsb2F0KG1vdmVtZW50Lm1heF9zcGVlZCB8fCAwKTtcbiAgICB9XG4gICAgICAgXG4gICAgbW92ZW1lbnQubWF4X2FjY2VsZXJhdGlvbiA9IHBhcnNlRmxvYXQobW92ZW1lbnQubWF4X2FjY2VsZXJhdGlvbik7XG4gICAgbW92ZW1lbnQubWF4X3R1cm4gPSBwYXJzZUZsb2F0KG1vdmVtZW50Lm1heF90dXJuKTtcbiAgfSxcblxuICBtYWtlWWFtbEdvYWwoZ29hbCkge1xuICAgIGlmIChnb2FsLnNwZWVkKSB7XG4gICAgICBnb2FsLnNwZWVkID0gdGhpcy5tYWtlWWFtbFNwZWVkKGdvYWwuc3BlZWQpO1xuICAgIH1cbiAgICBpZiAoZ29hbC5zY3JpcHQpIHtcbiAgICAgIGNvbnN0IHNjcmlwdCA9IFtdO1xuICAgICAgZm9yIChjb25zdCB4IGluIGdvYWwuc2NyaXB0KSB7XG4gICAgICAgIGlmICghZ29hbC5zY3JpcHRbeF0pIGNvbnRpbnVlO1xuICAgICAgICBpZiAoZ29hbC5zY3JpcHRbeF0ud2FpdHRpbWUpIHtcbiAgICAgICAgICBzY3JpcHQucHVzaCh0aGlzLm1ha2VXYWl0VGltZShnb2FsLnNjcmlwdFt4XSkpO1xuICAgICAgICB9XG4gICAgICAgIGdvYWwuc2NyaXB0W3hdLm5hbWUgPSAnZ29hbF8nICsgbmV3IERhdGUoKS5nZXRUaW1lKCkgKyBNYXRoLnJhbmRvbSgpO1xuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5tYWtlWWFtbEdvYWwoZ29hbC5zY3JpcHRbeF0pO1xuICAgICAgICBpZiAobmFtZSlcbiAgICAgICAgICBzY3JpcHQucHVzaChuYW1lKTtcbiAgICAgIH1cbiAgICAgIGdvYWwuc2NyaXB0ID0gc2NyaXB0O1xuICAgICAgdGhpcy55YW1sLnB1c2goeyBnb2FsIH0pO1xuICAgICAgcmV0dXJuIGdvYWwubmFtZTtcbiAgICB9IGVsc2UgaWYgKGdvYWwudHlwZSA9PT0gJ2FyZWEnKSB7XG4gICAgICBnb2FsLmxvY2F0aW9uID0geyBtaW46IHRoaXMudHJhbnNmb3JtUG9zVG9Mb2MoZ29hbC5sb2NhdGlvblswXSksIG1heDogdGhpcy50cmFuc2Zvcm1Qb3NUb0xvYyhnb2FsLmxvY2F0aW9uWzFdKSB9O1xuICAgICAgdGhpcy55YW1sLnB1c2goeyBnb2FsIH0pO1xuICAgICAgcmV0dXJuIGdvYWwubmFtZTtcbiAgICB9IGVsc2UgaWYgKGdvYWwudHlwZSA9PT0gJ211bHRpJykge1xuICAgICAgY29uc3QgbG9jYXRpb25zID0gW107XG4gICAgICBnb2FsLmxvY2F0aW9uLm1hcChpdGVtID0+IHtcbiAgICAgICAgbG9jYXRpb25zLnB1c2godGhpcy50cmFuc2Zvcm1Qb3NUb0xvYyhpdGVtKSk7XG4gICAgICB9KTtcbiAgICAgIGdvYWwubG9jYXRpb24gPSBsb2NhdGlvbnM7XG4gICAgICB0aGlzLnlhbWwucHVzaCh7IGdvYWwgfSk7XG4gICAgICByZXR1cm4gZ29hbC5uYW1lO1xuICAgIH0gZWxzZSBpZiAoZ29hbC50eXBlID09PSAnc2luZ2xlJykge1xuICAgICAgZ29hbC5sb2NhdGlvbiA9IHRoaXMudHJhbnNmb3JtUG9zVG9Mb2MoZ29hbC5sb2NhdGlvblswXSk7XG4gICAgICB0aGlzLnlhbWwucHVzaCh7IGdvYWwgfSk7XG4gICAgICByZXR1cm4gZ29hbC5uYW1lO1xuICAgIH1cbiAgfSxcblxuICBtYWtlWWFtbFNwZWVkKHNwZWVkKSB7XG4gICAgaWYgKHNwZWVkLm1pbikge1xuICAgICAgc3BlZWQubWluID0gcGFyc2VGbG9hdChzcGVlZC5taW4pO1xuICAgICAgc3BlZWQubWF4ID0gcGFyc2VGbG9hdChzcGVlZC5tYXgpO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzcGVlZCkpIHtcbiAgICAgIGNvbnN0IHNwZWVkcyA9IFtdO1xuICAgICAgc3BlZWQubWFwKGl0ZW0gPT4ge3NwZWVkcy5wdXNoKHBhcnNlRmxvYXQoaXRlbSkpfSk7XG4gICAgICByZXR1cm4gc3BlZWRzO1xuICAgIH0gZWxzZSB7XG4gICAgICBzcGVlZCA9IHBhcnNlRmxvYXQoc3BlZWQpO1xuICAgIH1cbiAgICByZXR1cm4gc3BlZWQ7XG4gIH0sXG5cbiAgdHJhbnNmb3JtUG9zVG9Mb2MobG9jYXRpb24pIHtcbiAgICByZXR1cm4gW1xuICAgICAgbG9jYXRpb24ueCAtIHdpbmRvdy5FVE9GRlNFVC54LFxuICAgICAgbG9jYXRpb24ueSAtIHdpbmRvdy5FVE9GRlNFVC55LFxuICAgICAgbG9jYXRpb24uelxuICAgIF07XG4gIH0sXG5cbiAgbWFrZVdhaXRUaW1lKGdvYWwpIHtcbiAgICBpZiAoZ29hbC53YWl0dGltZSAhPT0gMCkge1xuICAgICAgY29uc3QgZ29hbCA9IHtcbiAgICAgICAgbmFtZTogKCd3YWl0dGltZV8nICsgKG5ldyBEYXRlKCkuZ2V0VGltZSgpKSArIC0td2luZG93Lmdsb2JhbFN0YXRlLmluZGV4KSxcbiAgICAgICAgd2FpdHRpbWU6IGdvYWwud2FpdHRpbWVcbiAgICAgIH07XG4gICAgICB0aGlzLnlhbWwucHVzaCh7IGdvYWwgfSk7XG4gICAgICByZXR1cm4gZ29hbC5uYW1lO1xuICAgIH1cbiAgfSxcblxuICAvKiogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICogeWFtbCAyIHNjaGVtYVxuICogLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuICAgIFxuICAgIFxuICBjb252ZXJ0KHlhbWwpIHtcbiAgICBpZiAoIXlhbWwpIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCBkYXRhID0ge307XG4gICAgeWFtbC5tYXAoaXRlbSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IHggaW4gaXRlbSkge1xuICAgICAgICBpZiAoIWRhdGFbeF0pZGF0YVt4XSA9IHt9O1xuICAgICAgICBkYXRhW3hdW2l0ZW1beF0ubmFtZV0gPSBpdGVtW3hdO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhKTtcbiAgICB0aGlzLnN0YXRlID0gZGF0YTtcbiAgICBjb25zdCBhZ2VudCA9IHRoaXMuZm9ybWF0QWdlbnQoKTtcbiAgICB0aGlzLnN0YXRlLm9iamVjdHMgPSBhZ2VudDtcbiAgICB0aGlzLnN0YXRlLnRyaWdnZXJzID0gdGhpcy5mb3JtYXRUcmlnZ2VyKCk7XG4gICAgdGhpcy5zdGF0ZS5hZ2VudFNvdXJjZXMgPSB0aGlzLmZvcm1hdEFnZW50U291cmNlcygpO1xuICAgIHJldHVybiB7IG9iamVjdHM6IHRoaXMuc3RhdGUub2JqZWN0cywgdHJpZ2dlcnM6IHRoaXMuc3RhdGUudHJpZ2dlcnMsIGFnZW50U291cmNlczogdGhpcy5zdGF0ZS5hZ2VudFNvdXJjZXMgfTtcbiAgfSxcblxuICAvKipcbiAgICAgKiDkuqTpgJrmtYHmlbDmja7ph43lu7pcbiAgICAgKi9cbiAgZm9ybWF0QWdlbnRTb3VyY2VzKCkge1xuICAgIGNvbnN0IGFnZW50U291cmNlcyA9IHRoaXMuc3RhdGUuYWdlbnRTb3VyY2U7XG4gICAgZm9yIChjb25zdCB4IGluIGFnZW50U291cmNlcykge1xuICAgICAgYWdlbnRTb3VyY2VzW3hdLmluaXRhcmVhcyA9IHRoaXMuZm9ybWF0VHJhZmZpYyhhZ2VudFNvdXJjZXNbeF0uaW5pdGFyZWFzKTtcbiAgICAgIGFnZW50U291cmNlc1t4XS5nb2FsYXJlYXMgPSB0aGlzLmZvcm1hdFRyYWZmaWMoYWdlbnRTb3VyY2VzW3hdLmdvYWxhcmVhcyk7XG4gICAgfVxuICAgIHJldHVybiBhZ2VudFNvdXJjZXM7XG4gIH0sXG5cbiAgZm9ybWF0VHJhZmZpYyhhcmVhcykge1xuICAgIGNvbnN0IHRyYWZmaWNzID0gdGhpcy5zdGF0ZS50cmFmZmljO1xuICAgIGNvbnN0IHJlcyA9IFtdO1xuICAgIGFyZWFzLm1hcChpdGVtID0+IHtcbiAgICAgIGNvbnN0IHRyYWZmaWMgPSB0cmFmZmljc1tpdGVtXTtcbiAgICAgIGNvbnN0IHBvaW50cyA9IFtdO1xuICAgICAgdHJhZmZpYy5wb2ludHMubWFwKHBvaW50ID0+IHtcbiAgICAgICAgcG9pbnRzLnB1c2godGhpcy5sb2NhbFRvV29ybGQocG9pbnQpKTtcbiAgICAgIH0pO1xuICAgICAgdHJhZmZpYy5wb2ludHMgPSBwb2ludHM7XG4gICAgICByZXMucHVzaCh0cmFmZmljKTtcbiAgICB9KTsgXG4gICAgcmV0dXJuIHJlcztcbiAgfSxcblxuICAvKipcbiAgICAgKiDlj5jmiJDmoJHnirbnu5PmnoRcbiAgICAgKi9cbiAgZm9ybWF0QWdlbnQoKSB7XG4gICAgY29uc3QgYWdlbnQgPSB0aGlzLnN0YXRlLmFnZW50IHx8IHt9O1xuICAgIGZvciAoY29uc3QgeCBpbiBhZ2VudCkge1xuICAgICAgY29uc3Qgcm9sZSA9IHRoaXMubWFrZVJvbGUoYWdlbnRbeF0pO1xuICAgICAgY29uc3QgZ29hbCA9IHRoaXMubWFrZUdvYWwoYWdlbnRbeF0pO1xuICAgICAgdGhpcy5wYXJzZUFnZW50KGFnZW50W3hdKTtcbiAgICAgIGFnZW50W3hdLnJvbGUgPSByb2xlO1xuICAgICAgYWdlbnRbeF0uZ29hbCA9IGdvYWw7XG4gICAgfVxuICAgIHJldHVybiBhZ2VudDtcbiAgfSxcblxuICAvL+WFvFxuICBmb3JtYXRUcmlnZ2VyKCkge1xuICAgIGNvbnN0IHRyaWdnZXJzID0ge307XG4gICAgY29uc3QgdHJpZ2dlciA9IHRoaXMuc3RhdGUudHJpZ2dlcjtcbiAgICBpZiAoIXRyaWdnZXIpIHJldHVybiB0cmlnZ2VycztcbiAgICBmb3IgKGNvbnN0IHggaW4gdHJpZ2dlcikge1xuICAgICAgY29uc3QgdHJpZ2dlcjAgPSB0cmlnZ2VyW3hdO1xuICAgICAgY29uc3QgcG9pbnRzID0gdHJpZ2dlcjAucG9pbnRzO1xuICAgICAgY29uc3QgbG9jYXRpb25zID0gW107XG4gICAgICBwb2ludHMubWFwKGl0ZW0gPT4ge1xuICAgICAgICBsb2NhdGlvbnMucHVzaCh0aGlzLmxvY2FsVG9Xb3JsZChpdGVtKSk7XG4gICAgICB9KTtcbiAgICAgIHRyaWdnZXIwLnBvaW50cyA9IGxvY2F0aW9ucztcbiAgICAgIHRyaWdnZXJzW3RyaWdnZXIwLm5hbWVdID0gKHRyaWdnZXIwKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyaWdnZXJzO1xuICB9LFxuXG5cbiAgLyoqXG4gICAgICog6Kej5p6Q6LW35aeL5L2N572uXG4gICAgICovXG4gIHBhcnNlQWdlbnQoYWdlbnQpIHtcbiAgICBpZiAodHlwZW9mIGFnZW50LmluaXRsb2NhdGlvblswXSA9PT0gJ251bWJlcicpIHtcbiAgICAgIGFnZW50LnN0YXJ0UG9pbnRUeXBlID0gJ3NpbmdsZSc7XG4gICAgICBhZ2VudC5pbml0bG9jYXRpb24gPSBbdGhpcy5sb2NhbFRvV29ybGQoYWdlbnQuaW5pdGxvY2F0aW9uKV07XG4gICAgfSBlbHNlIGlmIChhZ2VudC5pbml0bG9jYXRpb24ubWluKSB7XG4gICAgICBhZ2VudC5zdGFydFBvaW50VHlwZSA9ICdhcmVhJztcbiAgICAgIGFnZW50LmluaXRsb2NhdGlvbiA9IFt0aGlzLmxvY2FsVG9Xb3JsZChhZ2VudC5pbml0bG9jYXRpb24ubWluKSwgdGhpcy5sb2NhbFRvV29ybGQoYWdlbnQuaW5pdGxvY2F0aW9uLm1heCldO1xuICAgIH0gZWxzZSBpZiAoYWdlbnQuaW5pdGxvY2F0aW9uWzBdLmxlbmd0aCkge1xuICAgICAgYWdlbnQuc3RhcnRQb2ludFR5cGUgPSAnbXVsdGknO1xuICAgICAgYWdlbnQuaW5pdGxvY2F0aW9uLm1hcChpdGVtID0+IHRoaXMubG9jYWxUb1dvcmxkKGl0ZW0pICk7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgICAqIOacrOWcsOWdkOagh+i9rOS4lueVjOWdkOagh1xuICAgICAqL1xuICBsb2NhbFRvV29ybGQobG9jYXRpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogcGFyc2VGbG9hdChsb2NhdGlvblswXSkgKyB3aW5kb3cuRVRPRkZTRVQueCxcbiAgICAgIHk6IHBhcnNlRmxvYXQobG9jYXRpb25bMV0pICsgd2luZG93LkVUT0ZGU0VULnksXG4gICAgICB6OiBwYXJzZUZsb2F0KGxvY2F0aW9uWzJdKVxuICAgIH07XG4gIH0sXG5cbiAgLyoqXG4gICAgICog5p6E6YCgcm9sZeeahHRyZWVcbiAgICAgKi9cbiAgbWFrZVJvbGUoYWdlbnQpIHtcbiAgICBpZiAoYWdlbnQucm9sZSA9PT0gJ2dwbHVzJykgcmV0dXJuIHsgbmFtZTogJ2dwbHVzJywgbW92ZW1lbnQ6IHt9fTtcbiAgICBjb25zdCByb2xlID0gdGhpcy5zdGF0ZS5yb2xlW2FnZW50LnJvbGVdO1xuICAgIC8vZ3BsdXPkvJjljJZcbiAgICAvLyBpZighcm9sZSljb25zb2xlLmxvZygn5rKh5pyJ5a+55bqU55qEcm9sZSEnK2FnZW50LnJvbGUpXG4gICAgaWYgKHJvbGUubW92ZW1lbnQubmFtZSkgcmV0dXJuIHJvbGU7Ly/lt7Lnu4/moLzlvI/ljJbov4for6Vyb2xlXG4gICAgY29uc3QgYXBwZWFyYW5jZSA9IHRoaXMuc3RhdGUuYXBwZWFyYW5jZVtyb2xlLmFwcGVhcmFuY2VdO1xuICAgIGNvbnN0IG1vdmVtZW50ID0gdGhpcy5zdGF0ZS5tb3ZlbWVudFtyb2xlLm1vdmVtZW50XTtcbiAgICByb2xlLm1vdmVtZW50ID0gbW92ZW1lbnQ7XG4gICAgcm9sZS5hcHBlYXJhbmNlID0gYXBwZWFyYW5jZTtcbiAgICBpZiAoIXJvbGUub2Zmc2V0KS8v5YW85a65XG4gICAgICByb2xlLm9mZnNldCA9IDA7XG4gICAgcmV0dXJuIHJvbGU7XG4gIH0sXG5cbiAgLyoqXG4gICAgICog5p6E6YCgZ29hbOeahHRyZWVcbiAgICAgKi9cbiAgbWFrZUdvYWwoYWdlbnQpIHtcbiAgICB0aGlzLmZvcm1hdEdvYWwodGhpcy5zdGF0ZS5nb2FsW2FnZW50LmdvYWxdKTtcbiAgICBpZiAodGhpcy5zdGF0ZS5nb2FsW2FnZW50LmdvYWxdLnR5cGUgIT09ICdwYXRoJykgey8v5LiN5piv5aSa54K56Lev5b6E55qE5oOF5Ya15LiL77yM56iz5a6a5pWw5o2u5qC85byP5Li65bimc2NyaXB055qEXG4gICAgICBjb25zdCBnb2FsID0ge1xuICAgICAgICBuYW1lOiAnZ29hbF8nICsgbmV3IERhdGUoKS5nZXRUaW1lKCkgKiBNYXRoLnJhbmRvbSgpLFxuICAgICAgICBzY3JpcHQ6IFt0aGlzLnN0YXRlLmdvYWxbYWdlbnQuZ29hbF1dLFxuICAgICAgICB0eXBlOiAncGF0aCdcbiAgICAgIH07XG4gICAgICB0aGlzLnN0YXRlLmdvYWxbYWdlbnQuZ29hbF0gPSBnb2FsO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5nb2FsW2FnZW50LmdvYWxdO1xuICB9LFxuXG4gIC8qKlxuICAgICAqIOmAkuW9kuafpeivomdvYWxcbiAgICAgKi9cbiAgZm9ybWF0R29hbChnb2FsKSB7XG4gICAgaWYgKGdvYWwuc2NyaXB0KSB7Ly/lpJrngrlcbiAgICAgIGdvYWwudHlwZSA9ICdwYXRoJztcbiAgICAgIHRoaXMuZm9ybWF0UGF0aChnb2FsKTtcbiAgICB9IGVsc2UgaWYgKGdvYWwubG9jYXRpb24ubWluKSB7Ly/ljLrln59cbiAgICAgIGdvYWwudHlwZSA9ICdhcmVhJztcbiAgICAgIGdvYWwubG9jYXRpb24gPSBbXG4gICAgICAgIHRoaXMubG9jYWxUb1dvcmxkKGdvYWwubG9jYXRpb24ubWluKSxcbiAgICAgICAgdGhpcy5sb2NhbFRvV29ybGQoZ29hbC5sb2NhdGlvbi5tYXgpLFxuICAgICAgXTtcbiAgICAgIHJldHVybiBnb2FsO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShnb2FsLmxvY2F0aW9uWzBdKSkgey8v5L2N572uXG4gICAgICBnb2FsLnR5cGUgPSAnbXVsdGknO1xuICAgICAgY29uc3QgbG9jYXRpb25zID0gW107XG4gICAgICBnb2FsLmxvY2F0aW9uLm1hcChpdGVtID0+IHtcbiAgICAgICAgbG9jYXRpb25zLnB1c2godGhpcy5sb2NhbFRvV29ybGQoaXRlbSkpO1xuICAgICAgfSk7XG4gICAgICBnb2FsLmxvY2F0aW9uID0gbG9jYXRpb25zO1xuICAgICAgcmV0dXJuIGdvYWw7XG4gICAgfSBlbHNlIGlmICghZ29hbC5sb2NhdGlvblswXVswXSkgey8v5Y2V54K5XG4gICAgICBnb2FsLnR5cGUgPSAnc2luZ2xlJztcbiAgICAgIGdvYWwubG9jYXRpb24gPSBbdGhpcy5sb2NhbFRvV29ybGQoZ29hbC5sb2NhdGlvbildO1xuICAgICAgcmV0dXJuIGdvYWw7XG4gICAgfVxuICB9LFxuXG4gIC8v6YeN5p6E6Lev5b6E54K555qE5q+P5Liq54K557uT5p6EXG4gIGZvcm1hdFBhdGgoZ29hbHMpIHtcbiAgICBjb25zdCBzY3JpcHQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHggaW4gZ29hbHMuc2NyaXB0KSB7XG4gICAgICBjb25zdCBnb2FsTmFtZSA9IGdvYWxzLnNjcmlwdFt4XTtcbiAgICAgIGlmICh0aGlzLnN0YXRlLmdvYWxbZ29hbE5hbWVdKSB7XG4gICAgICAgIC8v5a2QZ29hbFxuICAgICAgICBjb25zdCBnb2FsID0gdGhpcy5mb3JtYXRHb2FsKHRoaXMuc3RhdGUuZ29hbFtnb2FsTmFtZV0pO1xuICAgICAgICBnb2FsLmdvYWxJbmRleCA9IHg7XG4gICAgICAgIHNjcmlwdC5wdXNoKGdvYWwpO1xuICAgICAgfVxuICAgIH1cbiAgICBnb2Fscy5zY3JpcHQgPSBzY3JpcHQ7XG4gIH1cbn07IiwiZXhwb3J0IGRlZmF1bHQge1xuICByZWFkOiB7XG4gICAgdXJsOiAnL2FwaS93b3Jrc3BhY2UvcmVhZCcsXG4gICAgZGF0YToge31cbiAgfSxcbiAgYWRkQ2FzZToge1xuICAgIHVybDogJy9hcGkvY2FzZS9hZGQnLFxuICAgIGRhdGE6IHt9LFxuICAgIG1ldGhvZDogJ1BVVCdcbiAgfSxcbiAgcGxheToge1xuICAgIHVybDogJy9hcGkvd29ya3NwYWNlL3BsYXknLFxuICAgIGRhdGE6IHt9XG4gIH0sXG4gIGdldFJvb3RMaXN0OiB7XG4gICAgdXJsOiAnL2FwaS90YXNrL3Jvb3QvbGlzdCcsXG4gICAgZGF0YToge31cbiAgfSxcbiAgZ2V0RG9ja2VyOiB7XG4gICAgdXJsOiAnL2FwaS9wcm9qZWN0L2dldERvY2tlcicsXG4gICAgZGF0YToge1xuICAgICAgcGFnZVNpemU6IDEwMDAsXG4gICAgICBjdXJyZW50UGFnZTogMVxuICAgIH1cbiAgfSxcbiAgY3JlYXRlV29ya3NwYWNlOiB7XG4gICAgdXJsOiAnL2FwaS93b3Jrc3BhY2UvY3JlYXRlJyxcbiAgICBkYXRhOiB7fSxcbiAgICBtZXRob2Q6ICdQVVQnXG4gIH0sXG4gIGdldE5hc2FEZXZpY2U6IHtcbiAgICB1cmw6ICcvYXBpL3Rhc2svZ2V0TmFzYURldmljZScsXG4gICAgZGF0YToge31cbiAgfSxcbiAgZ2V0TmV3UnVuVHlwZToge1xuICAgIHVybDogJy9hcGkvam9iL2dldE5ld1J1blR5cGUnLFxuICAgIGRhdGE6IHt9XG4gIH0sXG4gIGdldE1hcFNjZW5lOiB7XG4gICAgdXJsOiAnL2FwaS9jYXNlL21hcHNjZW5lJyxcbiAgICBkYXRhOiB7cGFnZVNpemU6IDEwMDAsIGN1cnJlbnRQYWdlOiAxfVxuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgQXBwIGZyb20gJy4vYXBwLmpzJztcblxuUmVhY3RET00ucmVuZGVyKFxuICA8QXBwIC8+LFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYycpXG4pOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJ0BhbGlmZS9uZXh0L2Rpc3QvbmV4dC5jc3MnO1xuaW1wb3J0IExlZnRCYXIgZnJvbSAnLi92aWV3L0xlZnRiYXInO1xuaW1wb3J0IFRvcEJhciBmcm9tICcuL3ZpZXcvVG9wYmFyJztcbmltcG9ydCBSaWdodEJhciBmcm9tICcuL3ZpZXcvUmlnaHRiYXInO1xuaW1wb3J0IFZpZXdlciBmcm9tICcuL3ZpZXcvVmlld2VyJztcbmltcG9ydCBDZW50ZXJCYXIgZnJvbSAnLi92aWV3L0NlbnRlcmJhcic7XG5pbXBvcnQgSGlzdG9yeSBmcm9tICcuL2RhdGEvaGlzdG9yeSc7XG5pbXBvcnQgTWVzc2FnZSBmcm9tICdAYWxpZmUvbmV4dC9saWIvbWVzc2FnZSc7XG5pbXBvcnQgdXRpbHMgZnJvbSAndXRpbHMnO1xuaW1wb3J0IEFQSSBmcm9tICdhcGknO1xuXG5yZXF1aXJlKCcuL3N0eWxlL3N0eWxlLmxlc3MnKTtcbnJlcXVpcmUoJy4vc3R5bGUvaWNvbi5jc3MnKTtcblxuY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcihjb25maWcpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBuYW1lOiBmYWxzZSxcbiAgICAgIGluaXREYXRhOiB7fVxuICAgIH07XG4gICAgdGhpcy5pbml0R2xvYmFsU3RhdGUoKTtcbiAgICB0aGlzLmdldFNjZW5hcmlvKCk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnNldFN0YXRlID0gKHN0YXRlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cblxuICAvL+WIneWni+WMluWFqOWxgOmcgOimgeeahOS4nOilv1xuICBpbml0R2xvYmFsU3RhdGUoKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlID0gbmV3IHdpbmRvdy5USFJFRS5FdmVudERpc3BhdGNoZXIoKTsvL+WFqOWxgOS6i+S7tuWIhuWPkeWZqO+8jOWkhOeQhuaooeWdl+mXtOmAmuiur1xuICAgIHRoaXMuaGlzdG9yeSA9IG5ldyBIaXN0b3J5KHRoaXMud2F0Y2hNYXApO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5ID0gdGhpcy5oaXN0b3J5O1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5pbmRleCA9IC0xO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS50aGluZ3MgPSBbXTsvL+WtmOaUvuaJgOaciemanOeijeeJqVxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS50cmlnZ2VycyA9IFtdOy8v5a2Y5pS+5omA5pyJ6Kem5Y+R5ZmoXG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhcyA9IFtdOy8v5a2Y5pS+5omA5pyJ5Lqk6YCa5rWB5Yy65Z+f5a6e5L6LXG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLm1vZGVscyA9IHt9Oy8v5a2Y5pS+5omA5pyJ5qih5Z6Ld2luZG93Lmdsb2JhbFN0YXRlLm1vZGVscyA9IHt9Oy8v5a2Y5pS+5omA5pyJ5qih5Z6LXG5cbiAgfVxuXG4gIC8qKlxuICAgKiDmi4nlj5Z5YW1s5paH5Lu2XG4gICAqL1xuICBnZXRTY2VuYXJpbygpIHtcbiAgICBjb25zdCBjYXNlSWQgPSB1dGlscy5nZXRQYXJhbUJ5TmFtZSgnY2FzZUlkJyk7XG4gICAgaWYgKCFjYXNlSWQpIHJldHVybjtcbiAgICBjb25zdCB7dXJsLCBkYXRhfSA9IEFQSS5yZWFkO1xuICAgIGRhdGEuY2FzZUlkID0gY2FzZUlkO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgdmlldzogZmFsc2VcbiAgICB9KTtcbiAgICB0aGlzLndhdGNoTWFwID0gbnVsbDtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUgPSB3aW5kb3cuZ2xvYmFsU3RhdGUgfHwge307XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnRoaW5ncyA9IFtdO1xuXG4gICAgdXRpbHMuZ2V0RGF0YSh1cmwsIGRhdGEsIChyZXMpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2luaXREYXRhOiB7ZGF0YTogcmVzfX0pO1xuICAgICAgdGhpcy5sb2FkWWFtbChyZXMsIGNhc2VJZCk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgdmlldzogdHJ1ZVxuICAgICAgfSlcbiAgICB9KTtcbiAgfVxuXG5cbiAgLy/op6PmnpB5YW1sXG4gIGxvYWRZYW1sKGRhdGEpIHtcbiAgICAvL3NjaGVtYem7mOiupOaVsOaNrlxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEgPSB7XG4gICAgICBhbGdvVmVyc2lvbjogZGF0YS5hbGdvVmVyc2lvbixcbiAgICAgIGNhc2VJZDogZGF0YS5jYXNlSWQsXG4gICAgICB3b3JrU3BhY2VJZDogZGF0YS53b3JrU3BhY2VJZCxcbiAgICAgIG1hcFZlcnNpb246IGRhdGEubWFwSWQsXG4gICAgICB0cmlnZ2Vyczoge30sXG4gICAgICBhZ2VudFNvdXJjZXM6IHt9LFxuICAgICAgb2JqZWN0czoge30sXG4gICAgICBuYW1lOiBkYXRhLm5hbWVcbiAgICB9O1xuICAgIGlmIChkYXRhLnNjZW5hcmlvKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB5YW1sRGF0YSA9IHdpbmRvdy5ZQU1MLnBhcnNlKGRhdGEuc2NlbmFyaW8pO1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUueWFtbERhdGEgPSB5YW1sRGF0YTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgbWFwVmVyc2lvbjogZGF0YS5tYXBJZCxcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWVcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIE1lc3NhZ2UuZXJyb3IoJ3lhbWwg5paH5Lu25byC5bi477yM6K+35qOA5p+l5paH5Lu25qC85byP5YaF5a655piv5ZCm5q2j56Gu77yBJylcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG1hcFZlcnNpb246IGRhdGEubWFwSWQsXG4gICAgICAgIG5hbWU6IGRhdGEubmFtZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOaWsOWinlxuICAgKi9cbiAgYWRkTmV3KG9iaikge1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEgPSB7J29iamVjdHMnOiB7fSwgdHJpZ2dlcnM6IHt9LCBhZ2VudFNvdXJjZXM6IHt9fTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm1hcFZlcnNpb24gPSBvYmoubWFwVmVyc2lvbjtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm5hbWUgPSBvYmoubmFtZTtcbiAgICB0aGlzLnNldFN0YXRlKG9iaik7XG4gIH1cblxuICBzZXRFcnJvcigpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG1hcFZlcnNpb246IGZhbHNlXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwibS1zdHVkaW9cIj5cbiAgICAgIDxUb3BCYXIvPlxuICAgICAge1xuICAgICAgICB0aGlzLnN0YXRlLm1hcFZlcnNpb24gPyA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm0tc3R1ZGlvLWxheW91dFwiPlxuICAgICAgICAgICAgICA8TGVmdEJhci8+XG4gICAgICAgICAgICAgIDxDZW50ZXJCYXIgZ2V0U2NlbmFyaW89e3RoaXMuZ2V0U2NlbmFyaW8uYmluZCh0aGlzKX0gaW5pdERhdGE9e3RoaXMuc3RhdGUuaW5pdERhdGF9Lz5cbiAgICAgICAgICAgICAgPFJpZ2h0QmFyLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0aGlzLnN0YXRlLnZpZXcgJiYgPFZpZXdlciBzY2hlbWE9e3dpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWF9Lz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PiA6XG4gICAgICAgICAgPGRpdiBzdHlsZT17e2Rpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJywgaGVpZ2h0OiAnMTAwJSd9fT5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9pbWcuYWxpY2RuLmNvbS90ZnMvVEIxME5DdHNtenFLMVJqU1pQeFhYYzR0VlhhLTIwNy0xMDMucG5nXCIvPlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7dGV4dEFsaWduOiAnY2VudGVyJ319PuivpeWcuuaZr+S4jeaUr+aMgeWxleekuu+8jOivt+ivleivleWFtuS7lueahDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIC8qIDxOZXdTY2VuZSBhZGROZXc9e3RoaXMuYWRkTmV3LmJpbmQodGhpcyl9IC8+Ki9cbiAgICAgIH1cbiAgICA8L2Rpdj47XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJvbGVzUGFuZWwgZnJvbSAnLi9wYW5lbHMvUm9sZXNQYW5lbCc7XG5pbXBvcnQgRnVuY3Rpb25QYW5lbCBmcm9tICcuL3BhbmVscy9GdW5jdGlvblBhbmVsJztcbmltcG9ydCBYR1BhbmVsIGZyb20gJy4vcGFuZWxzL1hHUGFuZWwnO1xuaW1wb3J0IFRyaWdnZXJQYW5lbCBmcm9tICcuL3BhbmVscy9UcmlnZ2VyUGFuZWwnO1xuaW1wb3J0IFRyYWZmaWNGbG93UGFuZWwgZnJvbSAnLi9wYW5lbHMvVHJhZmZpY0Zsb3dQYW5lbCc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0YXRlPXtcbiAgICAgIG5vdzogJydcbiAgICB9XG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7fVxuXG4gICAgY2hhbmdlU3RhdGUob2JqKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKG9iaik7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qgbm93ID0gdGhpcy5zdGF0ZS5ub3c7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxlZnRiYXJcIj5cbiAgICAgICAgICA8RnVuY3Rpb25QYW5lbCBsZWZ0YmFyPXt0aGlzfS8+XG4gICAgICAgICAgPFJvbGVzUGFuZWwgdmlzaWJsZT17bm93ID09PSAncm9sZXMnfSAvPlxuICAgICAgICAgIDxYR1BhbmVsIHZpc2libGU9e25vdyA9PT0gJ1hHJ30gLz5cbiAgICAgICAgICA8VHJpZ2dlclBhbmVsIHZpc2libGU9e25vdyA9PT0gJ3RyaWdnZXInfSAvPlxuICAgICAgICAgIDxUcmFmZmljRmxvd1BhbmVsIHZpc2libGU9e25vdyA9PT0gJ3RyYWZmaWNGbG93J30gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEljb24gZnJvbSAnQGFsaWZlL25leHQvbGliL2ljb24nO1xuXG4vKipcbiAqIDEuICDmiJDkurpcbm1vdmVtZW5077ya5pyA5aSn6YCf5bqmMC4zbS9z77yb5pyA5aSn5Yqg6YCf5bqmMC4xbS9z77yb5pyA5aSn6KeS6YCf5bqmMC4zcmFkL3NcbmFwcGVhcmFuY2XvvJog5Y2K5b6EMC4x77yM6auYMS43XG4gIDEuICDlsI/lralcbm1vdmVtZW5077ya5pyA5aSn6YCf5bqmMC4xbS9z77yb5pyA5aSn5Yqg6YCf5bqmMC4wN20vc++8m+acgOWkp+inkumAn+W6pjAuM3JhZC9zXG5hcHBlYXJhbmNl77yaIOWNiuW+hDAuMDXvvIzpq5gxLjBcbiAgMS4gIOi9v+i9plxubW92ZW1lbnTvvJrmnIDlpKfpgJ/luqYxMG0vc++8m+acgOWkp+WKoOmAn+W6pjVtL3PvvJvmnIDlpKfop5LpgJ/luqYycmFkL3NcbmFwcGVhcmFuY2XvvJog6ZW/NC45ODPvvIzlrr0xLjg2Mu+8jOmrmDEuNDQ5XG4gIDEuICBzdXZcbm1vdmVtZW5077ya5pyA5aSn6YCf5bqmMTJtL3PvvJvmnIDlpKfliqDpgJ/luqY2LjdtL3PvvJvmnIDlpKfop5LpgJ/luqYycmFkL3NcbmFwcGVhcmFuY2XvvJog6ZW/NC42MjnvvIzlrr0xLjg477yM6auYMS42NTNcbiAgMS4gIOeUteWKqOi9plxubW92ZW1lbnTvvJrmnIDlpKfpgJ/luqY1LjVtL3PvvJvmnIDlpKfliqDpgJ/luqYyLjZtL3PvvJvmnIDlpKfop5LpgJ/luqYycmFkL3NcbmFwcGVhcmFuY2XvvJog6ZW/MS4477yM5a69MC4377yM6auYMS42XG4gIDEuICDnlLXliqjovaZcbm1vdmVtZW5077ya5pyA5aSn6YCf5bqmNC4wbS9z77yb5pyA5aSn5Yqg6YCf5bqmMS41bS9z77yb5pyA5aSn6KeS6YCf5bqmMnJhZC9zXG5hcHBlYXJhbmNl77yaIOmVvzEuNe+8jOWuvTAuN++8jOmrmDEuNVxuXG4gKi9cbmNvbnN0IHJvbGVzID0gcmVxdWlyZSgnLi9yb2xlcycpO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm9sZXNQYW5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKGNmZykge1xuICAgIHN1cGVyKGNmZyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG5vd0ZsYWc6ICdWRUhJQ0xFJyxcbiAgICAgIHJvbGVzOiByb2xlcyxcbiAgICB9O1xuICAgIHRoaXMuZmxhZ3MgPSB7XG4gICAgICAnVkVISUNMRSc6ICfmnLrliqjovaYnLFxuICAgICAgJ0JJQ1lDTEUnOiAn6Z2e5py65Yqo6L2mJyxcbiAgICAgICdQRURFU1RSSUFOJzogJ+S6uicsXG4gICAgICAnb3RoZXInOiAn5YW25LuWJ1xuICAgIH07XG4gIH1cbiAgbGlzdGVuRXZlbnRzKCkge1xuXG4gIH1cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgbWUgPSB0aGlzO1xuICAgICQuYWpheCh7XG4gICAgICB1cmw6ICdodHRwczovL29zcy1ldC1sYWItd2ViLW9ubGluZS5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL2NvbmZpZy84L3Byb2QuanMnLFxuICAgICAgZGF0YVR5cGU6ICdqc29ucCcsXG4gICAgICBqc29ucENhbGxiYWNrOiAnX2NhbGxiYWNrJyxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIG1lLnNldFN0YXRlKHsgcm9sZXM6IGRhdGEgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvL+aLluWKqOaXtlxuICBvbkRyYWcoZGF0YSkge1xuICAgIGNvbnN0IHJvbGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgICBjb25zdCBuYW1lID0gcm9sZS5uYW1lICsgKE1hdGgucmFuZG9tKCkgKiBuZXcgRGF0ZSgpLmdldFRpbWUoKSkudG9GaXhlZCgwKTtcbiAgICByb2xlLm5hbWUgPSByb2xlLm5hbWUgKyAoTWF0aC5yYW5kb20oKSAqIG5ldyBEYXRlKCkuZ2V0VGltZSgpKS50b0ZpeGVkKDApO1xuICAgIHJvbGUuYXBwZWFyYW5jZS5uYW1lICs9IChNYXRoLnJhbmRvbSgpICogbmV3IERhdGUoKS5nZXRUaW1lKCkpLnRvRml4ZWQoMCk7XG4gICAgcm9sZS5tb3ZlbWVudC5uYW1lICs9IChNYXRoLnJhbmRvbSgpICogbmV3IERhdGUoKS5nZXRUaW1lKCkpLnRvRml4ZWQoMCk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgdHlwZTogJ2RyYWdJdGVtJyxcbiAgICAgIGRhdGE6IHJvbGVcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuX2RyYWdJdGVtID0gey8v5Yid5aeL5YyWXG4gICAgICByb2xlOiByb2xlLFxuICAgICAgbmFtZTogbmFtZSxcbiAgICAgIGdvYWw6IHsvL+m7mOiupOWNleeCuVxuICAgICAgICB0eXBlOiAncGF0aCcsXG4gICAgICAgIHNjcmlwdDogW11cbiAgICAgIH0sXG4gICAgICBzdGFydFBvaW50VHlwZTogJ3NpbmdsZSdcbiAgICB9O1xuICB9XG5cbiAgLy/muLLmn5Pop5LoibJcbiAgcmVuZGVyUm9sZXMoY2FyRmxhZykge1xuICAgIGNvbnN0IHsgcm9sZXMgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgZGF0YSA9IFtdO1xuICAgIGZvciAoY29uc3QgeCBpbiByb2xlcykge1xuICAgICAgaWYgKHggPT09IGNhckZsYWcpIHtcbiAgICAgICAgZm9yIChjb25zdCB5IGluIHJvbGVzW3hdKSB7XG4gICAgICAgICAgZGF0YS5wdXNoKFxuICAgICAgICAgICAgPGRpdiBrZXk9e3l9IGNsYXNzTmFtZT1cImRyYWdnYWJsZUl0ZW1cIiBkcmFnZ2FibGUgb25EcmFnPXsoKSA9PiB0aGlzLm9uRHJhZyhyb2xlc1t4XVt5XSl9ID5cbiAgICAgICAgICAgICAgPGltZyBzcmM9e3JvbGVzW3hdW3ldLmltZ30vPlxuICAgICAgICAgICAgICA8c3Bhbj57cm9sZXNbeF1beV0ubmFtZX08L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgLy/liIfmjaJcbiAgY2hhbmdlVGFiKGZsYWcpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5ub3dGbGFnID09PSBmbGFnKSB7XG4gICAgICBmbGFnID0gJyc7XG4gICAgfVxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbm93RmxhZzogZmxhZ1xuICAgIH0pO1xuICB9XG5cbiAgLy/muLLmn5Ppobnnm65cbiAgcmVuZGVySXRlbSgpIHtcbiAgICBjb25zdCBkYXRhID0gW107XG4gICAgZm9yIChjb25zdCB4IGluIHRoaXMuZmxhZ3MpIHtcbiAgICAgIGxldCBjbGFzc05hbWUgPSAnc2xpZGVJdGVtJztcbiAgICAgIGlmICh4ID09PSB0aGlzLnN0YXRlLm5vd0ZsYWcpIHtcbiAgICAgICAgY2xhc3NOYW1lICs9ICcgYWN0aXZlJztcbiAgICAgIH1cblxuICAgICAgZGF0YS5wdXNoKDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9IGtleT17eH0gb25DbGljaz17KCkgPT4ge3RoaXMuY2hhbmdlVGFiKHgpfX0+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaXRlbVRpdGxlXCI+PHNwYW4+e3RoaXMuZmxhZ3NbeF19PC9zcGFuPjxJY29uIHR5cGU9XCJhcnJvdy1kb3duXCIgc2l6ZT1cInhzXCIvPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIml0ZW1Db250ZW50XCI+XG4gICAgICAgICAge3RoaXMucmVuZGVyUm9sZXMoeCl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+KTtcbiAgICB9XG4gICAgZGF0YS5yZXZlcnNlKCk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICByZW5kZXIoKSB7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17eyB3aWR0aDogIXRoaXMucHJvcHMudmlzaWJsZSA/ICcwcHgnIDogJzIwMHB4JyB9fSBjbGFzc05hbWU9XCJzaWRlUGFuZWwgcm9sZXNQYW5lbFwiPlxuICAgICAgICB7dGhpcy5yZW5kZXJJdGVtKCl9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iLCJ2YXIgbWFwID0ge1xuXHRcIi4vYWZcIjogODgsXG5cdFwiLi9hZi5qc1wiOiA4OCxcblx0XCIuL2FyXCI6IDg5LFxuXHRcIi4vYXItZHpcIjogOTAsXG5cdFwiLi9hci1kei5qc1wiOiA5MCxcblx0XCIuL2FyLWt3XCI6IDkxLFxuXHRcIi4vYXIta3cuanNcIjogOTEsXG5cdFwiLi9hci1seVwiOiA5Mixcblx0XCIuL2FyLWx5LmpzXCI6IDkyLFxuXHRcIi4vYXItbWFcIjogOTMsXG5cdFwiLi9hci1tYS5qc1wiOiA5Myxcblx0XCIuL2FyLXNhXCI6IDk0LFxuXHRcIi4vYXItc2EuanNcIjogOTQsXG5cdFwiLi9hci10blwiOiA5NSxcblx0XCIuL2FyLXRuLmpzXCI6IDk1LFxuXHRcIi4vYXIuanNcIjogODksXG5cdFwiLi9helwiOiA5Nixcblx0XCIuL2F6LmpzXCI6IDk2LFxuXHRcIi4vYmVcIjogOTcsXG5cdFwiLi9iZS5qc1wiOiA5Nyxcblx0XCIuL2JnXCI6IDk4LFxuXHRcIi4vYmcuanNcIjogOTgsXG5cdFwiLi9ibVwiOiA5OSxcblx0XCIuL2JtLmpzXCI6IDk5LFxuXHRcIi4vYm5cIjogMTAwLFxuXHRcIi4vYm4uanNcIjogMTAwLFxuXHRcIi4vYm9cIjogMTAxLFxuXHRcIi4vYm8uanNcIjogMTAxLFxuXHRcIi4vYnJcIjogMTAyLFxuXHRcIi4vYnIuanNcIjogMTAyLFxuXHRcIi4vYnNcIjogMTAzLFxuXHRcIi4vYnMuanNcIjogMTAzLFxuXHRcIi4vY2FcIjogMTA0LFxuXHRcIi4vY2EuanNcIjogMTA0LFxuXHRcIi4vY3NcIjogMTA1LFxuXHRcIi4vY3MuanNcIjogMTA1LFxuXHRcIi4vY3ZcIjogMTA2LFxuXHRcIi4vY3YuanNcIjogMTA2LFxuXHRcIi4vY3lcIjogMTA3LFxuXHRcIi4vY3kuanNcIjogMTA3LFxuXHRcIi4vZGFcIjogMTA4LFxuXHRcIi4vZGEuanNcIjogMTA4LFxuXHRcIi4vZGVcIjogMTA5LFxuXHRcIi4vZGUtYXRcIjogMTEwLFxuXHRcIi4vZGUtYXQuanNcIjogMTEwLFxuXHRcIi4vZGUtY2hcIjogMTExLFxuXHRcIi4vZGUtY2guanNcIjogMTExLFxuXHRcIi4vZGUuanNcIjogMTA5LFxuXHRcIi4vZHZcIjogMTEyLFxuXHRcIi4vZHYuanNcIjogMTEyLFxuXHRcIi4vZWxcIjogMTEzLFxuXHRcIi4vZWwuanNcIjogMTEzLFxuXHRcIi4vZW4tYXVcIjogMTE0LFxuXHRcIi4vZW4tYXUuanNcIjogMTE0LFxuXHRcIi4vZW4tY2FcIjogMTE1LFxuXHRcIi4vZW4tY2EuanNcIjogMTE1LFxuXHRcIi4vZW4tZ2JcIjogMTE2LFxuXHRcIi4vZW4tZ2IuanNcIjogMTE2LFxuXHRcIi4vZW4taWVcIjogMTE3LFxuXHRcIi4vZW4taWUuanNcIjogMTE3LFxuXHRcIi4vZW4taWxcIjogMTE4LFxuXHRcIi4vZW4taWwuanNcIjogMTE4LFxuXHRcIi4vZW4tbnpcIjogMTE5LFxuXHRcIi4vZW4tbnouanNcIjogMTE5LFxuXHRcIi4vZW9cIjogMTIwLFxuXHRcIi4vZW8uanNcIjogMTIwLFxuXHRcIi4vZXNcIjogMTIxLFxuXHRcIi4vZXMtZG9cIjogMTIyLFxuXHRcIi4vZXMtZG8uanNcIjogMTIyLFxuXHRcIi4vZXMtdXNcIjogMTIzLFxuXHRcIi4vZXMtdXMuanNcIjogMTIzLFxuXHRcIi4vZXMuanNcIjogMTIxLFxuXHRcIi4vZXRcIjogMTI0LFxuXHRcIi4vZXQuanNcIjogMTI0LFxuXHRcIi4vZXVcIjogMTI1LFxuXHRcIi4vZXUuanNcIjogMTI1LFxuXHRcIi4vZmFcIjogMTI2LFxuXHRcIi4vZmEuanNcIjogMTI2LFxuXHRcIi4vZmlcIjogMTI3LFxuXHRcIi4vZmkuanNcIjogMTI3LFxuXHRcIi4vZm9cIjogMTI4LFxuXHRcIi4vZm8uanNcIjogMTI4LFxuXHRcIi4vZnJcIjogMTI5LFxuXHRcIi4vZnItY2FcIjogMTMwLFxuXHRcIi4vZnItY2EuanNcIjogMTMwLFxuXHRcIi4vZnItY2hcIjogMTMxLFxuXHRcIi4vZnItY2guanNcIjogMTMxLFxuXHRcIi4vZnIuanNcIjogMTI5LFxuXHRcIi4vZnlcIjogMTMyLFxuXHRcIi4vZnkuanNcIjogMTMyLFxuXHRcIi4vZ2RcIjogMTMzLFxuXHRcIi4vZ2QuanNcIjogMTMzLFxuXHRcIi4vZ2xcIjogMTM0LFxuXHRcIi4vZ2wuanNcIjogMTM0LFxuXHRcIi4vZ29tLWxhdG5cIjogMTM1LFxuXHRcIi4vZ29tLWxhdG4uanNcIjogMTM1LFxuXHRcIi4vZ3VcIjogMTM2LFxuXHRcIi4vZ3UuanNcIjogMTM2LFxuXHRcIi4vaGVcIjogMTM3LFxuXHRcIi4vaGUuanNcIjogMTM3LFxuXHRcIi4vaGlcIjogMTM4LFxuXHRcIi4vaGkuanNcIjogMTM4LFxuXHRcIi4vaHJcIjogMTM5LFxuXHRcIi4vaHIuanNcIjogMTM5LFxuXHRcIi4vaHVcIjogMTQwLFxuXHRcIi4vaHUuanNcIjogMTQwLFxuXHRcIi4vaHktYW1cIjogMTQxLFxuXHRcIi4vaHktYW0uanNcIjogMTQxLFxuXHRcIi4vaWRcIjogMTQyLFxuXHRcIi4vaWQuanNcIjogMTQyLFxuXHRcIi4vaXNcIjogMTQzLFxuXHRcIi4vaXMuanNcIjogMTQzLFxuXHRcIi4vaXRcIjogMTQ0LFxuXHRcIi4vaXQuanNcIjogMTQ0LFxuXHRcIi4vamFcIjogMTQ1LFxuXHRcIi4vamEuanNcIjogMTQ1LFxuXHRcIi4vanZcIjogMTQ2LFxuXHRcIi4vanYuanNcIjogMTQ2LFxuXHRcIi4va2FcIjogMTQ3LFxuXHRcIi4va2EuanNcIjogMTQ3LFxuXHRcIi4va2tcIjogMTQ4LFxuXHRcIi4va2suanNcIjogMTQ4LFxuXHRcIi4va21cIjogMTQ5LFxuXHRcIi4va20uanNcIjogMTQ5LFxuXHRcIi4va25cIjogMTUwLFxuXHRcIi4va24uanNcIjogMTUwLFxuXHRcIi4va29cIjogMTUxLFxuXHRcIi4va28uanNcIjogMTUxLFxuXHRcIi4va3VcIjogMTUyLFxuXHRcIi4va3UuanNcIjogMTUyLFxuXHRcIi4va3lcIjogMTUzLFxuXHRcIi4va3kuanNcIjogMTUzLFxuXHRcIi4vbGJcIjogMTU0LFxuXHRcIi4vbGIuanNcIjogMTU0LFxuXHRcIi4vbG9cIjogMTU1LFxuXHRcIi4vbG8uanNcIjogMTU1LFxuXHRcIi4vbHRcIjogMTU2LFxuXHRcIi4vbHQuanNcIjogMTU2LFxuXHRcIi4vbHZcIjogMTU3LFxuXHRcIi4vbHYuanNcIjogMTU3LFxuXHRcIi4vbWVcIjogMTU4LFxuXHRcIi4vbWUuanNcIjogMTU4LFxuXHRcIi4vbWlcIjogMTU5LFxuXHRcIi4vbWkuanNcIjogMTU5LFxuXHRcIi4vbWtcIjogMTYwLFxuXHRcIi4vbWsuanNcIjogMTYwLFxuXHRcIi4vbWxcIjogMTYxLFxuXHRcIi4vbWwuanNcIjogMTYxLFxuXHRcIi4vbW5cIjogMTYyLFxuXHRcIi4vbW4uanNcIjogMTYyLFxuXHRcIi4vbXJcIjogMTYzLFxuXHRcIi4vbXIuanNcIjogMTYzLFxuXHRcIi4vbXNcIjogMTY0LFxuXHRcIi4vbXMtbXlcIjogMTY1LFxuXHRcIi4vbXMtbXkuanNcIjogMTY1LFxuXHRcIi4vbXMuanNcIjogMTY0LFxuXHRcIi4vbXRcIjogMTY2LFxuXHRcIi4vbXQuanNcIjogMTY2LFxuXHRcIi4vbXlcIjogMTY3LFxuXHRcIi4vbXkuanNcIjogMTY3LFxuXHRcIi4vbmJcIjogMTY4LFxuXHRcIi4vbmIuanNcIjogMTY4LFxuXHRcIi4vbmVcIjogMTY5LFxuXHRcIi4vbmUuanNcIjogMTY5LFxuXHRcIi4vbmxcIjogMTcwLFxuXHRcIi4vbmwtYmVcIjogMTcxLFxuXHRcIi4vbmwtYmUuanNcIjogMTcxLFxuXHRcIi4vbmwuanNcIjogMTcwLFxuXHRcIi4vbm5cIjogMTcyLFxuXHRcIi4vbm4uanNcIjogMTcyLFxuXHRcIi4vcGEtaW5cIjogMTczLFxuXHRcIi4vcGEtaW4uanNcIjogMTczLFxuXHRcIi4vcGxcIjogMTc0LFxuXHRcIi4vcGwuanNcIjogMTc0LFxuXHRcIi4vcHRcIjogMTc1LFxuXHRcIi4vcHQtYnJcIjogMTc2LFxuXHRcIi4vcHQtYnIuanNcIjogMTc2LFxuXHRcIi4vcHQuanNcIjogMTc1LFxuXHRcIi4vcm9cIjogMTc3LFxuXHRcIi4vcm8uanNcIjogMTc3LFxuXHRcIi4vcnVcIjogMTc4LFxuXHRcIi4vcnUuanNcIjogMTc4LFxuXHRcIi4vc2RcIjogMTc5LFxuXHRcIi4vc2QuanNcIjogMTc5LFxuXHRcIi4vc2VcIjogMTgwLFxuXHRcIi4vc2UuanNcIjogMTgwLFxuXHRcIi4vc2lcIjogMTgxLFxuXHRcIi4vc2kuanNcIjogMTgxLFxuXHRcIi4vc2tcIjogMTgyLFxuXHRcIi4vc2suanNcIjogMTgyLFxuXHRcIi4vc2xcIjogMTgzLFxuXHRcIi4vc2wuanNcIjogMTgzLFxuXHRcIi4vc3FcIjogMTg0LFxuXHRcIi4vc3EuanNcIjogMTg0LFxuXHRcIi4vc3JcIjogMTg1LFxuXHRcIi4vc3ItY3lybFwiOiAxODYsXG5cdFwiLi9zci1jeXJsLmpzXCI6IDE4Nixcblx0XCIuL3NyLmpzXCI6IDE4NSxcblx0XCIuL3NzXCI6IDE4Nyxcblx0XCIuL3NzLmpzXCI6IDE4Nyxcblx0XCIuL3N2XCI6IDE4OCxcblx0XCIuL3N2LmpzXCI6IDE4OCxcblx0XCIuL3N3XCI6IDE4OSxcblx0XCIuL3N3LmpzXCI6IDE4OSxcblx0XCIuL3RhXCI6IDE5MCxcblx0XCIuL3RhLmpzXCI6IDE5MCxcblx0XCIuL3RlXCI6IDE5MSxcblx0XCIuL3RlLmpzXCI6IDE5MSxcblx0XCIuL3RldFwiOiAxOTIsXG5cdFwiLi90ZXQuanNcIjogMTkyLFxuXHRcIi4vdGdcIjogMTkzLFxuXHRcIi4vdGcuanNcIjogMTkzLFxuXHRcIi4vdGhcIjogMTk0LFxuXHRcIi4vdGguanNcIjogMTk0LFxuXHRcIi4vdGwtcGhcIjogMTk1LFxuXHRcIi4vdGwtcGguanNcIjogMTk1LFxuXHRcIi4vdGxoXCI6IDE5Nixcblx0XCIuL3RsaC5qc1wiOiAxOTYsXG5cdFwiLi90clwiOiAxOTcsXG5cdFwiLi90ci5qc1wiOiAxOTcsXG5cdFwiLi90emxcIjogMTk4LFxuXHRcIi4vdHpsLmpzXCI6IDE5OCxcblx0XCIuL3R6bVwiOiAxOTksXG5cdFwiLi90em0tbGF0blwiOiAyMDAsXG5cdFwiLi90em0tbGF0bi5qc1wiOiAyMDAsXG5cdFwiLi90em0uanNcIjogMTk5LFxuXHRcIi4vdWctY25cIjogMjAxLFxuXHRcIi4vdWctY24uanNcIjogMjAxLFxuXHRcIi4vdWtcIjogMjAyLFxuXHRcIi4vdWsuanNcIjogMjAyLFxuXHRcIi4vdXJcIjogMjAzLFxuXHRcIi4vdXIuanNcIjogMjAzLFxuXHRcIi4vdXpcIjogMjA0LFxuXHRcIi4vdXotbGF0blwiOiAyMDUsXG5cdFwiLi91ei1sYXRuLmpzXCI6IDIwNSxcblx0XCIuL3V6LmpzXCI6IDIwNCxcblx0XCIuL3ZpXCI6IDIwNixcblx0XCIuL3ZpLmpzXCI6IDIwNixcblx0XCIuL3gtcHNldWRvXCI6IDIwNyxcblx0XCIuL3gtcHNldWRvLmpzXCI6IDIwNyxcblx0XCIuL3lvXCI6IDIwOCxcblx0XCIuL3lvLmpzXCI6IDIwOCxcblx0XCIuL3poLWNuXCI6IDIwOSxcblx0XCIuL3poLWNuLmpzXCI6IDIwOSxcblx0XCIuL3poLWhrXCI6IDIxMCxcblx0XCIuL3poLWhrLmpzXCI6IDIxMCxcblx0XCIuL3poLXR3XCI6IDIxMSxcblx0XCIuL3poLXR3LmpzXCI6IDIxMVxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gaWQ7XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gMzA4OyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAnVkVISUNMRSc6IFt7XG4gICAgY2F0ZWdvcnk6ICdWRUhJQ0xFJyxcbiAgICAnaW1nJzogJy8vaW1nLmFsaWNkbi5jb20vdGZzL1RCMTJkMVRHSEdZQnVOankwRm9YWGNpQkZYYS04NTQtNDIzLnBuZycsXG4gICAgJ25hbWUnOiAnY2FyJywgJ21vdmVtZW50JzogeyBkZWZhdWx0U3BlZWRzOiBbMTEuMTEsIDIyLjIyLCAzMy4zM10sICduYW1lJzogJ2NjYXJfbW92ZW1lbnQnLCAnbWF4X3NwZWVkJzogMTAsICdtYXhfYWNjZWxlcmF0aW9uJzogNSwgJ21heF90dXJuJzogMiB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnY2FyX2FwcCcsICd0eXBlJzogJ2N1YmUnLCAnbGVuZ3RoJzogMy45OCwgJ3dpZHRoJzogMS42LCAnaGVpZ2h0JzogMS40NCwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdWRUhJQ0xFJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxU2tVRUl4U1lCdU5qU3NwaFhYYkd2VlhhLTMyNS0xNzcucG5nJyxcbiAgICAnbmFtZSc6ICdzdXYnLCAnbW92ZW1lbnQnOiB7IGRlZmF1bHRTcGVlZHM6IFsxMS4xMSwgMjIuMjIsIDMzLjMzXSwgJ25hbWUnOiAnMWNjYXJfbW92ZW1lbnQnLCAnbWF4X3NwZWVkJzogMTIsICdtYXhfYWNjZWxlcmF0aW9uJzogNi43LCAnbWF4X3R1cm4nOiAyIH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdjY2FyX2FwcCcsICd0eXBlJzogJ2N1YmUnLCAnbGVuZ3RoJzogNC42MiwgJ3dpZHRoJzogMS44OCwgJ2hlaWdodCc6IDEuNjMsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVkVISUNMRScsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMW8zLm9iN3ZvSzFSalNaRk5YWGN4TVZYYS0xMjAwLTgwMC5qcGcnLFxuICAgICduYW1lJzogJ3RydWNrJywgJ21vdmVtZW50JzogeyBkZWZhdWx0U3BlZWRzOiBbMTEuMTEsIDIyLjIyLCAzMy4zM10sICduYW1lJzogJzFjY2FyX21vdmVtZW50JywgJ21heF9zcGVlZCc6IDEyLCAnbWF4X2FjY2VsZXJhdGlvbic6IDYuNywgJ21heF90dXJuJzogMiB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnY2Nhcl9hcHAnLCAndHlwZSc6ICdjdWJlJywgJ2xlbmd0aCc6IDYuOTIsICd3aWR0aCc6IDIuNSwgJ2hlaWdodCc6IDMuNzcsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfV0sXG4gICdCSUNZQ0xFJzogW3tcbiAgICBjYXRlZ29yeTogJ0JJQ1lDTEUnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjF4bEZNSUt1U0J1Tmp5MVhjWFhjWWpGWGEtMzA3LTE4MS5wbmcnLFxuICAgICduYW1lJzogJ21vdG9yJywgJ21vdmVtZW50Jzoge1xuICAgICAgZGVmYXVsdFNwZWVkczogWzUuNSwgOC4zLCAxMS4xXSwgJ25hbWUnOiAnbWNhcl9tb3ZlbWVudCcsICdtYXhfc3BlZWQnOiA4LCAnbWF4X2FjY2VsZXJhdGlvbic6IDIuNiwgJ21heF90dXJuJzogMiB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnbWNhcl9hcHAnLCAndHlwZSc6ICdjdWJlJywgJ2xlbmd0aCc6IDEuOCwgJ3dpZHRoJzogMC43LCAnaGVpZ2h0JzogMS42MywgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdCSUNZQ0xFJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxc3QyZElOR1lCdU5qeTBGblhYWDVscFhhLTI2OC0xNzEucG5nJyxcbiAgICAnbmFtZSc6ICdiaWN5Y2xlJywgJ21vdmVtZW50Jzoge1xuICAgICAgZGVmYXVsdFNwZWVkczogWzIuNywgNCwgNS41XSxcbiAgICAgICduYW1lJzogJ2NtMWFyX21vdmVtZW50JywgJ21heF9zcGVlZCc6IDMsICdtYXhfYWNjZWxlcmF0aW9uJzogMS41LCAnbWF4X3R1cm4nOiAyIH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdtMWNhcl9hcHAnLCAndHlwZSc6ICdjdWJlJywgJ2xlbmd0aCc6IDEuNSwgJ3dpZHRoJzogMC43LCAnaGVpZ2h0JzogMS41LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH1dLFxuICAnUEVERVNUUklBTic6IFt7XG4gICAgY2F0ZWdvcnk6ICdQRURFU1RSSUFOJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxYzNuSWJ5Nmd1dVJqeTFYZFhYYUF3cFhhLTMwMy0xODAucG5nJyxcbiAgICAnbmFtZSc6ICdtYW4nLCAnbW92ZW1lbnQnOiB7IGRlZmF1bHRTcGVlZHM6IFswLjEsIDAuNSwgMV0sICduYW1lJzogJ21hbjEnLCAnbWF4X3NwZWVkJzogMS4xLCAnbWF4X2FjY2VsZXJhdGlvbic6IDEsICdtYXhfdHVybic6IDMgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ21hbjExJywgJ3R5cGUnOiAnY3ViZScsICdsZW5ndGgnOiAwLjQsICd3aWR0aCc6IDAuNCwgJ2hlaWdodCc6IDEuNywgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdQRURFU1RSSUFOJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxUmx4U0lINVlCdU5qU3Nwb1hYYmVORlhhLTI5Ni0xNzEucG5nJyxcbiAgICAnbmFtZSc6ICdraWQnLCAnbW92ZW1lbnQnOiB7IGRlZmF1bHRTcGVlZHM6IFswLjUsIDEsIDNdLCAnbmFtZSc6ICdib3kxJywgJ21heF9zcGVlZCc6IDAuMiwgJ21heF9hY2NlbGVyYXRpb24nOiAwLjYsICdtYXhfdHVybic6IDMgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2JveTExJywgJ3R5cGUnOiAnY3ViZScsICdsZW5ndGgnOiAwLjIsICd3aWR0aCc6IDAuMiwgJ2hlaWdodCc6IDEsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfV0sXG4gICdvdGhlcic6IFt7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ2FnZW50JywgJ21vdmVtZW50JzogeyAnbmFtZSc6ICdmZmYnLCAnbWF4X3NwZWVkJzogMS4xLCAnbWF4X2FjY2VsZXJhdGlvbic6IDEsICdtYXhfdHVybic6IDMgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnbGVuZ3RoJzogMS40LCAnd2lkdGgnOiAxLjQsICdoZWlnaHQnOiAxLjcsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdWZWdldGF0aW9uX1RyZWUnLCAnbW9kZWwnOiAnVmVnZXRhdGlvbl9UcmVlJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICdsZW5ndGgnOiAxLjUsICd3aWR0aCc6IDEuNSwgJ2hlaWdodCc6IDUsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdWZWdldGF0aW9uX0J1c2gnLCAnbW9kZWwnOiAnVmVnZXRhdGlvbl9CdXNoJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICdsZW5ndGgnOiAxLCAnd2lkdGgnOiAxLCAnaGVpZ2h0JzogMC41LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnVmVnZXRhdGlvbl9HcmFzcycsICdtb2RlbCc6ICdWZWdldGF0aW9uX0dyYXNzJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICdsZW5ndGgnOiAxLCAnd2lkdGgnOiAxLCAnaGVpZ2h0JzogMC41LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUGVkZXN0cmlhbl9NYWxlJywgJ21vZGVsJzogJ1BlZGVzdHJpYW5fTWFsZScsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAwLjksICdsZW5ndGgnOiAwLjUsICdoZWlnaHQnOiAxLjgsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdQZWRlc3RyaWFuX0NoaWxkJywgJ21vZGVsJzogJ1BlZGVzdHJpYW5fQ2hpbGQnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMC45LCAnbGVuZ3RoJzogMC41LCAnaGVpZ2h0JzogMS4yLCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUGVkZXN0cmlhbl9GZW1hbGUnLCAnbW9kZWwnOiAnUGVkZXN0cmlhbl9GZW1hbGUnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMC45LCAnbGVuZ3RoJzogMC41LCAnaGVpZ2h0JzogMS44LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUGVkZXN0cmlhbl9PbGQnLCAnbW9kZWwnOiAnUGVkZXN0cmlhbl9PbGQnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMC45LCAnbGVuZ3RoJzogMC41LCAnaGVpZ2h0JzogMS44LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnQmljeWNsZV9CaWN5Y2xlJywgJ21vZGVsJzogJ0JpY3ljbGVfQmljeWNsZScsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAwLjksICdsZW5ndGgnOiAxLjgsICdoZWlnaHQnOiAxLjgsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdCaWN5Y2xlX01vdG9yJywgJ21vZGVsJzogJ0JpY3ljbGVfTW90b3InLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMSwgJ2xlbmd0aCc6IDIsICdoZWlnaHQnOiAyLCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnQmljeWNsZV9FbGVjdHJpYycsICdtb2RlbCc6ICdCaWN5Y2xlX0VsZWN0cmljJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDEsICdsZW5ndGgnOiAyLCAnaGVpZ2h0JzogMiwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LFxuICB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ0JpY3ljbGVfVHJpY3ljbGUnLCAnbW9kZWwnOiAnQmljeWNsZV9UcmljeWNsZScsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAxLjIsICdsZW5ndGgnOiAyLjUsICdoZWlnaHQnOiAyLCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnVmVoaWNsZV9DYXInLCAnbW9kZWwnOiAnVmVoaWNsZV9DYXInLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMiwgJ2xlbmd0aCc6IDQuMiwgJ2hlaWdodCc6IDEuNCwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1ZlaGljbGVfU1VWJywgJ21vZGVsJzogJ1ZlaGljbGVfU1VWJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDIsICdsZW5ndGgnOiA0LjUsICdoZWlnaHQnOiAxLjUsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdWZWhpY2xlX1RydWNrJywgJ21vZGVsJzogJ1ZlaGljbGVfVHJ1Y2snLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMi42LCAnbGVuZ3RoJzogNS4yLCAnaGVpZ2h0JzogMi41LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnVmVoaWNsZV9CdXMnLCAnbW9kZWwnOiAnVmVoaWNsZV9CdXMnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMi4xLCAnbGVuZ3RoJzogNC41LCAnaGVpZ2h0JzogMi4wNSwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfQnVzU3RvcCcsICdtb2RlbCc6ICdQcm9wX0J1c1N0b3AnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMy40LCAnbGVuZ3RoJzogMS41NCwgJ2hlaWdodCc6IDIuNzYsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdQcm9wX0ZlbmNlJywgJ21vZGVsJzogJ1Byb3BfRmVuY2UnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMS40LCAnbGVuZ3RoJzogMC4xLCAnaGVpZ2h0JzogMSwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfUG9sZScsICdtb2RlbCc6ICdQcm9wX1BvbGUnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMC4zLCAnbGVuZ3RoJzogMC4zLCAnaGVpZ2h0JzogMy41LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUHJvcF9CaWxsYm9hcmQnLCAnbW9kZWwnOiAnUHJvcF9CaWxsYm9hcmQnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMS4xLCAnbGVuZ3RoJzogMC4xLCAnaGVpZ2h0JzogMi4yLCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUHJvcF9QbGFudFBvdCcsICdtb2RlbCc6ICdQcm9wX1BsYW50UG90JywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDAuNSwgJ2xlbmd0aCc6IDAuNSwgJ2hlaWdodCc6IDAuNSwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfQmluJywgJ21vZGVsJzogJ1Byb3BfQmluJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDAuNTUsICdsZW5ndGgnOiAwLjY1LCAnaGVpZ2h0JzogMS4wNSwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfQ291bnRlcicsICdtb2RlbCc6ICdQcm9wX0NvdW50ZXInLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMC42LCAnbGVuZ3RoJzogMC4zNSwgJ2hlaWdodCc6IDEuMjUsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdQcm9wX0RpcnREZWJyaXMnLCAnbW9kZWwnOiAnUHJvcF9EaXJ0RGVicmlzJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDEuOCwgJ2xlbmd0aCc6IDEuNSwgJ2hlaWdodCc6IDAuMTUsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdQcm9wX0ZpcmVIeWRyYW50JywgJ21vZGVsJzogJ1Byb3BfRmlyZUh5ZHJhbnQnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMC41LCAnbGVuZ3RoJzogMC40LCAnaGVpZ2h0JzogMC44LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUHJvcF9CZW5jaCcsICdtb2RlbCc6ICdQcm9wX0JlbmNoJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDEuNSwgJ2xlbmd0aCc6IDAuNSwgJ2hlaWdodCc6IDAuNSwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfQmFycmllckNvbmUnLCAnbW9kZWwnOiAnUHJvcF9CYXJyaWVyQ29uZScsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAwLjM1LCAnbGVuZ3RoJzogMC4zNSwgJ2hlaWdodCc6IDAuNiwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfQmFycmllckN5bGluZGVyJywgJ21vZGVsJzogJ1Byb3BfQmFycmllckN5bGluZGVyJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDAuMjUsICdsZW5ndGgnOiAwLjI1LCAnaGVpZ2h0JzogMC45LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUHJvcF9CYXJyaWNhZGUnLCAnbW9kZWwnOiAnUHJvcF9CYXJyaWNhZGUnLCAnbW92ZW1lbnQnOiB7IH0sICdhcHBlYXJhbmNlJzogeyAnbmFtZSc6ICdmZmYnLCAndHlwZSc6ICdjdWJlJywgJ3dpZHRoJzogMS4yMSwgJ2xlbmd0aCc6IDAuMzcsICdoZWlnaHQnOiAxLjA3LCAnY29sb3InOiBbMSwgMCwgMCwgMV19XG4gIH0sIHtcbiAgICBjYXRlZ29yeTogJ1VOS05PVycsXG4gICAgJ2ltZyc6ICcvL2d3LmFsaWNkbi5jb20vdGZzL1RCMWtVVXB2QVptQktOalNaUGlYWFhGTlZYYS02MTItNDQ3LnBuZycsXG4gICAgJ25hbWUnOiAnUHJvcF9DdWJlJywgJ21vZGVsJzogJ1Byb3BfQ3ViZScsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAxLCAnbGVuZ3RoJzogMSwgJ2hlaWdodCc6IDEsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdQcm9wX0NvbmUnLCAnbW9kZWwnOiAnUHJvcF9Db25lJywgJ21vdmVtZW50JzogeyB9LCAnYXBwZWFyYW5jZSc6IHsgJ25hbWUnOiAnZmZmJywgJ3R5cGUnOiAnY3ViZScsICd3aWR0aCc6IDEsICdsZW5ndGgnOiAxLCAnaGVpZ2h0JzogMSwgJ2NvbG9yJzogWzEsIDAsIDAsIDFdfVxuICB9LCB7XG4gICAgY2F0ZWdvcnk6ICdVTktOT1cnLFxuICAgICdpbWcnOiAnLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFrVVVwdkFabUJLTmpTWlBpWFhYRk5WWGEtNjEyLTQ0Ny5wbmcnLFxuICAgICduYW1lJzogJ1Byb3BfQ3lsaW5kZXInLCAnbW9kZWwnOiAnUHJvcF9DeWxpbmRlcicsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAxLCAnbGVuZ3RoJzogMSwgJ2hlaWdodCc6IDEsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfSwge1xuICAgIGNhdGVnb3J5OiAnVU5LTk9XJyxcbiAgICAnaW1nJzogJy8vZ3cuYWxpY2RuLmNvbS90ZnMvVEIxa1VVcHZBWm1CS05qU1pQaVhYWEZOVlhhLTYxMi00NDcucG5nJyxcbiAgICAnbmFtZSc6ICdQcm9wX1NwaGVyZScsICdtb2RlbCc6ICdQcm9wX1NwaGVyZScsICdtb3ZlbWVudCc6IHsgfSwgJ2FwcGVhcmFuY2UnOiB7ICduYW1lJzogJ2ZmZicsICd0eXBlJzogJ2N1YmUnLCAnd2lkdGgnOiAxLCAnbGVuZ3RoJzogMSwgJ2hlaWdodCc6IDEsICdjb2xvcic6IFsxLCAwLCAwLCAxXX1cbiAgfV1cbn07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZ1bmN0aW9uUGFuZWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0YXRlPXtcbiAgICAgIG1lbnVzOiBbe1xuICAgICAgICBpY29uOiAnY2hlbGlhbmdsZWl4aW5nJyxcbiAgICAgICAgaWQ6ICdyb2xlcydcbiAgICAgIH0sIHtcbiAgICAgICAgaWNvbjogJ2ljb25mb250emhpenVvYmlhb3podW4wMjMxNTAnLFxuICAgICAgICBpZDogJ1hHJ1xuICAgICAgfSwge1xuICAgICAgICBpY29uOiAnaG9uZ2ZhcWknLFxuICAgICAgICBpZDogJ3RyaWdnZXInXG4gICAgICB9XG4gICAgICAvLyAse1xuICAgICAgLy8gICBpY29uOiAnZGFvbHV5b25nZHUnLFxuICAgICAgLy8gICBpZDogJ3RyYWZmaWNGbG93J1xuICAgICAgLy8gfVxuICAgICAgXSxcbiAgICAgIG5vdzogJydcbiAgICB9XG4gICAgIFxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge31cblxuICAgIGNoYW5nZVBhbmVsKGl0ZW0pIHtcbiAgICAgIGNvbnN0IHsgbGVmdGJhciB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGxldCBub3cgPSBmYWxzZTtcbiAgICAgIGlmICh0aGlzLnN0YXRlLm5vdyAhPT0gaXRlbS5pZCkge1xuICAgICAgICBub3cgPSBpdGVtLmlkO1xuICAgICAgfVxuICAgICAgbGVmdGJhci5zZXRTdGF0ZSh7XG4gICAgICAgIG5vdzogbm93XG4gICAgICB9KTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBub3c6IG5vd1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qgbm93ID0gdGhpcy5zdGF0ZS5ub3c7XG4gICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJmdW5jdGlvblBhbmVsXCI+XG4gICAgICAgIHtcbiAgICAgICAgICB0aGlzLnN0YXRlLm1lbnVzLm1hcChpdGVtID0+IHtcbiAgICAgICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17bm93ID09PSBpdGVtLmlkID8gJ2FjdGl2ZScgOiAnJ30ga2V5PXtpdGVtLmlkfSBvbkNsaWNrPXsoKSA9PiB0aGlzLmNoYW5nZVBhbmVsKGl0ZW0pfSA+PGkgY2xhc3NOYW1lPXsnaWNvbi0nICsgaXRlbS5pY29uICsgJyBldC1pY29uJ30gLz48L2Rpdj47XG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgPC9kaXY+O1xuICAgIH1cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm9sZXNQYW5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGU9e1xuICAgICAgZ29WZXJzaW9uOiAnJyxcbiAgICAgIG1hcFZlcnNpb246ICcnXG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoY2ZnKSB7XG5cbiAgICB9XG5cbiAgICBvbkRyYWcoKSB7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgIHR5cGU6ICdkcmFnWEcnLFxuICAgICAgICBkYXRhOiAneGcnXG4gICAgICB9KTtcbiAgICAgIC8v5pyJeGcs5YiZ5L2/55So5bey5pyJ55qE5pWw5o2uXG4gICAgICBpZiAod2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5vYmplY3RzWyd4ZyddKSB7XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5fZHJhZ0l0ZW0gPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm9iamVjdHNbJ3hnJ107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuX2RyYWdJdGVtID0ge1xuICAgICAgICAgIG5hbWU6ICd4ZycsXG4gICAgICAgICAgcm9sZToge1xuICAgICAgICAgICAgbmFtZTogJ2dwbHVzJyxcbiAgICAgICAgICAgIG1vdmVtZW50OiB7fSxcbiAgICAgICAgICAgIGFwcGVhcmFuY2U6IHt9LFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc3RhcnRQb2ludFR5cGU6ICdzaW5nbGUnLFxuICAgICAgICAgIGdvYWw6IHsvL+m7mOiupOWNleeCuVxuICAgICAgICAgICAgdHlwZTogJ3NpbmdsZScsXG4gICAgICAgICAgICBzY3JpcHQ6IFtdXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIGNoYW5nZU1hcFZlcnNpb24odmFsdWUpIHtcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEubWFwVmVyc2lvbiA9IHZhbHVlO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG1hcFZlcnNpb246IHZhbHVlXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjaGFuZ2VWZXJzaW9uKHZhbHVlKSB7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLmdvVmVyc2lvbiA9IHZhbHVlO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGdvVmVyc2lvbjogdmFsdWVcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZpc2libGUpIHtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICAgIHR5cGU6ICdjb25maWdYRydcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHdpZHRoOiAhdGhpcy5wcm9wcy52aXNpYmxlID8gJzBweCcgOiAnMjAwcHgnIH19IGNsYXNzTmFtZT1cInNpZGVQYW5lbFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2lkZS1wYW5lbC10aXRsZVwiPuiHquWKqOmpvumptueul+azlTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaXRlbS14Z1wiID5cbiAgICAgICAgICAgIDxpbWcgZHJhZ2dhYmxlIG9uRHJhZz17dGhpcy5vbkRyYWcuYmluZCh0aGlzKX0gc3JjPVwiLy9ndy5hbGljZG4uY29tL3Rmcy9UQjFRb21yQU5UcEsxUmpTWlIwWFhiRXdYWGEtMTczMC0xMTIxLnBuZ181MDB4NTAwLmpwZ18ud2VicFwiLz5cbiAgICAgICAgICAgIDxzcGFuPui/kE08L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJpZ2dlclBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0ZT17XG4gICAgICB0cmlnZ2VyczogW3tcbiAgICAgICAgZGVzYzogJ2RpcmVjdG9yX3RyaWdnZXInLFxuICAgICAgICBzaGFwZTogJ3BvbHlnb24nLFxuICAgICAgICBwb2ludHM6IFtdLFxuICAgICAgICBuYW1lOiAn5Zy65pmv6Kem5Y+R5ZmoJ1xuICAgICAgfVxuICAgICAgLy8gLCB7XG4gICAgICAvLyAgIGRlc2M6ICdwZXJjZXB0X3RyaWdnZXInLFxuICAgICAgLy8gICBzaGFwZTogJ3BvbHlnb24nLFxuICAgICAgLy8gICBuYW1lOiAn54mp5L2T6Kem5Y+R5ZmoJyxcbiAgICAgIC8vICAgYWdlbnRzOiAnYW55JyxcbiAgICAgIC8vICAgcG9pbnRzOiBbXSxcbiAgICAgIC8vICAgcGVyY2VwdGlibGU6IHRydWVcbiAgICAgIC8vIH1cbiAgICAgIF0sXG4gICAgICBub3dUcmlnZ2VyOiAnJ1xuICAgIH1cblxuICAgIHRyaWdnZXJPYmplY3Q9Jyc7Ly/lvZPliY3lgZrnmoR0cmlnZ2VyXG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoY2ZnKSB7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignZGVzZWxlY3QnLCBlID0+IHsvL+WOu+aOiem8oOagh+aJi+WKv1xuICAgICAgICB0aGlzLnJlbW92ZUNyb3NzTW91c2UoKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgbm93VHJpZ2dlcjogJydcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLnRyaWdnZXJPYmplY3QpIHtcbiAgICAgICAgICB0aGlzLnRyaWdnZXJPYmplY3QuaG92ZXJQb2ludCAmJiAod2luZG93Lmdsb2JhbFN0YXRlLndhdGNoTWFwLnBpZ2Vvbk1hcC5yZW1vdmUodGhpcy50cmlnZ2VyT2JqZWN0LmhvdmVyUG9pbnQpKTtcbiAgICAgICAgICBkZWxldGUgdGhpcy50cmlnZ2VyT2JqZWN0LmhvdmVyUG9pbnQ7XG4gICAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLnZpZXdlci52aWV3cG9ydC50cmlnZ2VyLnVwZGF0ZUxpbmUodGhpcy50cmlnZ2VyT2JqZWN0KTtcbiAgICAgICAgICB0aGlzLnRyaWdnZXJPYmplY3QgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgICAgICB0eXBlOiAnZXhpdFRyaWdnZXInLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgLy/mt7vliqDngrlcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5ub3dUcmlnZ2VyKSB7Ly/nu5jliLbpgLvovpFcbiAgICAgICAgICBpZiAoIXRoaXMudHJpZ2dlck9iamVjdCkge1xuICAgICAgICAgICAgdGhpcy50cmlnZ2VyT2JqZWN0ID0gd2luZG93Lmdsb2JhbFN0YXRlLnZpZXdlci52aWV3cG9ydC50cmlnZ2VyLmFkZE5ld1RyaWdnZXIodGhpcy5zdGF0ZS5ub3dUcmlnZ2VyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICAgICAgdHlwZTogJ2FkZFRyaWdnZXJQb2ludCcsXG4gICAgICAgICAgICB0cmlnZ2VyOiB0aGlzLnN0YXRlLm5vd1RyaWdnZXIsXG4gICAgICAgICAgICBjb29yZDogZS5jb29yZCxcbiAgICAgICAgICAgIG9iamVjdDogdGhpcy50cmlnZ2VyT2JqZWN0XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgLy/pvKDmoIfnp7vliqjnmoTml7blgJnmm7TmlrBcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBlID0+IHtcbiAgICAgICAgaWYgKCF0aGlzLnRyaWdnZXJPYmplY3QpIHJldHVybjtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICAgIHR5cGU6ICd0cmlnZ2VyTW91c2Vtb3ZlJyxcbiAgICAgICAgICBjb29yZDogZS5jb29yZCxcbiAgICAgICAgICBvYmplY3Q6IHRoaXMudHJpZ2dlck9iamVjdFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgLy/ov5vlhaXnu5jliLbmqKHlvI9cbiAgICBlbnRlclRyaWdnZXIodHJpZ2dlcikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG5vd1RyaWdnZXI6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodHJpZ2dlcikpXG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkQ3Jvc3NNb3VzZSgpO1xuICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICB0eXBlOiAnZW50ZXJUcmlnZ2VyJyxcbiAgICAgICAgdHJpZ2dlcjogdHJpZ2dlclxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy/mt7vliqDpvKDmoIfmoLflvI9cbiAgICBhZGRDcm9zc01vdXNlKCkge1xuICAgICAgY29uc3Qgc3R1ZGlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm0tc3R1ZGlvJyk7XG4gICAgICBzdHVkaW8uY2xhc3NOYW1lID0gJ20tc3R1ZGlvIGNyb3NzaGFpcic7XG4gICAgfVxuXG4gICAgLy/np7vpmaTpvKDmoIfmoLflvI9cbiAgICByZW1vdmVDcm9zc01vdXNlKCkge1xuICAgICAgY29uc3Qgc3R1ZGlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm0tc3R1ZGlvJyk7XG4gICAgICBzdHVkaW8uY2xhc3NOYW1lID0gJ20tc3R1ZGlvICc7XG4gICAgfVxuXG4gICAgLy/muLLmn5N0cmlnZ2VyXG4gICAgcmVuZGVySXRlbXMoKSB7XG4gICAgICBjb25zdCB0cmlnZ2VycyA9IHRoaXMuc3RhdGUudHJpZ2dlcnM7XG4gICAgICBjb25zdCBub3dUcmlnZ2VyID0gdGhpcy5zdGF0ZS5ub3dUcmlnZ2VyO1xuICAgICAgY29uc3QgaXRlbXMgPSBbXTtcbiAgICAgIHRyaWdnZXJzLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgbGV0IGNsYXNzTmFtZSA9ICdzaWRlLWl0ZW0nO1xuICAgICAgICBpZiAoaXRlbS5kZXNjID09PSBub3dUcmlnZ2VyLmRlc2MpIHtcbiAgICAgICAgICBjbGFzc05hbWUgKz0gJyBhY3RpdmUnO1xuICAgICAgICB9XG4gICAgICAgIGl0ZW1zLnB1c2goPGRpdiBrZXk9e2luZGV4fSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gb25DbGljaz17KGUpID0+IHt0aGlzLmVudGVyVHJpZ2dlcihpdGVtLCBlKX19PlxuICAgICAgICAgIHtpdGVtLm5hbWV9XG4gICAgICAgIDwvZGl2Pik7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGl0ZW1zO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBzdHlsZT17eyB3aWR0aDogIXRoaXMucHJvcHMudmlzaWJsZSA/ICcwcHgnIDogJzIwMHB4JyB9fSBjbGFzc05hbWU9XCJzaWRlUGFuZWxcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNpZGUtcGFuZWwtdGl0bGVcIj7op6blj5Hlmag8L2Rpdj5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJJdGVtcygpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBJY29uIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9pY29uJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHRyYWZmaWNGbG93UGFuZWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0YXRlPXtcbiAgICAgIGFnZW50U291cmNlczogW10sXG4gICAgICBhZ2VudFNvdXJjZToge31cbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoY2ZnKSB7XG4gICAgICAgIFxuICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2Rlc2VsZWN0JywgKGUpID0+IHtcbiAgICAgICAgaWYgKGUub2JqZWN0KSB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBhZ2VudFNvdXJjZToge31cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkU2NoZW1hJywgKGUpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgYWdlbnRTb3VyY2VzOiB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLmFnZW50U291cmNlcyB8fCBbXVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgLy/ov5vlhaXnu5jliLbmqKHlvI9cbiAgICBzZWxlY3RJdGVtKG9iamVjdCkge1xuICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICB0eXBlOiAnZGVzZWxlY3QnLFxuICAgICAgfSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgYWdlbnRTb3VyY2U6IG9iamVjdCB9KTtcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgICAgdHlwZTogJ3NlbGVjdEFnZW50U291cmNlJyxcbiAgICAgICAgYWdlbnRTb3VyY2U6IG9iamVjdFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy/muLLmn5N0cmlnZ2VyXG4gICAgcmVuZGVySXRlbXMoKSB7XG4gICAgICBjb25zdCBhZ2VudFNvdXJjZXMgPSB0aGlzLnN0YXRlLmFnZW50U291cmNlcztcbiAgICAgIGNvbnN0IG5vdyA9IHRoaXMuc3RhdGUuYWdlbnRTb3VyY2U7XG4gICAgICBjb25zdCBpdGVtcyA9IFtdO1xuICAgICAgbGV0IGkgPSAwO1xuICAgICAgZm9yIChjb25zdCB4IGluIGFnZW50U291cmNlcykge1xuICAgICAgICBjb25zdCBpdGVtID0gYWdlbnRTb3VyY2VzW3hdO1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gJ3NpZGUtaXRlbSc7XG4gICAgICAgIGlmIChpdGVtLm5hbWUgPT09IG5vdy5uYW1lKSB7XG4gICAgICAgICAgY2xhc3NOYW1lICs9ICcgYWN0aXZlJztcbiAgICAgICAgfVxuICAgICAgICBpKys7XG4gICAgICAgIGl0ZW1zLnB1c2goPGRpdiBrZXk9e3h9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXsoZSkgPT4ge3RoaXMuc2VsZWN0SXRlbShpdGVtLCBlKX19PlxuICAgICAgICAgICAgICAgICAgICDkuqTpgJrmtYF7aX1cbiAgICAgICAgICA8SWNvbiBvbkNsaWNrPXsoZSkgPT4ge2Uuc3RvcFByb3BhZ2F0aW9uKCk7dGhpcy5kZWxldGVJdGVtKHgpfX0gdHlwZT1cImFzaGJpblwiIHNpemU9XCJzbWFsbFwiIHN0eWxlPXt7IGZsb2F0OiAncmlnaHQnLCBjdXJzb3I6ICdwb2ludGVyJyB9fSAvPlxuICAgICAgICA8L2Rpdj4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZW1zO1xuICAgIH1cblxuICAgIC8v5Yig6Zmk5Lqk6YCa5rWBXG4gICAgZGVsZXRlSXRlbShpbmRleCkge1xuICAgICAgY29uc3QgeyBhZ2VudFNvdXJjZXMgfSA9IHRoaXMuc3RhdGU7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuaGlzdG9yeS5yZW1vdmVBZ2VudFNvdXJjZShhZ2VudFNvdXJjZXMpO1xuICAgICAgZGVsZXRlIGFnZW50U291cmNlc1tpbmRleF07XG4gICAgICB0aGlzLnNldFN0YXRlKHsgYWdlbnRTb3VyY2VzIH0pO1xuICAgICAgYWdlbnRTb3VyY2VzLmluaXRhcmVhcy5tYXAoaXRlbSA9PiB7XG4gICAgICAgIGNvbnN0IHRyYWZmaWNBcmVhID0gd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhc1tpdGVtLm5hbWVdO1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LmRlbGV0ZUl0ZW1UcmFmZmljKHRyYWZmaWNBcmVhKTtcbiAgICAgIH0pO1xuICAgICAgYWdlbnRTb3VyY2VzLmdvYWxhcmVhcy5tYXAoaXRlbSA9PiB7XG4gICAgICAgIGNvbnN0IHRyYWZmaWNBcmVhID0gd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhc1tpdGVtLm5hbWVdO1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LmRlbGV0ZUl0ZW1UcmFmZmljKHRyYWZmaWNBcmVhKTtcbiAgICAgIH0pO1xuICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICB0eXBlOiAnZGVzZWxlY3QnLCBvYmplY3Q6ICdtYWtlIHJpZ2h0YmFyIGNsb3NlJ1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy/mt7vliqDkuqTpgJrmtYFcbiAgICBhZGRJdGVtKCkge1xuICAgICAgY29uc3QgeyBhZ2VudFNvdXJjZXMgfSA9IHRoaXMuc3RhdGU7XG4gICAgICBjb25zdCBhZ2VudFNvdXJjZSA9IHtcbiAgICAgICAgbmFtZTogJ2FzXycgKyAobmV3IERhdGUoKS5nZXRUaW1lKCkgKiBNYXRoLnJhbmRvbSgpKS50b0ZpeGVkKDApLFxuICAgICAgICBpbml0YXJlYXM6IFtdLFxuICAgICAgICBnb2FsYXJlYXM6IFtdLFxuICAgICAgICByb2xlczogW10sXG4gICAgICAgIHBlcmNlbnQ6IFtdLFxuICAgICAgICBudW1iZXJzOiAxXG4gICAgICB9O1xuICAgICAgYWdlbnRTb3VyY2VzW2FnZW50U291cmNlLm5hbWVdID0gKGFnZW50U291cmNlKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBhZ2VudFNvdXJjZXMgfSk7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuaGlzdG9yeS5tb2RpZnlBZ2VudFNvdXJjZShhZ2VudFNvdXJjZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgdmlzaWJsZSA9IHRoaXMucHJvcHMudmlzaWJsZTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6ICF2aXNpYmxlID8gJzBweCcgOiAnMjAwcHgnIH19IGNsYXNzTmFtZT1cInNpZGVQYW5lbFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2lkZS1wYW5lbC10aXRsZVwiPuS6pOmAmua1gVxuICAgICAgICAgICAgPEljb24gb25DbGljaz17dGhpcy5hZGRJdGVtLmJpbmQodGhpcyl9IHN0eWxlPXt7IG1hcmdpbkxlZnQ6ICcxMDBweCcsIGN1cnNvcjogJ3BvaW50ZXInIH19IHR5cGU9XCJhZGRcIiBzaXplPVwic21hbGxcIi8+PC9kaXY+XG4gICAgICAgICAge3RoaXMucmVuZGVySXRlbXMoKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0ZSA9IHtcbiAgICBzaG93TW9kZWw6IGZhbHNlLFxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnNldFN0YXRlID0gKHN0YXRlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cblxuICBvbkRyYWcoaWQpIHtcbiAgICB3aW5kb3cuX2RyYWdpbmdJdGVtID0gaWQ7XG4gIH1cblxuICBzaG93TW9kZWxXYXJlaG91c2UoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaG93TW9kZWw6IHRydWUsXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuICcnO1xuICAgIC8qKlxuICAgICAoPGRpdiBjbGFzc05hbWU9J3RvcGJhcic+XG4gICAgIDxkaXYgY2xhc3NOYW1lPSd0b3BiYXItdGl0bGUnPiBNYXRyaXgtU3R1ZGlvPC9kaXY+XG4gICAgIDxkaXYgY2xhc3NOYW1lPSdtZW51cyc+XG4gICAgIDxkaXYgY2xhc3NOYW1lPVwibWVudS1pdGVtIGFjdGl2ZVwiPue8lui+keWcuuaZrzwvZGl2PlxuICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnUtaXRlbS1zcGxpdFwiPjwvZGl2PlxuICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1lbnUtaXRlbSBcIiBvbkNsaWNrPXt0aGlzLnNob3dNb2RlbFdhcmVob3VzZX0+5qih5Z6L5LuT5bqTPC9kaXY+XG4gICAgIDxkaXYgY2xhc3NOYW1lPVwibWVudS1pdGVtLXNwbGl0XCI+PC9kaXY+XG4gICAgIDxhIGhyZWY9XCIvdGFzay90YXNrLWxpc3RcIiB0YXJnZXQ9XCJfYmxhbmtcIj48ZGl2IGNsYXNzTmFtZT1cIm1lbnUtaXRlbSBcIj7lnLrmma/nrqHnkIY8L2Rpdj48L2E+XG4gICAgIDxkaXYgY2xhc3NOYW1lPVwibWVudS1pdGVtLXNwbGl0XCI+PC9kaXY+XG4gICAgIDxhIGhyZWY9XCIvY2FzZS9jdXN0b20tY2FzZVwiICB0YXJnZXQ9XCJfYmxhbmtcIj48ZGl2IGNsYXNzTmFtZT1cIm1lbnUtaXRlbVwiPuS7u+WKoeeuoeeQhjwvZGl2PjwvYT5cbiAgICAgPC9kaXY+XG4gICAgIDwvZGl2Pi8pXG4gICAgICoqL1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRoaW5nUGFuZWwgZnJvbSAnLi9wYW5lbHMvVGhpbmdQYW5lbCc7XG5pbXBvcnQgVHJpZ2dlckF0dHJQYW5lbCBmcm9tICcuL3BhbmVscy9UcmlnZ2VyQXR0clBhbmVsJztcbmltcG9ydCBUcmFmZmljQXR0clBhbmVsIGZyb20gJy4vcGFuZWxzL1RyYWZmaWNBdHRyUGFuZWwnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmlnaHRiYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0YXRlPXtcbiAgICAgIHR5cGU6ICd0aGluZycsXG4gICAgICB2aXNpYmxlOiB0cnVlXG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGNmZykge1xuICAgICAgc3VwZXIoY2ZnKTtcbiAgICB9XG5cbiAgXG4gICAgcmVuZGVyKCkgeyBcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICA8VGhpbmdQYW5lbCAvPlxuICAgICAgICAgIDxUcmFmZmljQXR0clBhbmVsIC8+XG4gICAgICAgICAgPFRyaWdnZXJBdHRyUGFuZWwgLz5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICk7XG4gICAgfVxufSIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQXR0cmlidXRlUGFuZWwgZnJvbSAnLi9BdHRyaWJ1dGVQYW5lbCc7XG5pbXBvcnQgTW92ZVBhbmVsIGZyb20gJy4vTW92ZVBhbmVsJztcbmltcG9ydCBUYWIgZnJvbSAnQGFsaWZlL25leHQvbGliL3RhYic7XG5pbXBvcnQgVGhpbmdzTGlzdCBmcm9tICcuL1RoaW5nc0xpc3QnO1xuaW1wb3J0IEljb24gZnJvbSAnQGFsaWZlL25leHQvbGliL2ljb24nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaGluZ1BhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGUgPSB7XG4gICAgdHlwZTogJ3RoaW5nJyxcbiAgICB2aXNpYmxlOiBmYWxzZVxuICB9XG5cbiAgY29uc3RydWN0b3IoY2ZnKSB7XG4gICAgc3VwZXIoY2ZnKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMubGlzdGVuUGFuZWxDaGVja2VkKCk7XG4gIH1cblxuICBsaXN0ZW5QYW5lbENoZWNrZWQoKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbmZpZ1hHJywgKCkgPT4ge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHR5cGU6ICdYRydcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjb25maWdSb2xlcycsICgpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0eXBlOiAndGhpbmcnXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignZGVzZWxlY3QnLCAoZSkgPT4ge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHZpc2libGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0Y2hhbmdlJywgKGUpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB2aXNpYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsaWNrUmlnaHRCYXJJY29uKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgdmlzaWJsZTogIXRoaXMuc3RhdGUudmlzaWJsZVxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9e3RoaXMuc3RhdGUudmlzaWJsZSA/ICdyaWdodGJhciAnIDogJ3JpZ2h0YmFyIHNocmluayd9PlxuICAgICAgPEljb24gb25DbGljaz17dGhpcy5jbGlja1JpZ2h0QmFySWNvbi5iaW5kKHRoaXMpfSBzaXplPVwic21hbGxcIiB0eXBlPVwiYXJyb3ctZG91YmxlLWxlZnRcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicmlnaHQtYmFyLWljb25cIi8+XG4gICAgICA8VGFiPlxuICAgICAgICA8VGFiLkl0ZW0gdGl0bGU9XCLot6/lvoTnvJbovpFcIj5cbiAgICAgICAgICA8TW92ZVBhbmVsLz5cbiAgICAgICAgPC9UYWIuSXRlbT5cbiAgICAgICAgPFRhYi5JdGVtIHRpdGxlPVwi5bGe5oCn57yW6L6RXCI+XG4gICAgICAgICAgPEF0dHJpYnV0ZVBhbmVsLz5cbiAgICAgICAgPC9UYWIuSXRlbT5cbiAgICAgICAgPFRhYi5JdGVtIHRpdGxlPVwi5YWD57SgXCI+XG4gICAgICAgICAgPFRoaW5nc0xpc3QvPlxuICAgICAgICA8L1RhYi5JdGVtPlxuICAgICAgPC9UYWI+XG4gICAgPC9kaXY+KTtcbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBGb3JtIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9mb3JtJztcbmltcG9ydCBJbnB1dCBmcm9tICdAYWxpZmUvbmV4dC9saWIvaW5wdXQnO1xuaW1wb3J0IEZpZWxkIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9maWVsZCc7XG5pbXBvcnQgU3dpdGNoIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9zd2l0Y2gnO1xuaW1wb3J0IFNwZWVkIGZyb20gJy4uL2NvbXBvbmVudC9zcGVlZC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEF0dHJpYnV0ZVBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoY29uZmlnKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbmFtZTogJycsXG4gICAgICBsZW5ndGg6ICcnXG4gICAgfTtcbiAgfVxuXG4gIGZpZWxkID0gbmV3IEZpZWxkKHRoaXMpO1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHRoaW5nID0gd2luZG93Lmdsb2JhbFN0YXRlLnNlbGVjdHRoaW5nO1xuICAgIGlmICh0aGluZykge1xuICAgICAgY29uc3QgZGF0YSA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEub2JqZWN0c1t0aGluZy51c2VyRGF0YS5uYW1lXTtcbiAgICAgIHRoaXMuZm9ybWF0QXR0cihkYXRhKTtcbiAgICB9XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdGNoYW5nZScsIChlKSA9PiB7XG4gICAgICBjb25zdCBvYmplY3QgPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm9iamVjdHNbZS5tZXNoLnVzZXJEYXRhLm5hbWVdO1xuICAgICAgdGhpcy5mb3JtYXRBdHRyKG9iamVjdCk7XG4gICAgfSk7XG4gIH1cblxuICBmb3JtYXRBdHRyKGRhdGEpIHtcbiAgICB0aGlzLm9iamVjdCA9IGRhdGE7XG4gICAgY29uc3Qgcm9sZSA9IGRhdGEucm9sZTtcbiAgICBjb25zdCBtb3ZlbWVudCA9IHJvbGUubW92ZW1lbnQ7XG4gICAgY29uc3QgbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLnJlZnMuc3BlZWQgJiYgdGhpcy5yZWZzLnNwZWVkLmNsZWFyKCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgcm9sZTogcm9sZSxcbiAgICAgIGNhdGVnb3J5OiByb2xlLmNhdGVnb3J5LFxuICAgICAgbW92ZW1lbnQ6IG1vdmVtZW50IHx8IHt9LFxuICAgICAgYXBwZWFyYW5jZTogcm9sZS5hcHBlYXJhbmNlIHx8IHt9XG4gICAgfSk7XG5cbiAgfVxuXG4gIGNoYW5nZUZvcm0oZGF0YSkge1xuICAgIGNvbnN0IHttb3ZlbWVudCwgYXBwZWFyYW5jZX0gPSB0aGlzLnN0YXRlO1xuXG4gICAgbW92ZW1lbnQubWF4X2FjY2VsZXJhdGlvbiA9IChkYXRhLm1heF9hY2NlbGVyYXRpb24pO1xuICAgIG1vdmVtZW50Lm1heF90dXJuID0gKGRhdGEubWF4X3R1cm4pO1xuICAgIGFwcGVhcmFuY2UubGVuZ3RoID0gKGRhdGEubGVuZ3RoKTtcbiAgICBhcHBlYXJhbmNlLndpZHRoID0gKGRhdGEud2lkdGgpO1xuICAgIGFwcGVhcmFuY2UuaGVpZ2h0ID0gKGRhdGEuaGVpZ2h0KTtcblxuICAgIG1vdmVtZW50LmF1dG8gPSAhIWRhdGEuYXV0bztcbiAgICB0aGlzLm9iamVjdC5yb2xlLnN0cmF0ZWd5ID0gZGF0YS5hdXRvID8gJ2FkYXB0aXZlJyA6ICdiYXNpYyc7XG4gICAgdGhpcy5vYmplY3Qucm9sZS5tb3ZlbWVudCA9IG1vdmVtZW50O1xuICAgIHRoaXMub2JqZWN0LnJvbGUuYXBwZWFyYW5jZSA9IGFwcGVhcmFuY2U7XG4gICAgdGhpcy5vYmplY3QubmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLm9iamVjdC5yb2xlLmNhdGVnb3J5ID0gZGF0YS5jYXRlZ29yeTtcbiAgICB0aGlzLm9iamVjdC5yb2xlLm1vZGVsID0gZGF0YS5tb2RlbDtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuaGlzdG9yeS5tb2RpZnlPYmplY3QodGhpcy5vYmplY3QpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgY2F0ZWdvcnk6IGRhdGEuY2F0ZWdvcnksXG4gICAgICBtb3ZlbWVudCwgYXBwZWFyYW5jZSxcbiAgICAgIHJvbGU6IHRoaXMub2JqZWN0LnJvbGVcbiAgICB9KTtcbiAgfVxuXG4gIG9uU3BlZWRDaGFuZ2UodiwgdHlwZSkge1xuICAgIGNvbnN0IHttb3ZlbWVudH0gPSB0aGlzLnN0YXRlO1xuICAgIG1vdmVtZW50Lm1heF9zcGVlZCA9IHY7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtb3ZlbWVudFxuICAgIH0pO1xuICAgIHRoaXMub2JqZWN0LnJvbGUubW92ZW1lbnQgPSBtb3ZlbWVudDtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuaGlzdG9yeS5tb2RpZnlPYmplY3QodGhpcy5vYmplY3QpO1xuICB9XG5cbiAgb25TcGVlZFBDaGFuZ2UodiwgdHlwZSkge1xuICAgIGNvbnN0IHtyb2xlfSA9IHRoaXMuc3RhdGU7XG4gICAgcm9sZS5vZmZzZXQgPSB2O1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgcm9sZVxuICAgIH0pO1xuICAgIHRoaXMub2JqZWN0LnJvbGUgPSByb2xlO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5Lm1vZGlmeU9iamVjdCh0aGlzLm9iamVjdCk7XG4gIH1cblxuICBvbkFkYXB0aXZlTGluZUNoYW5nZSh2YWx1ZSkge1xuICAgIHRoaXMub2JqZWN0LmFkYXB0aXZlX2xpbmUgPSB2YWx1ZTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuaGlzdG9yeS5tb2RpZnlPYmplY3QodGhpcy5vYmplY3QpO1xuICB9XG5cbiAgLy/muLLmn5PlsZ7mgKdcbiAgcmVuZGVyQXR0cigpIHtcbiAgICBjb25zdCB7bW92ZW1lbnQsIGFwcGVhcmFuY2UsIHJvbGV9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBzdHJhdGVneUF1dG8gPSByb2xlLnN0cmF0ZWd5ID09PSAnYWRhcHRpdmUnO1xuICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImF0dHJMaXN0IGF0dHJpYnV0ZVBhbmVsXCI+XG4gICAgICA8Rm9ybSBvbkNoYW5nZT17dGhpcy5jaGFuZ2VGb3JtLmJpbmQodGhpcyl9PlxuICAgICAgICA8Rm9ybS5JdGVtIGxhYmVsPVwi5ZCN56ewXCI+XG4gICAgICAgICAgPElucHV0IG5hbWU9XCJuYW1lXCIgcmVhZE9ubHk9e3RydWV9IHZhbHVlPXt0aGlzLnN0YXRlLm5hbWV9Lz5cbiAgICAgICAgPC9Gb3JtLkl0ZW0+XG4gICAgICAgIDxGb3JtLkl0ZW0gbGFiZWw9XCLliIbnsbtcIj5cbiAgICAgICAgICA8SW5wdXQgbmFtZT1cImNhdGVnb3J5XCIgcmVhZE9ubHk9e3RydWV9IHZhbHVlPXt0aGlzLnN0YXRlLmNhdGVnb3J5IHx8ICdVTktOT1dOJ30vPlxuICAgICAgICA8L0Zvcm0uSXRlbT5cbiAgICAgICAgPEZvcm0uSXRlbSBsYWJlbD1cIm1vZGVsXCI+XG4gICAgICAgICAgPElucHV0IG5hbWU9XCJtb2RlbFwiIHJlYWRPbmx5PXt0cnVlfSB2YWx1ZT17cm9sZS5tb2RlbCB8fCAnVU5LTk9XTid9Lz5cbiAgICAgICAgPC9Gb3JtLkl0ZW0+XG4gICAgICAgIDxGb3JtLkl0ZW0gbGFiZWw9XCLplb/lrr3pq5gobSko5Y+q6IO96L6T5YWl5pWw5YC85Z6LKVwiPlxuICAgICAgICAgIDxJbnB1dCBzdHlsZT17e3dpZHRoOiAnNzBweCd9fSBodG1sVHlwZT1cIm51bWJlclwiIG1pbj17MH0gbmFtZT1cImxlbmd0aFwiIHZhbHVlPXthcHBlYXJhbmNlLmxlbmd0aH0vPlxuICAgICAgICAgIDxJbnB1dCBzdHlsZT17e3dpZHRoOiAnNzBweCd9fSBodG1sVHlwZT1cIm51bWJlclwiIG1pbj17MH0gbmFtZT1cIndpZHRoXCIgdmFsdWU9e2FwcGVhcmFuY2Uud2lkdGh9Lz5cbiAgICAgICAgICA8SW5wdXQgc3R5bGU9e3t3aWR0aDogJzcwcHgnfX0gaHRtbFR5cGU9XCJudW1iZXJcIiBtaW49ezB9IG5hbWU9XCJoZWlnaHRcIiB2YWx1ZT17YXBwZWFyYW5jZS5oZWlnaHR9Lz5cbiAgICAgICAgPC9Gb3JtLkl0ZW0+XG4gICAgICAgIDxGb3JtLkl0ZW0gbGFiZWw9XCLmnIDlpKfliqDpgJ/luqYobS9zXjIpKOWPquiDvei+k+WFpeaVsOWAvOWeiylcIj5cbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmNhdGVnb3J5ID09PSAnVU5LTk9XTicgP1xuICAgICAgICAgICAgICA8SW5wdXQgbmFtZT1cIm1heF9hY2NlbGVyYXRpb25cIiBtaW49ezB9IG1heD17NTB9IHBsYWNlaG9sZGVyPVwi5Y+q6IO96L6T5YWl5pWw5YC85Z6LXCIgcmVhZE9ubHk9e3RydWV9IGh0bWxUeXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXswfS8+IDpcbiAgICAgICAgICAgICAgPElucHV0IG5hbWU9XCJtYXhfYWNjZWxlcmF0aW9uXCIgbWluPXswfSBtYXg9ezUwfSBwbGFjZWhvbGRlcj1cIuWPquiDvei+k+WFpeaVsOWAvOWei1wiIGh0bWxUeXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXttb3ZlbWVudC5tYXhfYWNjZWxlcmF0aW9uIHx8IDB9Lz5cbiAgICAgICAgICB9XG4gICAgICAgIDwvRm9ybS5JdGVtPlxuICAgICAgICA8Rm9ybS5JdGVtIGxhYmVsPVwi5pyA5aSn6KeS6YCf5bqmKHJhZC9zKVwiPlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUuY2F0ZWdvcnkgPT09ICdVTktOT1dOJyA/XG4gICAgICAgICAgICAgIDxJbnB1dCBuYW1lPVwibWF4X3R1cm5cIiBtaW49ezB9IG1heD17NTB9IHJlYWRPbmx5PXt0cnVlfSBwbGFjZWhvbGRlcj1cIuWPquiDvei+k+WFpeaVsOWAvOWei1wiIGh0bWxUeXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXswfS8+IDpcbiAgICAgICAgICAgICAgPElucHV0IG5hbWU9XCJtYXhfdHVyblwiIG1pbj17MH0gbWF4PXs1MH0gcGxhY2Vob2xkZXI9XCLlj6rog73ovpPlhaXmlbDlgLzlnotcIiBodG1sVHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bW92ZW1lbnQubWF4X3R1cm4gfHwgMH0vPlxuICAgICAgICAgIH1cblxuICAgICAgICA8L0Zvcm0uSXRlbT5cbiAgICAgICAgPFNwZWVkXG4gICAgICAgICAgcmVmPVwic3BlZWRcIlxuICAgICAgICAgIHNwZWVkPXttb3ZlbWVudC5tYXhfc3BlZWR9XG4gICAgICAgICAgdW5rbm93PXt0aGlzLnN0YXRlLmNhdGVnb3J5ID09PSAnVU5LTk9XTid9XG4gICAgICAgICAgZm9ybUxheW91dD17e1xuICAgICAgICAgICAgbGFiZWxBbGlnbjogJ3RvcCcsXG4gICAgICAgICAgICB3cmFwcGVyQ29sOiB7c3BhbjogMjB9LFxuICAgICAgICAgICAgbGFiZWxDb2w6IHtzcGFuOiA1fVxuICAgICAgICAgIH19XG4gICAgICAgICAgZGVmYXVsdFNwZWVkcz17bW92ZW1lbnQuZGVmYXVsdFNwZWVkc31cbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vblNwZWVkQ2hhbmdlLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgPEZvcm0uSXRlbSBsYWJlbD1cIumAn+W6pui/vei4qlwiPlxuICAgICAgICAgIDxTd2l0Y2ggc3R5bGU9e3t3aWR0aDogMTAwfX0gbmFtZT1cImF1dG9cIiBjaGVja2VkPXtzdHJhdGVneUF1dG99IGRpc2FibGVkPXt0cnVlfSBjaGVja2VkQ2hpbGRyZW49XCLlvIDlkK9cIlxuICAgICAgICAgICAgICAgICAgdW5DaGVja2VkQ2hpbGRyZW49XCLlhbPpl61cIi8+XG4gICAgICAgIDwvRm9ybS5JdGVtPlxuICAgICAgICB7c3RyYXRlZ3lBdXRvID9cbiAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8U3BlZWRcbiAgICAgICAgICAgICAgcmVmPVwic3BlZWRwXCJcbiAgICAgICAgICAgICAgbGFiZWw9XCLpgJ/luqblgY/np7vlgLxcIlxuICAgICAgICAgICAgICBzcGVlZD17cm9sZS5vZmZzZXR9XG4gICAgICAgICAgICAgIGZvcm1MYXlvdXQ9e3tcbiAgICAgICAgICAgICAgICBsYWJlbEFsaWduOiAndG9wJyxcbiAgICAgICAgICAgICAgICB3cmFwcGVyQ29sOiB7c3BhbjogMjB9LFxuICAgICAgICAgICAgICAgIGxhYmVsQ29sOiB7c3BhbjogNX1cbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgZGVmYXVsdFNwZWVkcz17cm9sZS5vZmZzZXR9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uU3BlZWRQQ2hhbmdlLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PiA6ICcnXG4gICAgICAgIH1cbiAgICAgIDwvRm9ybT5cblxuICAgIDwvZGl2PjtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5uYW1lICYmIHRoaXMuc3RhdGUubmFtZSAhPT0gJ3hnJyAmJiB0aGlzLm9iamVjdC5yb2xlLm5hbWUgIT09ICdncGx1cycpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlckF0dHIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBCdXR0b24gZnJvbSAnQGFsaWZlL25leHQvbGliL2J1dHRvbic7XG5pbXBvcnQgSWNvbiBmcm9tICdAYWxpZmUvbmV4dC9saWIvaWNvbic7XG5pbXBvcnQgU3RhcnRHb2FsUGFuZWwgZnJvbSAnLi9TdGFydEdvYWxQYW5lbCc7XG5pbXBvcnQgR29hbFBhbmVsIGZyb20gJy4vR29hbFBhbmVsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW92ZVBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoY2ZnKSB7XG4gICAgc3VwZXIoY2ZnKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdGhpbmc6IHt9LFxuICAgICAgZ29hbDoge30sXG4gICAgICBnb2FsSW5kZXg6IDBcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdGNoYW5nZScsIChlKSA9PiB7Ly/liIfmjaLpgInmi6lcbiAgICAgIGNvbnN0IG1lc2ggPSBlLm1lc2g7XG4gICAgICBjb25zdCBzY2hlbWEgPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm9iamVjdHNbbWVzaC51c2VyRGF0YS5uYW1lXTtcbiAgICAgIGNvbnN0IGdvYWwgPSBzY2hlbWEuZ29hbDtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBvYmplY3Q6IHNjaGVtYSxcbiAgICAgICAgZ29hbEluZGV4OiAnc3RhcnQnLFxuICAgICAgICB0aGluZzogbWVzaCxcbiAgICAgICAgZ29hbDogZ29hbFxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdFRhcmdldFBvaW50JywgKGUpID0+IHsvL3hn55uu5qCH54K56YCJ5LitXG4gICAgICBjb25zdCBwb2ludCA9IGUubWVzaDtcbiAgICAgIGNvbnN0IHtnb2FsSW5kZXgsIHBvaW50SW5kZXh9ID0gcG9pbnQudXNlckRhdGE7XG4gICAgICB0aGlzLnNldFN0YXRlKHtnb2FsSW5kZXgsIHBvaW50SW5kZXh9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlUG9pbnQnLCBlID0+IHsvL+eCueeahOS9jee9ruWPkeeUn+aUueWPmFxuICAgICAgdGhpcy51cGRhdGVQb2ludFBvc2l0aW9uKGUpO1xuICAgIH0pO1xuICB9XG5cbiAgLy/ngrnnmoTkvY3nva7mm7TmlrDml7bvvIzmm7TmlrDop4blm75cbiAgdXBkYXRlUG9pbnRQb3NpdGlvbihlKSB7XG4gICAgY29uc3QgcG9pbnQgPSBlLnBvaW50O1xuICAgIGNvbnN0IHRoaW5nID0gcG9pbnQudXNlckRhdGEudGhpbmc7XG4gICAgY29uc3Qgb2JqZWN0ID0gd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5vYmplY3RzW3RoaW5nLnVzZXJEYXRhLm5hbWVdO1xuICAgIGNvbnN0IGdvYWxJbmRleCA9IHBvaW50LnVzZXJEYXRhLmdvYWxJbmRleDtcbiAgICBjb25zdCBwb2ludEluZGV4ID0gcG9pbnQudXNlckRhdGEucG9pbnRJbmRleDtcbiAgICBpZiAoZ29hbEluZGV4ID09PSAnc3RhcnQnKSB7Ly/otbfngrlcbiAgICAgIGlmIChvYmplY3Quc3RhcnRQb2ludFR5cGUgPT09ICdhcmVhJykge1xuICAgICAgICBvYmplY3QuaW5pdGxvY2F0aW9uWzFdID0gZS5jb29yZDtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoey8v5pS55Y+Y5Yy65Z+fXG4gICAgICAgICAgdHlwZTogJ2FkZEFyZWEnLFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHRoaW5nOiB0aGluZyxcbiAgICAgICAgICAgIGluZGV4OiAnc3RhcnQnLFxuICAgICAgICAgICAgbG9jYXRpb246IG9iamVjdC5pbml0bG9jYXRpb24sXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAob2JqZWN0LnN0YXJ0UG9pbnRUeXBlID09PSAnbXVsdGknKSB7XG4gICAgICAgIG9iamVjdC5pbml0bG9jYXRpb25bcG9pbnRJbmRleF0gPSBlLmNvb3JkO1xuICAgICAgfVxuICAgIH0gZWxzZSB7Ly/nm67moIfngrlcbiAgICAgIG9iamVjdC5nb2FsLnNjcmlwdFtnb2FsSW5kZXhdLmxvY2F0aW9uW3BvaW50SW5kZXhdID0gZS5jb29yZDtcbiAgICAgIGlmIChvYmplY3QudHlwZSA9PT0gJ2FyZWEnKSB7XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHsvL+aUueWPmOWMuuWfn1xuICAgICAgICAgIHR5cGU6ICdhZGRBcmVhJyxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICB0aGluZzogdGhpbmcsXG4gICAgICAgICAgICBrZXk6IGdvYWxJbmRleCxcbiAgICAgICAgICAgIGxvY2F0aW9uOiBvYmplY3QuZ29hbC5zY3JpcHRbZ29hbEluZGV4XS5sb2NhdGlvbixcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoey8v6YeN57uY57q/XG4gICAgICAgICAgdHlwZTogJ3VwZGF0ZUxpbmUnLFxuICAgICAgICAgIG1lc2g6IHRoaW5nXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5Lm1vZGlmeU9iamVjdChvYmplY3QpO1xuICAgIGlmICh0aGlzLnN0YXRlLm9iamVjdCAmJiAodGhpcy5zdGF0ZS5vYmplY3QubmFtZSA9PT0gb2JqZWN0Lm5hbWUpKSB7Ly/mm7TmlrBwYW5lbFxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG9iamVjdDogb2JqZWN0XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvL+aUueWPmGdvYWznmoTlgLxcbiAgb25Hb2FsQ2hhbmdlKGdvYWwpIHtcbiAgICBjb25zdCB7dGhpbmcsIGdvYWxJbmRleH0gPSB0aGlzLnN0YXRlO1xuICAgIC8v5L+u5pS5c2NoZW1hXG4gICAgY29uc3Qgb2JqZWN0ID0gd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5vYmplY3RzW3RoaW5nLnVzZXJEYXRhLm5hbWVdO1xuICAgIG9iamVjdC5nb2FsLnNjcmlwdFtnb2FsSW5kZXhdID0gZ29hbDtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuaGlzdG9yeS5tb2RpZnlPYmplY3Qob2JqZWN0KTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG9iamVjdDogb2JqZWN0LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOWIneWni+eCueWPmOWMllxuICAgKi9cbiAgb25TdGFydFBvaW50Q2hhbmdlKG9iamVjdCkge1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5Lm1vZGlmeU9iamVjdChvYmplY3QpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgb2JqZWN0OiBvYmplY3RcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmlrDlop7nm67moIdcbiAgICovXG4gIGFkZEdvYWwoKSB7XG4gICAgY29uc3Qge29iamVjdH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGdvYWxJbmRleCA9IHRoaXMuc3RhdGUub2JqZWN0LmdvYWwuc2NyaXB0Lmxlbmd0aDtcbiAgICBvYmplY3QuZ29hbC5zY3JpcHRbZ29hbEluZGV4XSA9IHtsb2NhdGlvbjogW3t4OiAwLCB5OiAwLCB6OiAwfV0sIHR5cGU6ICdzaW5nbGUnfTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG9iamVjdCxcbiAgICAgIGdvYWxJbmRleDogZ29hbEluZGV4XG4gICAgfSk7XG4gIH1cblxuICBkZWxHb2FsKGluZGV4KSB7XG4gICAgZGVsZXRlIHRoaXMuc3RhdGUub2JqZWN0LmdvYWwuc2NyaXB0W2luZGV4XTtcbiAgICB0aGlzLmNsZWFyTWVzaHMoaW5kZXgpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZ29hbEluZGV4OiAnc3RhcnQnXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICog5riF6Zmk5YaX5L2Z55qETWVzaFxuICAgKi9cbiAgY2xlYXJNZXNocyhnb2FsSW5kZXgpIHtcbiAgICBjb25zdCB0aGluZyA9IHRoaXMuc3RhdGUudGhpbmc7XG4gICAgY29uc3QgcGlnZW9uTWFwID0gd2luZG93Lmdsb2JhbFN0YXRlLndhdGNoTWFwLnBpZ2Vvbk1hcDtcbiAgICAvL+a4hemZpOWOn+WFiOaJgOacieeahOeCuVxuICAgIGlmICh0aGluZy5wb2ludHMpIHtcbiAgICAgIHRoaW5nLnBvaW50cy5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgaWYgKGl0ZW0udXNlckRhdGEuZ29hbEluZGV4ID09PSBnb2FsSW5kZXgpIHtcbiAgICAgICAgICBwaWdlb25NYXAucmVtb3ZlKGl0ZW0ucGFyZW50KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyAgdGhpbmcucG9pbnRzID0gW3RoaW5nLnBvaW50c1swXV07XG4gICAgfVxuICAgIC8v5riF6Zmk5Y6f5YWI55qEYXJlYVxuICAgIGlmICh0aGluZy5hcmVhcyAmJiB0aGluZy5hcmVhc1tnb2FsSW5kZXhdKSB7XG4gICAgICB0aGluZy5hcmVhc1tnb2FsSW5kZXhdLmdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICAgIHBpZ2Vvbk1hcC5yZW1vdmUodGhpbmcuYXJlYXNbZ29hbEluZGV4XSk7XG4gICAgICB0aGluZy5hcmVhc1tnb2FsSW5kZXhdID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBjaGFuZ2VHb2FsKGluZGV4KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBnb2FsSW5kZXg6IGluZGV4XG4gICAgfSk7XG4gIH1cblxuICAvL+a4suafk3RhYlxuICByZW5kZXJUYWIoKSB7XG4gICAgY29uc3Qge29iamVjdCwgdGhpbmcsIGdvYWxJbmRleH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdvYWwtbGlzdFwiPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgPGxpIGNsYXNzTmFtZT17Z29hbEluZGV4ID09PSAnc3RhcnQnID8gJ2FjdGl2ZScgOiAnJ30gb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VHb2FsKCdzdGFydCcpXG4gICAgICAgICAgfX0+6LW354K5XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmdvYWwuc2NyaXB0ICYmIHRoaXMuc3RhdGUuZ29hbC5zY3JpcHQubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gPGxpIGtleT17aW5kZXh9IG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUdvYWwoaW5kZXgpXG4gICAgICAgICAgICAgIH19IGNsYXNzTmFtZT17Z29hbEluZGV4ID09PSBpbmRleCA/ICdhY3RpdmUnIDogJyd9PlxuICAgICAgICAgICAgICAgIDxzcGFuPue7iOeCuXtpbmRleH08L3NwYW4+PEljb24gdHlwZT1cImFzaGJpblwiIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRlbEdvYWwoaW5kZXgpXG4gICAgICAgICAgICAgIH19Lz5cbiAgICAgICAgICAgICAgPC9saT47XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cbiAgICAgICAgPC91bD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhZGQtZ29hbC1idXR0b25cIj5cbiAgICAgICAgICA8QnV0dG9uIHNpemU9XCJzbWFsbFwiIG9uQ2xpY2s9e3RoaXMuYWRkR29hbC5iaW5kKHRoaXMpfSB0eXBlPVwicHJpbWFyeVwiPisg5paw5aKe55uu5qCH54K5PC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8U3RhcnRHb2FsUGFuZWwgdmlzaWJsZT17Z29hbEluZGV4ID09PSAnc3RhcnQnfSBvbkNoYW5nZT17dGhpcy5vblN0YXJ0UG9pbnRDaGFuZ2UuYmluZCh0aGlzKX0gb2JqZWN0PXtvYmplY3R9XG4gICAgICAgICAgICAgICAgICAgICAgdGhpbmc9e3RoaW5nfS8+XG4gICAgICA8R29hbFBhbmVsIHZpc2libGU9e2dvYWxJbmRleCAhPT0gJ3N0YXJ0J30gb25DaGFuZ2U9e3RoaXMub25Hb2FsQ2hhbmdlLmJpbmQodGhpcyl9IHRoaW5nPXt0aGluZ31cbiAgICAgICAgICAgICAgICAgZ29hbEluZGV4PXtnb2FsSW5kZXh9IG9iamVjdD17b2JqZWN0fS8+XG4gICAgPC9SZWFjdC5GcmFnbWVudD47XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwibW92ZVBhbmVsXCI+XG4gICAgICB7dGhpcy5zdGF0ZS5vYmplY3QgPyB0aGlzLnJlbmRlclRhYigpIDogJyd9XG4gICAgPC9kaXY+O1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdAYWxpZmUvbmV4dC9saWIvc2VsZWN0JztcbmltcG9ydCBUYWIgZnJvbSAnQGFsaWZlL25leHQvbGliL3RhYic7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9idXR0b24nO1xuLy8gaW1wb3J0IE51bWJlclBpY2tlciBmcm9tICdAYWxpZmUvbmV4dC9saWIvbnVtYmVyLXBpY2tlcic7XG5pbXBvcnQgSWNvbiBmcm9tICdAYWxpZmUvbmV4dC9saWIvaWNvbic7XG5cbi8qKlxuICogc2NoZW1hXG4gKlxuICogb2JqZWN0OntcbiAqICAgICBpbml0bG9jYXRpb246e3gseSx6fSxcbiAqICAgICBpbml0bG9jYXRpb246W3t9LHt9XSxcbiAqICAgICBpbml0bG9jYXRpb246e2xlZnQ6e30scmlnaHQ6e319LFxuICogfVxuICpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhcnRHb2FsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoY2ZnKSB7XG4gICAgc3VwZXIoY2ZnKTtcbiAgICB0aGlzLmRvdE9wdGlvbnMgPSBbXG4gICAgICB7bGFiZWw6ICfljZXngrknLCB2YWx1ZTogJ3NpbmdsZSd9LFxuICAgICAge2xhYmVsOiAn5Yy65Z+f6ZqP5py6JywgdmFsdWU6ICdhcmVhJ30sXG4gICAgICB7bGFiZWw6ICflpJrngrnpmo/mnLonLCB2YWx1ZTogJ211bHRpJ31cbiAgICBdO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzdGFydEZ1enppbmc6IGZhbHNlLFxuICAgICAgcG9pbnRzOiBbe3g6IDAsIHk6IDAsIHo6IDB9XSxcbiAgICB9O1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5saXN0ZW5TdGFydFBvc2l0aW9uQ2hhbmdlKCk7XG4gIH1cblxuICBsaXN0ZW5TdGFydFBvc2l0aW9uQ2hhbmdlKCkge1xuICAgIC8v5pS55Y+Y5Yid5aeL5L2N572u5oiW6ICF5L2N5ae/XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZXRoaW5nJywgKGUpID0+IHtcbiAgICAgIGlmICh0aGlzLm9iamVjdC5uYW1lICE9PSBlLm1lc2gudXNlckRhdGEubmFtZSkgcmV0dXJuO1xuICAgICAgaWYgKGUubW9kZSA9PT0gJ3RyYW5zbGF0ZScpIHsvL+ehruiupOaYr+W9k+WJjemAieS4reeahOeJqeS9k+WPkeeUn+WPmOWMllxuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5wcm9wcy5vYmplY3QubmFtZTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEub2JqZWN0c1tuYW1lXTtcbiAgICAgICAgY29uc3QgcG9zaXRpb24gPSBlLm1lc2gucGFyZW50LnBvc2l0aW9uOy8v54i25YWD57Sg55qE5L2N5ae/XG4gICAgICAgIGRhdGEuaW5pdGxvY2F0aW9uWzBdID0gcG9zaXRpb247XG4gICAgICAgIGlmICh0aGlzLm9iamVjdC5zdGFydFBvaW50VHlwZSA9PT0gJ2FyZWEnKSB7XG4gICAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoey8v5pS55Y+Y5Yy65Z+fXG4gICAgICAgICAgICB0eXBlOiAnYWRkQXJlYScsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgIHRoaW5nOiB0aGlzLnByb3BzLnRoaW5nLFxuICAgICAgICAgICAgICBpbmRleDogJ3N0YXJ0JyxcbiAgICAgICAgICAgICAgbG9jYXRpb246IGRhdGEuaW5pdGxvY2F0aW9uLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZGF0YSk7XG4gICAgICB9IGVsc2UgaWYgKGUubW9kZSA9PT0gJ3JvdGF0ZScpIHtcbiAgICAgICAgY29uc3QgeiA9IGUubWVzaC5wYXJlbnQucm90YXRpb24uejtcbiAgICAgICAgdGhpcy5vYmplY3QuaW5pdG9yaWVudCA9IFswLCAwLCB6IHx8IDBdO1xuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMub2JqZWN0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvL+a3u+WKoOeCuVxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUuY29vcmQ7XG4gICAgICBjb25zdCBvYmplY3QgPSB0aGlzLm9iamVjdDtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGluZykge1xuICAgICAgICBpZiAodGhpcy5vYmplY3Quc3RhcnRQb2ludFR5cGUgPT09ICdhcmVhJykgey8v5Yy65Z+fXG4gICAgICAgICAgb2JqZWN0LmluaXRsb2NhdGlvblsxXSA9IGNvb3JkO1xuICAgICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHsvL+a3u+WKoOaIluiAhemHjeWbnuWMuuWfn1xuICAgICAgICAgICAgdHlwZTogJ2FkZEFyZWEnLFxuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICB0aGluZzogdGhpcy5wcm9wcy50aGluZyxcbiAgICAgICAgICAgICAgaW5kZXg6ICdzdGFydCcsXG4gICAgICAgICAgICAgIGxvY2F0aW9uOiBvYmplY3QuaW5pdGxvY2F0aW9uLFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Ugey8v5aSa54K5XG4gICAgICAgICAgb2JqZWN0LmluaXRsb2NhdGlvblt0aGlzLnNlbGVjdGluZ10gPSBjb29yZDtcbiAgICAgICAgfVxuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgICAgdHlwZTogJ2FkZFN0YXJ0UG9pbnQnLFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHRoaW5nOiB0aGlzLnByb3BzLnRoaW5nLFxuICAgICAgICAgICAgcG9pbnRJbmRleDogdGhpcy5zZWxlY3RpbmcsXG4gICAgICAgICAgICBsb2NhdGlvbjogY29vcmQsXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShvYmplY3QpO1xuICAgICAgICB0aGlzLnRvZ2dsZUNyb3NzTW91c2UoKTtcbiAgICAgICAgdGhpcy5zZWxlY3RpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICB9XG5cbiAgLyoqXG4gICAqIOabtOaUueeCueeahOexu+Wei1xuICAgKi9cbiAgY2hhbmdlRG90VHlwZSh0eXBlKSB7XG4gICAgdGhpcy5vYmplY3Quc3RhcnRQb2ludFR5cGUgPSB0eXBlO1xuICAgIGNvbnN0IG5vd0xvY2F0aW9uID0gdGhpcy5wcm9wcy50aGluZy5wYXJlbnQucG9zaXRpb247XG4gICAgY29uc3QgaW5pdGxvY2F0aW9uID0gW25vd0xvY2F0aW9uXTtcbiAgICB0aGlzLm9iamVjdC5pbml0bG9jYXRpb24gPSBpbml0bG9jYXRpb247XG4gICAgdGhpcy5jbGVhck1lc2hzKCk7XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh0aGlzLm9iamVjdCk7XG4gIH1cblxuICBjaGFuZ2VOdW1iZXJzKG51bSkge1xuICAgIHRoaXMub2JqZWN0Lm51bWJlcnMgPSBudW07XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh0aGlzLm9iamVjdCk7XG4gIH1cblxuICAvL+a4hemZpOinhuWbvuaXoOeUqOeahG1lc2hcbiAgY2xlYXJNZXNocygpIHtcbiAgICBjb25zdCB7dGhpbmd9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWdlb25NYXAgPSB3aW5kb3cuZ2xvYmFsU3RhdGUud2F0Y2hNYXAucGlnZW9uTWFwO1xuICAgIC8v5riF6Zmk5Y6f5YWI5omA5pyJ55qE54K5XG4gICAgaWYgKHRoaW5nLnN0YXJ0UG9pbnRzKSB7XG4gICAgICB0aGluZy5zdGFydFBvaW50cy5tYXAoaXRlbSA9PiBwaWdlb25NYXAucmVtb3ZlKGl0ZW0ucGFyZW50KSk7XG4gICAgICB0aGluZy5zdGFydFBvaW50cyA9IFtdO1xuICAgIH1cbiAgICAvL+a4hemZpOWOn+WFiOeahGFyZWFcbiAgICBpZiAodGhpbmcuYXJlYXMgJiYgdGhpbmcuYXJlYXNbJ3N0YXJ0QXJlYSddKSB7XG4gICAgICB0aGluZy5hcmVhc1snc3RhcnRBcmVhJ10uZ2VvbWV0cnkuZGlzcG9zZSgpO1xuICAgICAgcGlnZW9uTWFwLnJlbW92ZSh0aGluZy5hcmVhc1snc3RhcnRBcmVhJ10pO1xuICAgICAgdGhpbmcuYXJlYXNbJ3N0YXJ0QXJlYSddID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog6YCJ5oup54K5XG4gICAqL1xuICBzZWxlY3RQb2ludCh0KSB7XG4gICAgdGhpcy5zZWxlY3RpbmcgPSB0O1xuICAgIHRoaXMudG9nZ2xlQ3Jvc3NNb3VzZSgpO1xuICB9XG5cbiAgLy/muLLmn5PpgInngrnljLrln59cbiAgcmVuZGVyRG90KCkge1xuICAgIGNvbnN0IHtvYmplY3R9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB0eXBlID0gb2JqZWN0LnN0YXJ0UG9pbnRUeXBlO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAnc2luZ2xlJzpcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwicG9zaXRpb24taW5mb1wiPlxuICAgICAgICAgIDxkaXY+PHNwYW4+WDwvc3Bhbj4ge29iamVjdC5pbml0bG9jYXRpb25bMF0ueC50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgIDxkaXY+PHNwYW4+WTwvc3Bhbj4ge29iamVjdC5pbml0bG9jYXRpb25bMF0ueS50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgIDxkaXY+PHNwYW4+Wjwvc3Bhbj4ge29iamVjdC5pbml0bG9jYXRpb25bMF0uei50b0ZpeGVkKDIpfSA8L2Rpdj5cbiAgICAgICAgPC9kaXY+O1xuICAgICAgY2FzZSAnYXJlYSc6XG4gICAgICAgIHJldHVybiB0aGlzLnJlbmRlckFyZWFEb3QoKTtcbiAgICAgIGNhc2UgJ211bHRpJzpcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyTXVsdGlEb3QoKTtcbiAgICAgIGRlZmF1bHQgOlxuXG4gICAgfVxuICB9XG5cbiAgLy/ljLrln5/pgInmi6lcbiAgcmVuZGVyQXJlYURvdCgpIHtcbiAgICBjb25zdCB7b2JqZWN0fSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgbGVmdCA9IG9iamVjdC5pbml0bG9jYXRpb25bMF0gfHwge307XG4gICAgY29uc3QgcmlnaHQgPSBvYmplY3QuaW5pdGxvY2F0aW9uWzFdIHx8IHt4OiAwLCB5OiAwLCB6OiAwfTtcbiAgICByZXR1cm4gPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3NpdGlvbi1pbmZvXCI+XG4gICAgICAgIDxkaXY+PHNwYW4+WDwvc3Bhbj4ge2xlZnQueC50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICA8ZGl2PjxzcGFuPlk8L3NwYW4+IHtsZWZ0LnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgPGRpdj48c3Bhbj5aPC9zcGFuPiB7bGVmdC56LnRvRml4ZWQoMil9IDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNob29zZS1wb3NpdGlvblwiPlxuICAgICAgICA8aSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RQb2ludCgxKVxuICAgICAgICB9fSBjbGFzc05hbWU9XCJldC1pY29uIGljb24tdmlld1wiPjwvaT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3NpdGlvbi1pbmZvXCI+XG4gICAgICAgICAgPGRpdj48c3Bhbj5YPC9zcGFuPiB7cmlnaHQueC50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgIDxkaXY+PHNwYW4+WTwvc3Bhbj4ge3JpZ2h0LnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2PjxzcGFuPlo8L3NwYW4+IHtyaWdodC56LnRvRml4ZWQoMil9IDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+O1xuICB9XG5cbiAgLy/lpJrngrnpgInmi6lcbiAgcmVuZGVyTXVsdGlEb3QoKSB7XG4gICAgY29uc3Qge29iamVjdH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGluaXRsb2NhdGlvbiA9IG9iamVjdC5pbml0bG9jYXRpb247XG4gICAgcmV0dXJuIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaWNvbi1iYXJcIj48SWNvbiBzaXplPVwic21hbGxcIiB0eXBlPVwiYWRkXCIgb25DbGljaz17KCkgPT4ge1xuICAgICAgICB0aGlzLnNlbGVjdFBvaW50KGluaXRsb2NhdGlvbi5sZW5ndGgpXG4gICAgICB9fSBzdHlsZT17e2ZvbnRTaXplOiAnMjRweCd9fS8+PC9kaXY+XG4gICAgICB7XG4gICAgICAgIGluaXRsb2NhdGlvbi5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgbGV0IHJlcztcbiAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIHJlcyA9IDxkaXYgY2xhc3NOYW1lPVwicG9zaXRpb24taW5mb1wiIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlg8L3NwYW4+IHtpdGVtLngudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj48c3Bhbj5ZPC9zcGFuPiB7aXRlbS55LnRvRml4ZWQoMil9PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXY+PHNwYW4+Wjwvc3Bhbj4ge2l0ZW0uei50b0ZpeGVkKDIpfSA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzID0gPGRpdiBjbGFzc05hbWU9XCJjaG9vc2UtcG9zaXRpb25cIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgPGkgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0UG9pbnQoaW5kZXgpXG4gICAgICAgICAgICAgIH19IGNsYXNzTmFtZT1cImV0LWljb24gaWNvbi12aWV3XCIvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc2l0aW9uLWluZm9cIj5cbiAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlg8L3NwYW4+IHtpdGVtLngudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlk8L3NwYW4+IHtpdGVtLnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlo8L3NwYW4+IHtpdGVtLnoudG9GaXhlZCgyKX0gPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9KVxuICAgICAgfVxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+O1xuICB9XG5cbiAgLyoqXG4gICAqIOWIh+aNoum8oOagh+agt+W8j1xuICAgKi9cbiAgdG9nZ2xlQ3Jvc3NNb3VzZSgpIHtcbiAgICBjb25zdCBzdHVkaW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubS1zdHVkaW8nKTtcbiAgICBpZiAoc3R1ZGlvLmNsYXNzTmFtZSAhPT0gJ20tc3R1ZGlvIGNyb3NzaGFpcicpIHtcbiAgICAgIHN0dWRpby5jbGFzc05hbWUgPSAnbS1zdHVkaW8gY3Jvc3NoYWlyJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R1ZGlvLmNsYXNzTmFtZSA9ICdtLXN0dWRpbyc7XG4gICAgfVxuICB9XG5cbiAgLy/muLLmn5NcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtvYmplY3QsIHZpc2libGV9ID0gdGhpcy5wcm9wcztcbiAgICB0aGlzLm9iamVjdCA9IHRoaXMucHJvcHMub2JqZWN0Oy8v6K6w5b2V5b2T5YmN55qEb2JqZWN0XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwic3RhcnRHb2FsQ29uZmlnXCIgc3R5bGU9e3tkaXNwbGF5OiAhdmlzaWJsZSA/ICdub25lJyA6ICdibG9jayd9fT5cbiAgICAgIDxUYWI+XG4gICAgICAgIDxUYWIuSXRlbSB0aXRsZT1cIui1t1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ29hbC1jb250ZW50XCI+XG4gICAgICAgICAgICB7IXRoaXMuc3RhdGUuc3RhcnRGdXp6aW5nICYmIHRoaXMub2JqZWN0LnN0YXJ0UG9pbnRUeXBlID09PSAnc2luZ2xlJyA/XG4gICAgICAgICAgICAgICg8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnb2FsLWFuZ2xlXCI+PHNwYW4+6KeS5bqmPC9zcGFuPnt0aGlzLm9iamVjdC5pbml0b3JpZW50WzJdfTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zaXRpb24taW5mb1wiPlxuICAgICAgICAgICAgICAgICAgPGRpdj48c3Bhbj5YPC9zcGFuPiB7b2JqZWN0LmluaXRsb2NhdGlvblswXS54LnRvRml4ZWQoMil9PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlk8L3NwYW4+IHtvYmplY3QuaW5pdGxvY2F0aW9uWzBdLnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXY+PHNwYW4+Wjwvc3Bhbj4ge29iamVjdC5pbml0bG9jYXRpb25bMF0uei50b0ZpeGVkKDIpfSA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7Lyo8ZGl2IGNsYXNzTmFtZT1cImZ1enppbmctYnV0dG9uXCI+Ki99XG4gICAgICAgICAgICAgICAgICB7Lyo8QnV0dG9uKi99XG4gICAgICAgICAgICAgICAgICAgIHsvKnR5cGU9XCJwcmltYXJ5XCIqL31cbiAgICAgICAgICAgICAgICAgICAgey8qb25DbGljaz17KCkgPT4gdGhpcy5zZXRTdGF0ZSh7c3RhcnRGdXp6aW5nOiB0cnVlfSl9PiovfVxuICAgICAgICAgICAgICAgICAgICB7LyrkuIflkJHorr7nva4qL31cbiAgICAgICAgICAgICAgICAgIHsvKjwvQnV0dG9uPiovfVxuICAgICAgICAgICAgICAgIHsvKjwvZGl2PiovfVxuICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PikgOlxuICAgICAgICAgICAgICAoPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ29hbC10aXRsZVwiPuaooeWei+S9jee9rui1t+eCuTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ29hbC1hbmdsZVwiPjxzcGFuPuinkuW6pjwvc3Bhbj57dGhpcy5vYmplY3QuaW5pdG9yaWVudFsyXX08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInR5cGUtc2VsZWN0XCI+PHNwYW4+57G75Z6LPC9zcGFuPiAmbmJzcDtcbiAgICAgICAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuY2hhbmdlRG90VHlwZS5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgICAgICBkYXRhU291cmNlPXt0aGlzLmRvdE9wdGlvbnN9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtvYmplY3Quc3RhcnRQb2ludFR5cGV9Lz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdvYWwtcG9pbnRzXCI+XG4gICAgICAgICAgICAgICAgICB7dGhpcy5yZW5kZXJEb3QoKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZ1enppbmctYnV0dG9uIGFjdGl2ZVwiPlxuICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe3N0YXJ0RnV6emluZzogZmFsc2V9KVxuICAgICAgICAgICAgICAgICAgfX0+6L+U5Zue5qih5Z6L5L2N572u6LW354K5IDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50Pil9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvVGFiLkl0ZW0+XG4gICAgICAgIHsvKjxUYWIuSXRlbSB0aXRsZT1cIuetllwiPiovfVxuICAgICAgICB7Lyo8ZGl2IGNsYXNzTmFtZT1cImZ1enppbmctbnVtYmVyc1wiPiovfVxuICAgICAgICB7Lyo8bGFiZWw+5qyh5pWw77yaPC9sYWJlbD48TnVtYmVyUGlja2VyIHN0eWxlPXt7IHdpZHRoOiAxMDAgfX0gdmFsdWU9e29iamVjdC5udW1iZXJzfSBvbkNoYW5nZT17dGhpcy5jaGFuZ2VOdW1iZXJzLmJpbmQodGhpcyl9IC8+Ki99XG4gICAgICAgIHsvKjwvZGl2PiovfVxuICAgICAgICB7Lyo8L1RhYi5JdGVtPiovfVxuICAgICAgPC9UYWI+XG4gICAgPC9kaXY+O1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdAYWxpZmUvbmV4dC9saWIvc2VsZWN0JztcbmltcG9ydCBUYWIgZnJvbSAnQGFsaWZlL25leHQvbGliL3RhYic7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9idXR0b24nO1xuaW1wb3J0IFNwZWVkIGZyb20gJy4uL2NvbXBvbmVudC9zcGVlZC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdvYWxQYW5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKGNmZykge1xuICAgIHN1cGVyKGNmZyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGRvdFR5cGVzOiBbXG4gICAgICAgIHtsYWJlbDogJ+WNleeCuScsIHZhbHVlOiAnc2luZ2xlJ30sXG4gICAgICAgIHtsYWJlbDogJ+WMuuWfnycsIHZhbHVlOiAnYXJlYSd9LFxuICAgICAgICB7bGFiZWw6ICflpJrngrknLCB2YWx1ZTogJ211bHRpJ31cbiAgICAgIF0sXG4gICAgICBzdGFydFBvaW50OiBbXSxcbiAgICAgIHN0YXJ0RnV6emluZzogZmFsc2UsXG4gICAgICBkb3RUeXBlOiAnc2luZ2xlJyxcbiAgICAgIHBvaW50czogW3t4OiAwLCB5OiAwLCB6OiAwfV0sXG4gICAgfTtcbiAgICB0aGlzLnNlbGVjdGluZyA9IGZhbHNlOy8v5piv5ZCm5q2j5Zyo6YCJ54K5XG4gICAgdGhpcy5saXN0ZW5DaGFuZ2UoKTtcbiAgfVxuXG4gIFVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgc3RhcnRGdXp6aW5nOiBmYWxzZVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOebkeWQrOS6i+S7tlxuICAgKi9cbiAgbGlzdGVuQ2hhbmdlKCkge1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBjb25zdCBsb2NhdGlvbiA9IGUuY29vcmQ7XG4gICAgICBpZiAodGhpcy5zZWxlY3RpbmcgIT09IGZhbHNlKSB7XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5jb250cm9scy50YXJnZXRQb2ludENvbnRvcmwuZGV0YWNoKCk7XG4gICAgICAgIGNvbnN0IHBvaW50SW5kZXggPSB0aGlzLnNlbGVjdGluZztcbiAgICAgICAgLy/mm7TmlrBzY2hlbWFcbiAgICAgICAgdGhpcy5nb2FsLmxvY2F0aW9uW3BvaW50SW5kZXhdID0gbG9jYXRpb247XG4gICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UodGhpcy5nb2FsKTtcblxuICAgICAgICAvL+a3u+WKoOeCuVxuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgICAgdHlwZTogJ2FkZFBvaW50JyxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICB0aGluZzogdGhpcy5wcm9wcy50aGluZyxcbiAgICAgICAgICAgIHBvaW50SW5kZXg6IHBvaW50SW5kZXgsIC8vZ29hbOeahOesrOWHoOS4queCuVxuICAgICAgICAgICAgZ29hbEluZGV4OiB0aGlzLnByb3BzLmdvYWxJbmRleCwgLy/nrKzlh6DkuKpnb2FsXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8v5pu05paw5Yy65Z+fXG4gICAgICAgIGlmICh0aGlzLmdvYWwudHlwZSA9PT0gJ2FyZWEnKSB7XG4gICAgICAgICAgdGhpcy51cGRhdGVBcmVhKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZWxlY3RpbmcgPSBmYWxzZTtcbiAgICAgICAgLy/pvKDmoIflm57ljrtcbiAgICAgICAgdGhpcy5yZW1vdmVDcm9zc01vdXNlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLy/mm7TmlLnnm67moIfngrnnmoTkvY3nva7miJbogIXmnJ3lkJFcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlVGFyZ2V0UG9pbnQnLCAoZSkgPT4ge1xuICAgICAgY29uc3Qge21lc2h9ID0gZTtcbiAgICAgIGNvbnN0IG9yaWVudGF0aW9uID0gWzAsIDAsIG1lc2gucGFyZW50LnJvdGF0aW9uLnpdO1xuICAgICAgdGhpcy5nb2FsLm9yaWVudGF0aW9uID0gb3JpZW50YXRpb247XG4gICAgICB0aGlzLmdvYWwubG9jYXRpb25bbWVzaC51c2VyRGF0YS5wb2ludEluZGV4XSA9IG1lc2gucGFyZW50LnBvc2l0aW9uO1xuXG4gICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMuZ29hbCk7XG4gICAgICBpZiAodGhpcy5nb2FsLnR5cGUgPT09ICdhcmVhJykgey8v5Yy65Z+f55qE6K+d6KaB6YeN5paw57uY5Yi254K5XG4gICAgICAgIHRoaXMudXBkYXRlQXJlYSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy/op6blj5HljLrln5/ph43nu5jkuovku7ZcbiAgdXBkYXRlQXJlYSgpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnYWRkQXJlYScsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHRoaW5nOiB0aGlzLnByb3BzLnRoaW5nLFxuICAgICAgICBpbmRleDogdGhpcy5wcm9wcy5nb2FsSW5kZXgsXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLmdvYWwubG9jYXRpb25cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDmlLnlj5jnsbvlnotcbiAgICovXG4gIGNoYW5nZURvdFR5cGUodmFsdWUpIHtcbiAgICBjb25zdCBub3dMb2NhdGlvbiA9IHRoaXMuZ29hbC5sb2NhdGlvbjtcbiAgICB0aGlzLmdvYWwubG9jYXRpb24gPSBbbm93TG9jYXRpb25bMF1dO1xuICAgIHRoaXMuZ29hbC50eXBlID0gdmFsdWU7XG4gICAgdGhpcy5jbGVhck1lc2hzKCk7XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh0aGlzLmdvYWwpO1xuICB9XG5cbiAgLyoqXG4gICAqIOa4hemZpOWGl+S9meeahE1lc2hcbiAgICovXG4gIGNsZWFyTWVzaHMoKSB7XG4gICAgY29uc3Qge3RoaW5nLCBnb2FsSW5kZXh9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwaWdlb25NYXAgPSB3aW5kb3cuZ2xvYmFsU3RhdGUud2F0Y2hNYXAucGlnZW9uTWFwO1xuICAgIC8v5riF6Zmk5Y6f5YWI5omA5pyJ55qE54K5XG4gICAgaWYgKHRoaW5nLnBvaW50cykge1xuICAgICAgdGhpbmcucG9pbnRzLm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICBpZiAoaXRlbS51c2VyRGF0YS5wb2ludEluZGV4ICE9PSAwICYmIGl0ZW0udXNlckRhdGEuZ29hbEluZGV4ID09PSBnb2FsSW5kZXgpIHBpZ2Vvbk1hcC5yZW1vdmUoaXRlbS5wYXJlbnQpO1xuICAgICAgfSk7XG4gICAgICAvLyAgdGhpbmcucG9pbnRzID0gW3RoaW5nLnBvaW50c1swXV07XG4gICAgfVxuICAgIC8v5riF6Zmk5Y6f5YWI55qEYXJlYVxuICAgIGlmICh0aGluZy5hcmVhcyAmJiB0aGluZy5hcmVhc1tnb2FsSW5kZXhdKSB7XG4gICAgICB0aGluZy5hcmVhc1tnb2FsSW5kZXhdLmdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICAgIHBpZ2Vvbk1hcC5yZW1vdmUodGhpbmcuYXJlYXNbZ29hbEluZGV4XSk7XG4gICAgICB0aGluZy5hcmVhc1tnb2FsSW5kZXhdID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog5pu05pS554K555qE57G75Z6LXG4gICAqL1xuICBjaGFuZ2VOdW1iZXJzKHZhbHVlKSB7XG4gICAgdGhpcy5nb2FsLm51bWJlcnMgPSB2YWx1ZTtcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMuZ29hbCk7XG4gIH1cblxuICByZW5kZXJEb3QoKSB7XG4gICAgY29uc3QgZ29hbCA9IHRoaXMuZ29hbDtcbiAgICBzd2l0Y2ggKGdvYWwudHlwZSkge1xuICAgICAgY2FzZSAnc2luZ2xlJzpcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiY2hvb3NlLXBvc2l0aW9uXCI+XG4gICAgICAgICAgPGkgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RQb2ludCgwKVxuICAgICAgICAgIH19IGNsYXNzTmFtZT1cImV0LWljb24gaWNvbi12aWV3XCI+XG4gICAgICAgICAgPC9pPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zaXRpb24taW5mb1wiPlxuICAgICAgICAgICAgPGRpdj48c3Bhbj5YPC9zcGFuPiB7Z29hbC5sb2NhdGlvblswXS54LnRvRml4ZWQoMil9PC9kaXY+XG4gICAgICAgICAgICA8ZGl2PjxzcGFuPlk8L3NwYW4+IHtnb2FsLmxvY2F0aW9uWzBdLnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+PHNwYW4+Wjwvc3Bhbj4ge2dvYWwubG9jYXRpb25bMF0uei50b0ZpeGVkKDIpfSA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+O1xuICAgICAgY2FzZSAnYXJlYSc6XG4gICAgICAgIHJldHVybiB0aGlzLnJlbmRlckFyZWFEb3QoKTtcbiAgICAgIGNhc2UgJ211bHRpJzpcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyTXVsdGlEb3QoKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgfVxuICB9XG5cbiAgcmVuZGVyQXJlYURvdCgpIHtcbiAgICBjb25zdCBnb2FsID0gdGhpcy5nb2FsO1xuICAgIGNvbnN0IGxlZnQgPSBnb2FsLmxvY2F0aW9uWzBdIHx8IHt4OiAwLCB5OiAwLCB6OiAwfTtcbiAgICBjb25zdCByaWdodCA9IGdvYWwubG9jYXRpb25bMV0gfHwge3g6IDAsIHk6IDAsIHo6IDB9O1xuICAgIHJldHVybiA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNob29zZS1wb3NpdGlvblwiPlxuICAgICAgICA8aSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zZWxlY3RQb2ludCgwKVxuICAgICAgICB9fSBjbGFzc05hbWU9XCJldC1pY29uIGljb24tdmlld1wiPlxuICAgICAgICA8L2k+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zaXRpb24taW5mb1wiPlxuICAgICAgICAgIDxkaXY+PHNwYW4+WDwvc3Bhbj4ge2xlZnQueC50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgIDxkaXY+PHNwYW4+WTwvc3Bhbj4ge2xlZnQueS50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgIDxkaXY+PHNwYW4+Wjwvc3Bhbj4ge2xlZnQuei50b0ZpeGVkKDIpfSA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hvb3NlLXBvc2l0aW9uXCI+XG4gICAgICAgIDxpIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICB0aGlzLnNlbGVjdFBvaW50KDEpXG4gICAgICAgIH19IGNsYXNzTmFtZT1cImV0LWljb24gaWNvbi12aWV3XCI+XG4gICAgICAgIDwvaT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3NpdGlvbi1pbmZvXCI+XG4gICAgICAgICAgPGRpdj48c3Bhbj5YPC9zcGFuPiB7cmlnaHQueC50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgIDxkaXY+PHNwYW4+WTwvc3Bhbj4ge3JpZ2h0LnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICA8ZGl2PjxzcGFuPlo8L3NwYW4+IHtyaWdodC56LnRvRml4ZWQoMil9IDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+O1xuICB9XG5cbiAgcmVuZGVyTXVsdGlEb3QoKSB7XG4gICAgY29uc3QgZ29hbCA9IHRoaXMuZ29hbDtcbiAgICByZXR1cm4gPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEJ1dHRvbiBzaXplPVwic21hbGxcIiB0eXBlPVwicHJpbWFyeVwiIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgdGhpcy5zZWxlY3RQb2ludChnb2FsLmxvY2F0aW9uLmxlbmd0aClcbiAgICAgIH19IHN0eWxlPXt7Zm9udFNpemU6ICcyNHB4J319Pis8L0J1dHRvbj5cbiAgICAgIHtcbiAgICAgICAgZ29hbC5sb2NhdGlvbi5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIDxkaXYga2V5PXtpbmRleH0gY2xhc3NOYW1lPVwiY2hvb3NlLXBvc2l0aW9uXCI+XG4gICAgICAgICAgICA8aSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuc2VsZWN0UG9pbnQoaW5kZXgpXG4gICAgICAgICAgICB9fSBjbGFzc05hbWU9XCJldC1pY29uIGljb24tdmlld1wiLz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zaXRpb24taW5mb1wiPlxuICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlg8L3NwYW4+IHtpdGVtLngudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj48c3Bhbj5ZPC9zcGFuPiB7aXRlbS55LnRvRml4ZWQoMil9PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXY+PHNwYW4+Wjwvc3Bhbj4ge2l0ZW0uei50b0ZpeGVkKDIpfSA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PjtcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICA8L1JlYWN0LkZyYWdtZW50PjtcbiAgfVxuXG4gIC8qKlxuICAgKiDlnLDlm77pgInngrlcbiAgICovXG4gIHNlbGVjdFBvaW50KGtleSkge1xuICAgIHRoaXMuYWRkQ3Jvc3NNb3VzZSgpO1xuICAgIHRoaXMuc2VsZWN0aW5nID0ga2V5O1xuICB9XG5cbiAgYWRkQ3Jvc3NNb3VzZSgpIHtcbiAgICBjb25zdCBzdHVkaW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubS1zdHVkaW8nKTtcbiAgICBzdHVkaW8uY2xhc3NOYW1lID0gJ20tc3R1ZGlvIGNyb3NzaGFpcic7XG4gIH1cblxuICByZW1vdmVDcm9zc01vdXNlKCkge1xuICAgIGNvbnN0IHN0dWRpbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tLXN0dWRpbycpO1xuICAgIHN0dWRpby5jbGFzc05hbWUgPSAnbS1zdHVkaW8gJztcbiAgfVxuXG4gIG9uU3BlZWRDaGFuZ2UodiwgdHlwZSkge1xuICAgIHRoaXMuZ29hbC5zcGVlZCA9IHY7XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh0aGlzLmdvYWwpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtnb2FsSW5kZXgsIG9iamVjdH0gPSB0aGlzLnByb3BzOy8v6L6T5YWl5bGe5oCnXG4gICAgbGV0IGdvYWwgPSBvYmplY3QuZ29hbC5zY3JpcHRbZ29hbEluZGV4XTtcbiAgICBpZiAoIWdvYWwpIGdvYWwgPSB7Ly/liJ3lp4vljJbkuYjmnIlnb2FsXG4gICAgICB0eXBlOiAnc2luZ2xlJyxcbiAgICAgIG9yaWVudGF0aW9uOiBbMCwgMCwgMF0sXG4gICAgICBsb2NhdGlvbjogW3t4OiAwLCB5OiAwLCB6OiAwfV1cbiAgICB9O1xuICAgIHRoaXMuZ29hbCA9IGdvYWw7Ly/kv53lrZjmnIDmlrDnmoRnb2Fs55SoXG4gICAgY29uc3QgdmlzaWJsZSA9IHRoaXMucHJvcHMudmlzaWJsZTtcbiAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJzdGFydEdvYWxDb25maWdcIiBzdHlsZT17e2Rpc3BsYXk6ICF2aXNpYmxlID8gJ25vbmUnIDogJ2Jsb2NrJ319PlxuICAgICAgPFRhYj5cbiAgICAgICAgPFRhYi5JdGVtIHRpdGxlPVwi57uIXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnb2FsLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIHtnb2FsLnR5cGUgPT09ICdzaW5nbGUnICYmIHRoaXMuc3RhdGUuc3RhcnRGdXp6aW5nID09PSBmYWxzZSA/XG4gICAgICAgICAgICAgICg8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnb2FsLXRpdGxlXCI+57uI54K5e2dvYWxJbmRleH08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdvYWwtYW5nbGVcIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuPuinkuW6pjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIHtnb2FsLm9yaWVudGF0aW9uICYmIGdvYWwub3JpZW50YXRpb25bMl19XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaG9vc2UtcG9zaXRpb25cIj5cbiAgICAgICAgICAgICAgICAgIDxCdXR0b24gdGV4dCBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0UG9pbnQoMClcbiAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJldC1pY29uIGljb24tdmlld1wiLz5cbiAgICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb3NpdGlvbi1pbmZvXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+PHNwYW4+WDwvc3Bhbj4ge2dvYWwubG9jYXRpb25bMF0ueC50b0ZpeGVkKDIpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PjxzcGFuPlk8L3NwYW4+IHtnb2FsLmxvY2F0aW9uWzBdLnkudG9GaXhlZCgyKX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj48c3Bhbj5aPC9zcGFuPiB7Z29hbC5sb2NhdGlvblswXS56LnRvRml4ZWQoMil9IDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgey8qPGRpdiBjbGFzc05hbWU9XCJmdXp6aW5nLWJ1dHRvblwiPiovfVxuICAgICAgICAgICAgICAgICAgey8qPEJ1dHRvbiovfVxuICAgICAgICAgICAgICAgICAgICB7Lyp0eXBlPVwicHJpbWFyeVwiKi99XG4gICAgICAgICAgICAgICAgICAgIHsvKm9uQ2xpY2s9eygpID0+IHRoaXMuc2V0U3RhdGUoe3N0YXJ0RnV6emluZzogdHJ1ZX0pfT4qL31cbiAgICAgICAgICAgICAgICAgICAgey8q5LiH5ZCR6K6+572uKi99XG4gICAgICAgICAgICAgICAgICB7Lyo8L0J1dHRvbj4qL31cbiAgICAgICAgICAgICAgICB7Lyo8L2Rpdj4qL31cbiAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD4pIDpcbiAgICAgICAgICAgICAgKDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInR5cGUtc2VsZWN0XCI+PHNwYW4+57G75Z6LPC9zcGFuPiAmbmJzcDtcbiAgICAgICAgICAgICAgICAgIDxTZWxlY3Qgb25DaGFuZ2U9e3RoaXMuY2hhbmdlRG90VHlwZS5iaW5kKHRoaXMpfSB2YWx1ZT17Z29hbC50eXBlfSBkYXRhU291cmNlPXt0aGlzLnN0YXRlLmRvdFR5cGVzfS8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJnb2FsLXBvaW50c1wiPlxuICAgICAgICAgICAgICAgICAge3RoaXMucmVuZGVyRG90KCl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmdXp6aW5nLWJ1dHRvbiBhY3RpdmVcIj5cbiAgICAgICAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtzdGFydEZ1enppbmc6IGZhbHNlfSlcbiAgICAgICAgICAgICAgICAgIH19Pui/lOWbnuaooeWei+S9jee9rui1t+eCuSA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD4pfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1RhYi5JdGVtPlxuICAgICAgICA8VGFiLkl0ZW0gdGl0bGU9XCLooYxcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwZWVkLXNlbGVjdFwiPlxuICAgICAgICAgICAgPFNwZWVkIHNwZWVkPXt0aGlzLmdvYWwuc3BlZWR9IG9uQ2hhbmdlPXt0aGlzLm9uU3BlZWRDaGFuZ2UuYmluZCh0aGlzKX0vPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1RhYi5JdGVtPlxuICAgICAgPC9UYWI+XG4gICAgPC9kaXY+O1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaGluZ3NMaXN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGUgPSB7fVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdhZGRUaGluZycsIChlKSA9PiB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgdGhpbmdzOiB3aW5kb3cuZ2xvYmFsU3RhdGUudGhpbmdzLFxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3JlbW92ZVRoaW5nJywgKGUpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0aGluZ3M6IHdpbmRvdy5nbG9iYWxTdGF0ZS50aGluZ3MsXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0Y2hhbmdlJywgKGUpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0aGluZzogZS5tZXNoXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHNlbGVjdFRoaW5nKHRoaW5nKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgdHlwZTogJ3NlbGVjdGNoYW5nZScsXG4gICAgICBtZXNoOiB0aGluZyxcbiAgICAgIHByZTogd2luZG93Lmdsb2JhbFN0YXRlLnNlbGVjdHRoaW5nXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgdGhpbmcgPSB0aGlzLnN0YXRlLnRoaW5nIHx8IHt9O1xuICAgIGNvbnN0IHRoaW5ncyA9IHRoaXMuc3RhdGUudGhpbmdzIHx8IHdpbmRvdy5nbG9iYWxTdGF0ZS50aGluZ3M7XG4gICAgY29uc3QgdWwgPSBbXTtcbiAgICBjb25zdCB4ZyA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5LlhHO1xuICAgIGlmICh4ZylcbiAgICAgIHVsLnB1c2goPGxpIGtleT17eGcudXVpZH0gY2xhc3NOYW1lPXt0aGluZy51dWlkID09PSB4Zy51dWlkID8gJ2FjdGl2ZScgOiAnJ30gb25DbGljaz17KCkgPT4ge1xuICAgICAgICB0aGlzLnNlbGVjdFRoaW5nKHhnKVxuICAgICAgfX0+e3hnLnVzZXJEYXRhLm5hbWV9PC9saT4pO1xuICAgIGZvciAoY29uc3QgeCBpbiB0aGluZ3MpIHtcbiAgICAgIHVsLnB1c2goPGxpIGNsYXNzTmFtZT17dGhpbmcudXVpZCA9PT0gdGhpbmdzW3hdLnV1aWQgPyAnYWN0aXZlJyA6ICcnfSBrZXk9e3RoaW5nc1t4XS51dWlkfSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgIHRoaXMuc2VsZWN0VGhpbmcodGhpbmdzW3hdKVxuICAgICAgfX0+e3RoaW5nc1t4XS51c2VyRGF0YS5uYW1lfTwvbGk+KTtcbiAgICB9XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwidGhpbmdzLXBhbmVsXCI+XG4gICAgICA8dWwgY2xhc3NOYW1lPVwidGhpbmdzLWxpc3RcIj57dWx9PC91bD5cbiAgICA8L2Rpdj47XG4gIH1cblxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBUYWIgZnJvbSAnQGFsaWZlL25leHQvbGliL3RhYic7XG5pbXBvcnQgQnV0dG9uIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9idXR0b24nO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdAYWxpZmUvbmV4dC9saWIvc2VsZWN0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJpZ2dlclBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGUgPSB7XG4gICAgdmlzaWJsZTogZmFsc2UsXG4gICAgdHJpZ2dlcjoge31cbiAgfVxuICBvYmplY3QgPSB7fTtcbiAgdHJpZ2dlclR5cGVzID0gW1xuICAgIHtsYWJlbDogJ+S7u+aEj+manOeijeeJqScsIHZhbHVlOiAnYW55J30sXG4gICAge2xhYmVsOiAn5oyH5a6a6Zqc56KN54mpJywgdmFsdWU6ICdvdGhlcid9XG4gIF07XG5cbiAgY29uc3RydWN0b3IoY2ZnKSB7XG4gICAgc3VwZXIoY2ZnKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMubGlzdGVuUGFuZWxDaGVja2VkKCk7XG4gIH1cblxuICBsaXN0ZW5QYW5lbENoZWNrZWQoKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdFRyaWdnZXJBcmVhJywgKGUpID0+IHtcbiAgICAgIGNvbnN0IHRyaWdnZXIgPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLnRyaWdnZXJzW2Uub2JqZWN0Lm5hbWVdO1xuICAgICAgdGhpcy5vYmplY3QgPSBlLm9iamVjdDtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICB0cmlnZ2VyOiB0cmlnZ2VyXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignZGVzZWxlY3QnLCAoKSA9PiB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgdmlzaWJsZTogZmFsc2UsXG4gICAgICAgIHRyaWdnZXI6IHt9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2hvb3NlVGhpbmcnLCBlID0+IHtcbiAgICAgIGNvbnN0IG9iamVjdCA9IGUub2JqZWN0O1xuICAgICAgbGV0IHt0cmlnZ2VyLCBiaW5kaW5nfSA9IHRoaXMuc3RhdGU7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LmJpbmRpbmcgPSBmYWxzZTtcbiAgICAgIGlmICghdHJpZ2dlci5hZ2VudHMpIHRyaWdnZXIuYWdlbnRzID0gW107XG4gICAgICB0cmlnZ2VyLmFnZW50cy5wdXNoKG9iamVjdC51c2VyRGF0YS5uYW1lKTtcbiAgICAgIGJpbmRpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0cmlnZ2VyLCBiaW5kaW5nXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uVHJpZ2dlclR5cGVDaGFuZ2UodmFsdWUpIHtcbiAgICBjb25zdCB7dHJpZ2dlcn0gPSB0aGlzLnN0YXRlO1xuICAgIGlmICh2YWx1ZSA9PT0gJ2FueScpIHtcbiAgICAgIHRyaWdnZXIuYWdlbnRzID0gdmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyaWdnZXIuYWdlbnRzID0gW107XG4gICAgfVxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5Lm1vZGlmeVRyaWdnZXIodHJpZ2dlcik7XG4gICAgdGhpcy5zZXRTdGF0ZSh7dHJpZ2dlcn0pO1xuICB9XG5cbiAgcmVuZGVyVHJpZ2dlcnMoKSB7XG4gICAgY29uc3QgdHJpZ2dlcnMgPSBbXTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudHJpZ2dlcnMubWFwKGl0ZW0gPT4ge1xuICAgICAgbGV0IGNsYXNzTmFtZSA9ICcnO1xuICAgICAgaWYgKHRoaXMuc3RhdGUudHJpZ2dlci5uYW1lID09PSBpdGVtLm5hbWUpIHtcbiAgICAgICAgY2xhc3NOYW1lID0gJ2FjdGl2ZSc7XG4gICAgICB9XG4gICAgICB0cmlnZ2Vycy5wdXNoKDxkaXYga2V5PXtpdGVtLm5hbWV9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgIHRoaXMuY2hhbmdlVHJpZ2dlcihpdGVtLm5hbWUpXG4gICAgICB9fT57aXRlbS5uYW1lfTwvZGl2Pik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFt0cmlnZ2Vyc107XG4gIH1cblxuICAvL+aUueWPmOW9k+WJjXRyaWdnZXJcbiAgY2hhbmdlVHJpZ2dlcihuYW1lKSB7XG4gICAgY29uc3QgdHJpZ2dlcnMgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudHJpZ2dlcnM7XG4gICAgbGV0IHRyaWdnZXI7XG4gICAgZm9yIChjb25zdCB4IGluIHRyaWdnZXJzKSB7XG4gICAgICBpZiAodHJpZ2dlcnNbeF0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICB0cmlnZ2VyID0gdHJpZ2dlcnNbeF07XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG9iamVjdCA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEudHJpZ2dlcnNbdHJpZ2dlci51c2VyRGF0YS5uYW1lXTtcbiAgICB0aGlzLnNldFN0YXRlKHt0cmlnZ2VyOiBvYmplY3R9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LnRyaWdnZXIuc2VsZWN0T2JqZWN0KHRyaWdnZXIpO1xuICB9XG5cbiAgYWRkQmluZCgpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LmJpbmRpbmcgPSB0cnVlO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgYmluZGluZzogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgZGVsZXRlQWdlbnQoaW5kZXgpIHtcbiAgICBjb25zdCB7dHJpZ2dlcn0gPSB0aGlzLnN0YXRlO1xuICAgIHRyaWdnZXIuYWdlbnRzLnNwbGljZShpbmRleCwgMSk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7dHJpZ2dlcn0pO1xuICB9XG5cbiAgLy/nu5HlrprlhbPns7vvvIzniankvZPop6blj5HlmajmiY3mnInmraTlsZ7mgKdcbiAgcmVuZGVyQmluZGluZygpIHtcbiAgICBjb25zdCB0cmlnZ2VyID0gdGhpcy5zdGF0ZS50cmlnZ2VyO1xuICAgIGxldCB0cmlnZ2VyVHlwZTtcbiAgICBpZiAodHJpZ2dlci5kZXNjICE9PSAncGVyY2VwdF90cmlnZ2VyJykge1xuICAgICAgcmV0dXJuICcnXG4gICAgfVxuICAgIGlmICh0aGlzLnN0YXRlLnRyaWdnZXIuYWdlbnRzID09PSAnYW55Jykge1xuICAgICAgdHJpZ2dlclR5cGUgPSAnYW55JztcbiAgICB9IGVsc2Uge1xuICAgICAgdHJpZ2dlclR5cGUgPSAnb3RoZXInO1xuICAgIH1cbiAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJiaW5kaW5nLXRyaWdnZXJcIj5cbiAgICAgIDxTZWxlY3RcbiAgICAgICAgYXV0b1dpZHRoPXt0cnVlfVxuICAgICAgICB2YWx1ZT17dHJpZ2dlclR5cGV9XG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uVHJpZ2dlclR5cGVDaGFuZ2UuYmluZCh0aGlzKX1cbiAgICAgICAgZGF0YVNvdXJjZT17dGhpcy50cmlnZ2VyVHlwZXN9Lz5cbiAgICAgIHtcbiAgICAgICAgdHJpZ2dlclR5cGUgPT09ICdhbnknID8gJycgOlxuICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInByaW1hcnlcIiBjbGFzc05hbWU9e3RoaXMuc3RhdGUuYmluZGluZyA/ICdiaW5kaW5nIGJpbmRpbmctYnV0dG9uJyA6ICdiaW5kaW5nLWJ1dHRvbid9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuYWRkQmluZC5iaW5kKHRoaXMpfT7nu5Hlrprpmpznoo3niak8L0J1dHRvbj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHJpZ2dlci1hZ2VudHNcIj5cbiAgICAgICAgICAgICAge3RyaWdnZXIuYWdlbnRzICYmIHRyaWdnZXIuYWdlbnRzICE9PSAnYW55JyAmJiB0cmlnZ2VyLmFnZW50cy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYga2V5PXtpbmRleH0+PHNwYW4+e2l0ZW19PC9zcGFuPjxzcGFuIGNsYXNzTmFtZT1cImRlbGV0ZS10cmlnZ2VyLWFnZW50XCIgb25DbGljaz17ZSA9PiB7XG4gICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUFnZW50KGluZGV4KVxuICAgICAgICAgICAgICAgIH19Pi08L3NwYW4+PC9kaXY+O1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICB9XG4gICAgPC9kaXY+O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHRyaWdnZXIgPSB0aGlzLnN0YXRlLnRyaWdnZXI7XG4gICAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT17dGhpcy5zdGF0ZS52aXNpYmxlID8gJ3JpZ2h0YmFyICcgOiAncmlnaHRiYXIgc2hyaW5rJ30+XG4gICAgICA8VGFiPlxuICAgICAgICA8VGFiLkl0ZW0gdGl0bGU9XCLlsZ7mgKdcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRyaWdnZXItYXR0clwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0cmlnZ2VyLW5hbWVcIj57dHJpZ2dlci5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0cmlnZ2VyLXR5cGVcIj57dHJpZ2dlci5kZXNjfTwvZGl2PlxuICAgICAgICAgICAge3RoaXMucmVuZGVyQmluZGluZygpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1RhYi5JdGVtPlxuICAgICAgICA8VGFiLkl0ZW0gdGl0bGU9XCLop6blj5HlmajliJfooahcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRyaWdnZXJzLWxpc3RcIj5cbiAgICAgICAgICAgIHt0aGlzLnJlbmRlclRyaWdnZXJzKCl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvVGFiLkl0ZW0+XG4gICAgICA8L1RhYj5cbiAgICA8L2Rpdj4pO1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRhYiBmcm9tICdAYWxpZmUvbmV4dC9saWIvdGFiJztcbmltcG9ydCBGb3JtIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9mb3JtJztcbmltcG9ydCBJbnB1dCBmcm9tICdAYWxpZmUvbmV4dC9saWIvaW5wdXQnO1xuaW1wb3J0IFJhbmdlIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9yYW5nZSc7XG5pbXBvcnQgVHJhZmZpYyBmcm9tICcuLi9jb21wb25lbnQvdHJhZmZpYyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyYWZmaWNQYW5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRlID0ge1xuICAgIHZpc2libGU6IGZhbHNlLFxuICAgIHRyYWZmaWM6IHt9LFxuICAgIGFnZW50U291cmNlOiB7fVxuICB9XG4gIG9iamVjdCA9IHt9Oy8vM2Tlr7nosaHlrp7kvotcblxuICBjb25zdHJ1Y3RvcihjZmcpIHtcbiAgICBzdXBlcihjZmcpO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5saXN0ZW5QYW5lbENoZWNrZWQoKTtcbiAgfVxuXG4gIGxpc3RlblBhbmVsQ2hlY2tlZCgpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0QWdlbnRTb3VyY2UnLCAoZSkgPT4ge1xuICAgICAgLy8gY29uc3QgYWdlbnRTb3VyY2UgPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLmFnZW50U291cmNlc1tlLmFnZW50U291cmNlLm5hbWVdO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHZpc2libGU6IHRydWUsXG4gICAgICAgIGFnZW50U291cmNlOiBlLmFnZW50U291cmNlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0VHJhZmZpY0FyZWEnLCAoZSkgPT4ge1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdkZXNlbGVjdCcsIChlKSA9PiB7XG4gICAgICBpZiAoZS5vYmplY3QpIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB2aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgdHJhZmZpYzoge31cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgY2hhbmdlRm9ybShkYXRhKSB7XG4gICAgY29uc3Qge2FnZW50U291cmNlfSA9IHRoaXMuc3RhdGU7XG4gICAgYWdlbnRTb3VyY2Uucm9sZXMgPSBbJ21hbicsICdjYXInLCAnbW90b3InLCAnb3RoZXInXTtcbiAgICBhZ2VudFNvdXJjZS5wZXJjZW50ID0gW2RhdGEubWFuLCBkYXRhLmNhciwgZGF0YS5tb3RvciwgZGF0YS5vdGhlcl07XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmhpc3RvcnkubW9kaWZ5QWdlbnRTb3VyY2UoYWdlbnRTb3VyY2UpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgYWdlbnRTb3VyY2VcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlckZvcm0oKSB7XG4gICAgY29uc3QgYWdlbnRTb3VyY2UgPSB0aGlzLnN0YXRlLmFnZW50U291cmNlO1xuICAgIGNvbnN0IHBlcmNlbnQgPSBhZ2VudFNvdXJjZS5wZXJjZW50IHx8IHt9O1xuICAgIGNvbnN0IHN0eWxlID0ge3dpZHRoOiAxODB9O1xuICAgIGNvbnN0IGZvcm1Eb20gPSA8Rm9ybSBvbkNoYW5nZT17dGhpcy5jaGFuZ2VGb3JtLmJpbmQodGhpcyl9PlxuICAgICAgPEZvcm0uSXRlbSBsYWJlbD1cIuWQjeensFwiPlxuICAgICAgICA8SW5wdXQgc3R5bGU9e3N0eWxlfSBuYW1lPVwibmFtZVwiIHJlYWRPbmx5IHZhbHVlPXthZ2VudFNvdXJjZS5uYW1lfS8+XG4gICAgICA8L0Zvcm0uSXRlbT5cbiAgICAgIDxGb3JtLkl0ZW0gbGFiZWw9XCLooYzkurpcIj5cbiAgICAgICAgPFJhbmdlIHN0eWxlPXtzdHlsZX0gbmFtZT1cIm1hblwiIHRvb2x0aXBWaXNpYmxlIHZhbHVlPXtwZXJjZW50WzBdfSBtYXJrcz17ezA6ICcwJScsIDEwMDogJzEwMCUnfX0gbWluPXswfVxuICAgICAgICAgICAgICAgaGFzVGlwPXt0cnVlfSBtYXg9ezEwMH0gZGVmYXVsdFZhbHVlPXsxMDB9Lz5cbiAgICAgIDwvRm9ybS5JdGVtPlxuICAgICAgPEZvcm0uSXRlbSBsYWJlbD1cIueUteWKqOi9plwiPlxuICAgICAgICA8UmFuZ2Ugc3R5bGU9e3N0eWxlfSBuYW1lPVwibW90b3JcIiB0b29sdGlwVmlzaWJsZSB2YWx1ZT17cGVyY2VudFsyXX0gbWFya3M9e3swOiAnMCUnLCAxMDA6ICcxMDAlJ319IG1pbj17MH1cbiAgICAgICAgICAgICAgIGhhc1RpcD17dHJ1ZX0gbWF4PXsxMDB9IGRlZmF1bHRWYWx1ZT17MTAwfS8+XG4gICAgICA8L0Zvcm0uSXRlbT5cbiAgICAgIDxGb3JtLkl0ZW0gbGFiZWw9XCLmsb3ovaZcIj5cbiAgICAgICAgPFJhbmdlIHN0eWxlPXtzdHlsZX0gbmFtZT1cImNhclwiIHRvb2x0aXBWaXNpYmxlIHZhbHVlPXtwZXJjZW50WzFdfSBtYXJrcz17ezA6ICcwJScsIDEwMDogJzEwMCUnfX0gbWluPXswfVxuICAgICAgICAgICAgICAgaGFzVGlwPXt0cnVlfSBtYXg9ezEwMH0gZGVmYXVsdFZhbHVlPXswfS8+XG4gICAgICA8L0Zvcm0uSXRlbT5cbiAgICAgIDxGb3JtLkl0ZW0gbGFiZWw9XCLlhbbku5ZcIj5cbiAgICAgICAgPFJhbmdlIHN0eWxlPXtzdHlsZX0gbmFtZT1cIm90aGVyXCIgdG9vbHRpcFZpc2libGUgdmFsdWU9e3BlcmNlbnRbM119IG1hcmtzPXt7MDogJzAlJywgMTAwOiAnMTAwJSd9fSBtaW49ezB9XG4gICAgICAgICAgICAgICBoYXNUaXA9e3RydWV9IG1heD17MTAwfSBkZWZhdWx0VmFsdWU9ezB9Lz5cbiAgICAgIDwvRm9ybS5JdGVtPlxuICAgICAgPGRpdj7ooYzkuLrliIbluIM8L2Rpdj5cblxuICAgIDwvRm9ybT47XG4gICAgcmV0dXJuIGZvcm1Eb207XG4gIH1cblxuICAvKipcbiAgICog6LW35aeL5Yy65Z+f5pS55Y+YXG4gICAqL1xuICBjaGFuZ2VTdGFydEFyZWEoZGF0YSkge1xuICAgIGNvbnN0IHthZ2VudFNvdXJjZX0gPSB0aGlzLnN0YXRlO1xuICAgIGFnZW50U291cmNlLmluaXRhcmVhcyA9IGRhdGE7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmhpc3RvcnkubW9kaWZ5QWdlbnRTb3VyY2UoYWdlbnRTb3VyY2UpO1xuICAgIHRoaXMuc2V0U3RhdGUoe2FnZW50U291cmNlfSk7XG4gIH1cblxuICAvKipcbiAgICog57uI54K55Yy65Z+f5pS55Y+YXG4gICAqL1xuICBjaGFuZ2VFbmRBcmVhKGRhdGEpIHtcbiAgICBjb25zdCB7YWdlbnRTb3VyY2V9ID0gdGhpcy5zdGF0ZTtcbiAgICBhZ2VudFNvdXJjZS5nb2FsYXJlYXMgPSBkYXRhO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5Lm1vZGlmeUFnZW50U291cmNlKGFnZW50U291cmNlKTtcbiAgICB0aGlzLnNldFN0YXRlKHthZ2VudFNvdXJjZX0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHthZ2VudFNvdXJjZX0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9e3RoaXMuc3RhdGUudmlzaWJsZSA/ICdyaWdodGJhciAnIDogJ3JpZ2h0YmFyIHNocmluayd9PlxuICAgICAgPFRhYj5cbiAgICAgICAgPFRhYi5JdGVtIHRpdGxlPVwi6YWN572uXCI+XG4gICAgICAgICAgPFRyYWZmaWMgdGl0bGU9XCLotbflp4vljLrln5/phY3nva5cIiB0cmFmZmljcz17YWdlbnRTb3VyY2UuaW5pdGFyZWFzIHx8IFtdfSBvbkNoYW5nZT17dGhpcy5jaGFuZ2VTdGFydEFyZWEuYmluZCh0aGlzKX0vPlxuICAgICAgICAgIDxUcmFmZmljIHRpdGxlPVwi57uI54K55Yy65Z+f6YWN572uXCIgdHJhZmZpY3M9e2FnZW50U291cmNlLmdvYWxhcmVhcyB8fCBbXX0gb25DaGFuZ2U9e3RoaXMuY2hhbmdlRW5kQXJlYS5iaW5kKHRoaXMpfS8+XG4gICAgICAgIDwvVGFiLkl0ZW0+XG4gICAgICAgIDxUYWIuSXRlbSB0aXRsZT1cIuWxnuaAp1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidHJhZmZpYy1hdHRyXCI+XG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJGb3JtKCl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvVGFiLkl0ZW0+XG4gICAgICA8L1RhYj5cbiAgICA8L2Rpdj4pO1xuICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICdAYWxpZmUvbmV4dC9saWIvYnV0dG9uJztcbmltcG9ydCBJY29uIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9pY29uJztcblxucmVxdWlyZSgnLi90cmFmZmljLmxlc3MnKTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyYWZmaWMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0ZSA9IHtcbiAgICBsaXN0OiBbXSxcbiAgICBub3c6IHt9XG4gIH1cbiAgbm93T2JqZWN0ID0gZmFsc2UvL+W9k+WJjee7mOWItueahOWMuuWfn1xuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy50cmFmZmljcylcbiAgICAgIHRoaXMuc2V0U3RhdGUoe2xpc3Q6IHRoaXMucHJvcHMudHJhZmZpY3N9KTtcbiAgICAvL+a3u+WKoOeCuVxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgICAgaWYgKHRoaXMubm93T2JqZWN0KSB7Ly/pgInkuK3mgIFcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICAgIHR5cGU6ICdhZGRUcmFmZmljUG9pbnQnLFxuICAgICAgICAgIGNvb3JkOiBlLmNvb3JkLFxuICAgICAgICAgIG9iamVjdDogdGhpcy5ub3dPYmplY3RcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLy/mt7vliqDngrlcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZSA9PiB7XG4gICAgICBpZiAodGhpcy5ub3dPYmplY3QpIHsvL+mAieS4reaAgVxuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgICAgdHlwZTogJ3RyYWZmaWNNb3VzZW1vdmUnLFxuICAgICAgICAgIGNvb3JkOiBlLmNvb3JkLFxuICAgICAgICAgIG9iamVjdDogdGhpcy5ub3dPYmplY3RcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvL+WujOaIkOe7mOWItlxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdkZXNlbGVjdCcsIGUgPT4gey8v5Y675o6J6byg5qCH5omL5Yq/XG4gICAgICB0aGlzLnJlbW92ZUNyb3NzTW91c2UoKTtcbiAgICAgIGNvbnN0IHtub3d9ID0gdGhpcy5zdGF0ZTtcbiAgICAgIGlmICh0aGlzLm5vd09iamVjdClcbiAgICAgICAgdGhpcy5vbkNoYW5nZShub3csIHRoaXMubm93T2JqZWN0KTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBub3c6IHt9XG4gICAgICB9KTtcbiAgICAgIGlmICh0aGlzLm5vd09iamVjdCkge1xuICAgICAgICB0aGlzLm5vd09iamVjdC5ob3ZlclBvaW50ICYmICh3aW5kb3cuZ2xvYmFsU3RhdGUud2F0Y2hNYXAucGlnZW9uTWFwLnJlbW92ZSh0aGlzLm5vd09iamVjdC5ob3ZlclBvaW50KSk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm5vd09iamVjdC5ob3ZlclBvaW50O1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LnRyYWZmaWNBcmVhLnVwZGF0ZUxpbmUodGhpcy5ub3dPYmplY3QpO1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LnRyYWZmaWNBcmVhLmxlYXZlT2JqZWN0KHRoaXMubm93T2JqZWN0KTtcbiAgICAgICAgdGhpcy5ub3dPYmplY3QgPSBudWxsO1xuICAgICAgfVxuICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICB0eXBlOiAnZXhpdFRyYWZmaWMnLFxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ21vZGlmeVRyYWZmaWNBcmVhJywgZSA9PiB7Ly/ljrvmjonpvKDmoIfmiYvlir9cbiAgICAgIGNvbnN0IHtkYXRhLCBvYmplY3R9ID0gZTtcbiAgICAgIGlmIChkYXRhLm5hbWUpXG4gICAgICAgIHRoaXMub25DaGFuZ2UoZGF0YSwgb2JqZWN0KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uQ2hhbmdlKG5vdywgbm93T2JqZWN0KSB7XG4gICAgY29uc3QgcG9pbnRzID0gW107XG4gICAgbm93T2JqZWN0LnBvaW50cy5tYXAoaXRlbSA9PiB7XG4gICAgICBwb2ludHMucHVzaChpdGVtLnBhcmVudC5wb3NpdGlvbik7XG4gICAgfSk7XG4gICAgdGhpcy5zdGF0ZS5saXN0Lm1hcChpdGVtID0+IHtcbiAgICAgIGlmIChpdGVtLm5hbWUgPT09IG5vdy5uYW1lKSB7XG4gICAgICAgIGl0ZW0ucG9pbnRzID0gcG9pbnRzO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuc2V0U3RhdGUoe2xpc3Q6IHRoaXMuc3RhdGUubGlzdH0pO1xuICAgIHRoaXMucHJvcHMub25DaGFuZ2UodGhpcy5zdGF0ZS5saXN0KTtcbiAgfVxuXG4gIFVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKHByb3BzKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7bGlzdDogcHJvcHMudHJhZmZpY3N9KTtcbiAgfVxuXG4gIC8v5riy5p+T5Yy65Z+fXG4gIHJlbmRlckxpc3QoKSB7XG4gICAgY29uc3QgbGlzdCA9IFtdO1xuICAgIGNvbnN0IHtub3d9ID0gdGhpcy5zdGF0ZTtcbiAgICB0aGlzLnN0YXRlLmxpc3QubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgbGlzdC5wdXNoKFxuICAgICAgICA8bGkgY2xhc3NOYW1lPXtpdGVtLm5hbWUgPT09IG5vdy5uYW1lID8gJ2FjdGl2ZScgOiAnJ30gb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgIHRoaXMuY2hvb3NlVHJhZmZpYyhpdGVtKVxuICAgICAgICB9fSBrZXk9e2luZGV4fT7ljLrln597aW5kZXh9XG4gICAgICAgICAgPEljb24gb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLmRlbGV0ZUl0ZW0oaW5kZXgpXG4gICAgICAgICAgfX0gdHlwZT1cImFzaGJpblwiIHNpemU9XCJzbWFsbFwiIHN0eWxlPXt7ZmxvYXQ6ICdyaWdodCcsIGN1cnNvcjogJ3BvaW50ZXInfX0vPlxuICAgICAgICA8L2xpPlxuICAgICAgKTtcbiAgICB9KTtcbiAgICByZXR1cm4gbGlzdDtcbiAgfVxuXG4gIC8v5Yig6Zmk5Yy65Z+fXG4gIGRlbGV0ZUl0ZW0oaW5kZXgpIHtcbiAgICBjb25zdCB7bGlzdH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGl0ZW0gPSBsaXN0W2luZGV4XTtcbiAgICBjb25zdCBvYmplY3QgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudHJhZmZpY0FyZWFzW2l0ZW0ubmFtZV07XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnZpZXdlci52aWV3cG9ydC50cmFmZmljQXJlYS5kZWxldGVUcmFmZmljKG9iamVjdCk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnZpZXdlci52aWV3cG9ydC50cmFmZmljQXJlYS5zZWxlY3RpbmcgPSBudWxsO1xuICAgIGxpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGxpc3RcbiAgICB9KTtcbiAgfVxuXG4gIGNob29zZVRyYWZmaWMoaXRlbSkge1xuICAgIGlmICh0aGlzLnN0YXRlLm5vdy5uYW1lID09PSBpdGVtLm5hbWUpIHsvL+WPlua2iOmAieS4rVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpdGVtT2JqZWN0ID0gd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhc1tpdGVtLm5hbWVdO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS52aWV3ZXIudmlld3BvcnQudHJhZmZpY0FyZWEuc2VsZWN0T2JqZWN0KGl0ZW1PYmplY3QpO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS52aWV3ZXIudmlld3BvcnQudHJhZmZpY0FyZWEubGVhdmVPYmplY3QodGhpcy5ub3dPYmplY3QpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbm93OiBpdGVtXG4gICAgfSk7XG4gIH1cblxuICAvL+a3u+WKoOWMuuWfn1xuICBhZGRJdGVtKCkge1xuICAgIGNvbnN0IGl0ZW0gPSB7XG4gICAgICB0eXBlOiAncG9seWdvbicsXG4gICAgICBwb2ludHM6IFtdLFxuICAgICAgbmFtZTogJ3RyYWZmaWMnICsgKG5ldyBEYXRlKCkuZ2V0VGltZSgpICogTWF0aC5yYW5kb20oKSkudG9GaXhlZCgwKVxuICAgIH07XG4gICAgdGhpcy5zdGF0ZS5saXN0LnB1c2goaXRlbSk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBsaXN0OiB0aGlzLnN0YXRlLmxpc3RcbiAgICB9KTtcblxuICAgIGlmICghd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhc1tpdGVtLm5hbWVdKSB7XG4gICAgICAvL+aWsOWinml0ZW1cbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS50cmFmZmljQXJlYXNbaXRlbS5uYW1lXSA9XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS52aWV3ZXIudmlld3BvcnQudHJhZmZpY0FyZWEuYWRkTmV3VHJhZmZpYyhpdGVtKTtcbiAgICB9XG4gICAgdGhpcy5jaG9vc2VUcmFmZmljKGl0ZW0pO1xuICAgIHRoaXMubm93T2JqZWN0ID0gd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhc1tpdGVtLm5hbWVdO1xuICAgIHRoaXMuYWRkQ3Jvc3NNb3VzZSgpO1xuICB9XG5cblxuICAvL+a3u+WKoOm8oOagh+agt+W8j1xuICBhZGRDcm9zc01vdXNlKCkge1xuICAgIGNvbnN0IHN0dWRpbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tLXN0dWRpbycpO1xuICAgIHN0dWRpby5jbGFzc05hbWUgPSAnbS1zdHVkaW8gY3Jvc3NoYWlyJztcbiAgfVxuXG4gIC8v56e76Zmk6byg5qCH5qC35byPXG4gIHJlbW92ZUNyb3NzTW91c2UoKSB7XG4gICAgY29uc3Qgc3R1ZGlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm0tc3R1ZGlvJyk7XG4gICAgc3R1ZGlvLmNsYXNzTmFtZSA9ICdtLXN0dWRpbyAnO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHt0aXRsZX0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInRyYWZmaWMtY29uZmlnXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGMtdGl0bGVcIj5cbiAgICAgICAgICB7dGl0bGV9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8dWw+XG4gICAgICAgICAge3RoaXMucmVuZGVyTGlzdCgpfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e3RoaXMuYWRkSXRlbS5iaW5kKHRoaXMpfSB0eXBlPVwicHJpbWFyeVwiIGNsYXNzTmFtZT1cInRjLWJ1dHRvblwiPisg5paw5aKe5Yy65Z+fPC9CdXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDAuMjguMTFAY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2xlc3MtbG9hZGVyQDQuMS4wQGxlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdHJhZmZpYy5sZXNzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX3N0eWxlLWxvYWRlckAwLjIwLjNAc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fbGVzcy1sb2FkZXJANC4xLjBAbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi90cmFmZmljLmxlc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9fbGVzcy1sb2FkZXJANC4xLjBAbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi90cmFmZmljLmxlc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDAuMjguMTFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnRyYWZmaWMtY29uZmlne2hlaWdodDpjYWxjKDUwJSAtIDIwcHgpO3Bvc2l0aW9uOnJlbGF0aXZlO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICMwMDB9LnRyYWZmaWMtY29uZmlnIC50cmFmZmljLWF0dHJ7Y29sb3I6I2ZmZn0udHJhZmZpYy1jb25maWcgLnRjLXRpdGxle3BhZGRpbmc6NXB4IDEwcHg7Y29sb3I6I2ZmZjtmb250LXNpemU6MTNweDtsaW5lLWhlaWdodDozMHB4O2JvcmRlci1ib3R0b206MXB4IHNvbGlkICMwMDB9LnRyYWZmaWMtY29uZmlnIHVse292ZXJmbG93LXk6YXV0bzttYXJnaW46MTBweDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2hlaWdodDpjYWxjKDEwMCUgLSAxMDZweCl9LnRyYWZmaWMtY29uZmlnIHVsIGxpe3dpZHRoOjEwMCU7aGVpZ2h0OjMwcHg7YmFja2dyb3VuZDojNGE1MzVlO2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjMwcHg7cGFkZGluZy1yaWdodDoxMHB4O3BhZGRpbmctbGVmdDoxMHB4O2N1cnNvcjpwb2ludGVyO21hcmdpbi1ib3R0b206MTBweDtib3JkZXItcmFkaXVzOjVweDtjb2xvcjojZmZmO3RyYW5zaXRpb246YmFja2dyb3VuZCAuM3MgZWFzZTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0udHJhZmZpYy1jb25maWcgdWwgbGkuYWN0aXZle2JhY2tncm91bmQ6IzI0NjZmZn0udHJhZmZpYy1jb25maWcgYnV0dG9ue3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO2xlZnQ6MjBweDtib3R0b206MjBweH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJpbXBvcnQgRGF0YUxvYWRlciBmcm9tICcuLi9kYXRhL0RhdGFMb2FkZXInO1xuaW1wb3J0IE1lc3NhZ2UgZnJvbSAnQGFsaWZlL25leHQvbGliL21lc3NhZ2UnO1xuLy8gaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVmlld3BvcnQgZnJvbSAnLi4vaGFuZGxlL3ZpZXdwb3J0JztcbmltcG9ydCB1dGlscyBmcm9tICd1dGlscyc7XG5cbnJlcXVpcmUoJy4uLy4uL2xpYi95YW1sLmpzJyk7XG5pbXBvcnQgRGF0YVBhcnNlciBmcm9tICcuLi9kYXRhL0RhdGFQYXJzZXInO1xuXG5jb25zdCBBUEkgPSB7XG4gIHRva2VuOiB7XG4gICAgdXJsOiAnL2FwaS90YXNrL3Rva2VuJyxcbiAgICBkYXRhOiB7fVxuICB9XG59O1xuXG5jb25zdCBnZXRHZW8gPSAoU04sIFZFUlNJT04pID0+IHtcbiAgcmV0dXJuIGAvcHJvZHVjZS9jbG91ZF9sbWFwLyR7U059L2V4cG9ydF9kYXRhLyR7VkVSU0lPTn0vcHVzaGRhdGEvbG1hcC9nZW8uanNvbmA7XG59O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlld2VyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGUgPSB7fTtcblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLmdldE1hcFRva2VuKCk7XG4gIH1cblxuICBnZXRNYXBUb2tlbigpIHtcbiAgICBjb25zdCB7dXJsLCBkYXRhfSA9IEFQSS50b2tlbjtcbiAgICBjb25zdCB7c2NoZW1hfSA9IHdpbmRvdy5nbG9iYWxTdGF0ZSB8fCB7fTtcbiAgICBkYXRhLm1hcElkID0gc2NoZW1hICYmIHNjaGVtYS5tYXBWZXJzaW9uO1xuICAgIHV0aWxzLmdldERhdGEodXJsLCBkYXRhLCAocmVzKSA9PiB7XG4gICAgICBpZiAoIXJlcy5vZmZzZXQpIHtcbiAgICAgICAgTWVzc2FnZS5lcnJvcign5rKh5pyJ5Zyw5Zu+5pWw5o2uJyk7XG4gICAgICAgIC8vIHRoaXMucHJvcHMuc2V0RXJyb3IoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5pbml0U3R1ZGlvKHJlcyk7XG4gICAgfSk7XG4gIH1cblxuICAvL+ino+aekOaVsOaNrlxuICBsb2FkRGF0YSgpIHtcbiAgICB0aGlzLmluaXRTY2hlbWEoKTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGF0YUxvYWRlciA9IHRoaXMuZGF0YUxvYWRlcjtcbiAgICB0aGlzLmRhdGFMb2FkZXIgPSBuZXcgRGF0YUxvYWRlcigpO1xuICAgIHRoaXMuZGF0YUxvYWRlci5sb2FkRGF0YSh3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hKTtcbiAgfVxuXG4gIC8v5Zyw5Zu+5pWw5o2u5Yqg6L295YaN6L+b6KGM5pWw5o2u5qC85byP5YyW77yM5Zug5Li65L6d6LWWb2Zmc2V0XG4gIGluaXRTY2hlbWEoKSB7XG4gICAgbGV0IHNjaGVtYSA9IHt9O1xuICAgIGlmICh3aW5kb3cuZ2xvYmFsU3RhdGUueWFtbERhdGEpIHtcbiAgICAgIHNjaGVtYSA9IERhdGFQYXJzZXIuY29udmVydCh3aW5kb3cuZ2xvYmFsU3RhdGUueWFtbERhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlbWEgPSB7J29iamVjdHMnOiB7fSwgdHJpZ2dlcnM6IHt9LCBhZ2VudFNvdXJjZXM6IHt9fTtcbiAgICB9XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYSA9IE9iamVjdC5hc3NpZ24od2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYSwgc2NoZW1hKTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnbG9hZFNjaGVtYSdcbiAgICB9KTtcbiAgfVxuXG4gIC8v5Yid5aeL5YyW5aSp55y8XG4gIGluaXRTdHVkaW8oZGF0YSkge1xuICAgIGNvbnN0IHtvZmZzZXR9ID0gZGF0YTtcbiAgICBjb25zdCBkb21haW4gPSAnaHR0cDovL2V0LWxtYXAtb25saW5lLm9zcy1jbi1zaGFuZ2hhaS5hbGl5dW5jcy5jb20nO1xuICAgIC8vIGlmICh3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCdhbGliYWJhLWluYycpID4gLTEpIHtcbiAgICAvLyAgIGRvbWFpbiA9ICcvL2xtYXAuY2Fpbmlhby5jb20nO1xuICAgIC8vIH1cbiAgICAvLyBpZiAod2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZigncHJlJykgPiAtMSkge1xuICAgIC8vICAgZG9tYWluID0gJy8vcHJlLWxtYXAuY2Fpbmlhby5jb20nO1xuICAgIC8vIH1cbiAgICAvLyBpZiAoIWRhdGEub2Zmc2V0KSB7XG4gICAgLy8gICBNZXNzYWdlLmVycm9yKCfmsqHmnInlnLDlm77kv6Hmga/vvIzor7fphY3nva7mraPnoa7lnLDlm74nKVxuICAgIC8vICAgcmV0dXJuXG4gICAgLy8gfVxuICAgIC8vIGRvbWFpbiA9ICdodHRwOi8vZXQtbG1hcC1vbmxpbmUub3NzLWNuLXNoYW5naGFpLmFsaXl1bmNzLmNvbS8nO1xuICAgIGxldCB7bWFwVmVyc2lvbn0gPSB0aGlzLnByb3BzLnNjaGVtYTtcbiAgICBtYXBWZXJzaW9uID0gbWFwVmVyc2lvbi5zcGxpdCgnJicpO1xuICAgIGNvbnN0IG1hcFVybCA9IGdldEdlbyhtYXBWZXJzaW9uWzBdLCBtYXBWZXJzaW9uWzFdKTtcblxuICAgIHRoaXMud2F0Y2hNYXAgPSBuZXcgd2luZG93LldhdGNoTWFwKHtcbiAgICAgIGNvbnRhaW5lcjogJy52aWV3ZXInLFxuICAgICAgaXNSb3M6IGZhbHNlLFxuICAgICAgYXV0b0NlbnRlcjogdHJ1ZSxcbiAgICAgIGlzQW1hcDogZmFsc2UsXG4gICAgICBub0RhdGE6IHRydWUsXG4gICAgICBwaXRjaDogTWF0aC5QSSAvIDMsXG4gICAgICBkb21haW46IGRvbWFpbixcbiAgICAgIG1hcElkOiB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm1hcFZlcnNpb24sXG4gICAgICB1cGRhdGVWaWV3OiBmYWxzZSxcbiAgICAgIG1hcFVybCxcbiAgICAgIG9mZnNldDoge1xuICAgICAgICB4OiBvZmZzZXRbMF0sIHk6IG9mZnNldFsxXSxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICB0aGlzLndhdGNoTWFwLm9uQ2FyTG9hZCA9IChjYXIpID0+IHtcbiAgICAgIGNhci52aXNpYmxlID0gZmFsc2U7XG4gICAgfTtcbiAgICB0aGlzLndhdGNoTWFwLnBpZ2Vvbk1hcC5tYXAuem9vbSA9IDgwO1xuICAgIHRoaXMud2F0Y2hNYXAucGlnZW9uTWFwLm1hcC5mb3YgPSBNYXRoLlBJIC8gODtcbiAgICB0aGlzLndhdGNoTWFwLnBpZ2Vvbk1hcC5tYXAucGl0Y2ggPSAwO1xuICAgIC8v57uY5Zu+5bel5YW3XG4gICAgdGhpcy53YXRjaE1hcC5waWdlb25NYXAuZHJhd1Rvb2wgPSBuZXcgd2luZG93LlBpZ2VvbkdMLkRyYXdUb29sKCk7XG4gICAgdGhpcy53YXRjaE1hcC5waWdlb25NYXAuYWRkTGF5ZXIodGhpcy53YXRjaE1hcC5waWdlb25NYXAuZHJhd1Rvb2wpO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS53YXRjaE1hcCA9IHRoaXMud2F0Y2hNYXA7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnZpZXdlciA9IHRoaXM7XG4gICAgdGhpcy5yZXNpemUoKTtcbiAgICB3aW5kb3cub25yZXNpemUgPSAoKSA9PiB0aGlzLnJlc2l6ZSgpO1xuICAgIHRoaXMudmlld3BvcnQgPSBuZXcgVmlld3BvcnQodGhpcy53YXRjaE1hcCk7XG4gICAgdGhpcy53YXRjaE1hcC5tYXBMYXllci5vbignbG9hZCcsICgpID0+IHsvL+WcsOWbvuWKoOi9veWujOavle+8jOWGjeWKoOi9veWcuuaZr+aVsOaNrlxuICAgICAgdGhpcy5sb2FkRGF0YSgpOy8v5Yqg6L295Zy65pmv5pWw5o2uXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICog6aG16Z2i6Ieq6YCC5bqUXG4gICAqL1xuICByZXNpemUoKSB7XG4gICAgY29uc3QgZG9tID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZpZXdlcicpO1xuICAgIC8vIGRvbS5zdHlsZS5sZWZ0ID0gJzE1MHB4JztcbiAgICBjb25zdCB3aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgIGNvbnN0IGhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCAtIDQwO1xuICAgIGRvbS5zdHlsZS53aWR0aCA9IHdpZHRoICsgJ3B4JztcbiAgICBkb20uc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcbiAgICBkb20uc3R5bGUudG9wID0gJzQwcHgnO1xuICAgIHRoaXMud2F0Y2hNYXAucGlnZW9uTWFwLm1hcC53aWR0aCA9IHdpZHRoO1xuICAgIHRoaXMud2F0Y2hNYXAucGlnZW9uTWFwLm1hcC5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgdGhpcy53YXRjaE1hcC5waWdlb25NYXAuY2FtZXJhQ29udHJvbC51cGRhdGVNYXAoKTtcbiAgfVxuXG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoPGRpdiBjbGFzc05hbWU9XCJ2aWV3ZXJcIj48L2Rpdj4pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRhTG9hZGVyIHtcbiAgY29uc3RydWN0b3IoY2ZnKSB7XG4gICAgdGhpcy5waWdlb25NYXAgPSB3aW5kb3cuZ2xvYmFsU3RhdGUud2F0Y2hNYXAucGlnZW9uTWFwO1xuICAgIHRoaXMudGhpbmcgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LnRoaW5nO1xuICAgIHRoaXMucG9pbnQgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LnBvaW50O1xuICAgIHRoaXMuYXJlYSA9IHdpbmRvdy5nbG9iYWxTdGF0ZS52aWV3ZXIudmlld3BvcnQuYXJlYTtcbiAgICB0aGlzLmxpbmUgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LmxpbmU7XG4gICAgdGhpcy50cmlnZ2VyID0gd2luZG93Lmdsb2JhbFN0YXRlLnZpZXdlci52aWV3cG9ydC50cmlnZ2VyO1xuICAgIHRoaXMudHJhZmZpY0FyZWEgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudmlld2VyLnZpZXdwb3J0LnRyYWZmaWNBcmVhO1xuICB9XG5cbiAgLyoqXG4gICAqIOWKoOi9vXlhbWxcbiAgICovXG4gIGxvYWREYXRhKGRhdGEpIHtcbiAgICB0aGlzLmNsZWFyKCk7XG4gICAgdGhpcy5wYXJzZURhdGFUb1NjZW5lKGRhdGEpO1xuICB9XG5cbiAgLy/mg4XnqbrmiYDmnInnmoRzdHVkaW/lr7nosaFcbiAgY2xlYXIoKSB7XG4gICAgY29uc3QgdGhpbmdzID0gd2luZG93Lmdsb2JhbFN0YXRlLnRoaW5ncztcbiAgICB0aGluZ3MubWFwKGl0ZW0gPT4ge1xuICAgICAgdGhpcy5waWdlb25NYXAgJiYgdGhpcy5waWdlb25NYXAucmVtb3ZlKGl0ZW0pO1xuICAgIH0pO1xuICB9XG5cbiAgLy/op6PmnpB5YW1s55qEYWdlbnTliLDlnLrmma/ph4xcbiAgcGFyc2VEYXRhVG9TY2VuZShkYXRhKSB7XG4gICAgaWYgKCFkYXRhLm9iamVjdHMpIHJldHVybjtcbiAgICBjb25zdCBvYmplY3RzID0gZGF0YS5vYmplY3RzO1xuICAgIGZvciAoY29uc3QgeCBpbiBvYmplY3RzKSB7XG4gICAgICBjb25zdCBkYXRhID0gb2JqZWN0c1t4XTtcbiAgICAgIGNvbnN0IHBvc2l0aW9uID0gZGF0YS5pbml0bG9jYXRpb25bMF07XG4gICAgICB0aGlzLnRoaW5nLmFkZFRoaW5nKGRhdGEsIHBvc2l0aW9uLCAobWVzaCkgPT4ge1xuICAgICAgICB0aGlzLnBvaW50LmFkZFBvaW50cyhkYXRhLCBtZXNoKTtcbiAgICAgICAgdGhpcy5hcmVhLmFkZEFyZWFzKGRhdGEsIG1lc2gpO1xuICAgICAgICBpZiAoZGF0YS5yb2xlLm5hbWUgIT09ICdncGx1cycpXG4gICAgICAgICAgdGhpcy5saW5lLnVwZGF0ZShtZXNoKTtcbiAgICAgIH0pO1xuICAgICAgaWYgKGRhdGEucm9sZS5uYW1lID09PSAnZ3BsdXMnKSB7Ly/lnLDlm77ph43mlrDphY3nva5cbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLndhdGNoTWFwLnNldENlbnRlcihbcG9zaXRpb24ueCwgcG9zaXRpb24ueV0pO1xuICAgICAgfVxuXG4gICAgfVxuICAgIGZvciAoY29uc3QgeCBpbiBkYXRhLnRyaWdnZXJzKSB7XG4gICAgICBjb25zdCB0cmlnZ2VyID0gZGF0YS50cmlnZ2Vyc1t4XTtcbiAgICAgIGlmICghdHJpZ2dlci5kZXNjKSB0cmlnZ2VyLmRlc2MgPSB0cmlnZ2VyLnR5cGU7XG4gICAgICBjb25zdCBvYmplY3QgPSB0aGlzLnRyaWdnZXIuYWRkVHJpZ2dlcih0cmlnZ2VyKTtcbiAgICAgIHRyaWdnZXIucG9pbnRzLm1hcChjb29yZCA9PiB7XG4gICAgICAgIHRoaXMudHJpZ2dlci5hZGRQb2ludCh7Y29vcmQsIG9iamVjdH0pO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnRyaWdnZXIudXBkYXRlTGluZShvYmplY3QpO1xuICAgIH1cbiAgICB0aGlzLnBhcnNlQWdlbnRTb3VyY2UoZGF0YS5hZ2VudFNvdXJjZXMpO1xuICB9XG5cbiAgcGFyc2VBZ2VudFNvdXJjZShhZ2VudFNvdXJjZXMpIHtcbiAgICBsZXQgYXJlYXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHggaW4gYWdlbnRTb3VyY2VzKSB7XG4gICAgICBhcmVhcyA9IGFyZWFzLmNvbmNhdChhZ2VudFNvdXJjZXNbeF0uaW5pdGFyZWFzKTtcbiAgICAgIGFyZWFzID0gYXJlYXMuY29uY2F0KGFnZW50U291cmNlc1t4XS5nb2FsYXJlYXMpO1xuICAgIH1cbiAgICBhcmVhcy5tYXAoaXRlbSA9PiB7XG4gICAgICBjb25zdCB0cmFmZmljT2JqZWN0ID0gdGhpcy50cmFmZmljQXJlYS5hZGROZXdUcmFmZmljKGl0ZW0pO1xuICAgICAgaXRlbS5wb2ludHMubWFwKHBvaW50ID0+IHtcbiAgICAgICAgdGhpcy50cmFmZmljQXJlYS5hZGRQb2ludCh7XG4gICAgICAgICAgY29vcmQ6IHBvaW50LFxuICAgICAgICAgIG9iamVjdDogdHJhZmZpY09iamVjdFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy50cmFmZmljQXJlYS51cGRhdGVMaW5lKHRyYWZmaWNPYmplY3QpO1xuICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhc1tpdGVtLm5hbWVdID0gdHJhZmZpY09iamVjdDtcbiAgICB9KTtcbiAgfVxufVxuIiwicmVxdWlyZSgnLi4vbGliL1RyYW5zZm9ybUNvbnRyb2xzJyk7Ly/mlrnlkJHmi5bmi71cbmltcG9ydCBBcmVhIGZyb20gJy4vQXJlYS5qcyc7XG5pbXBvcnQgUG9pbnQgZnJvbSAnLi9Qb2ludC5qcyc7XG5pbXBvcnQgVGhpbmcgZnJvbSAnLi9UaGluZy5qcyc7XG5pbXBvcnQgTGluZSBmcm9tICcuL0xpbmUuanMnO1xuaW1wb3J0IFRyaWdnZXJBcmVhIGZyb20gJy4vVHJpZ2dlckFyZWEuanMnO1xuaW1wb3J0IFRyYWZmaWNBcmVhIGZyb20gJy4vVHJhZmZpY0FyZWEuanMnO1xuXG5jb25zdCBUSFJFRSA9IHdpbmRvdy5USFJFRTtcblxuY2xhc3MgVmlld3BvcnQge1xuICBjb25zdHJ1Y3Rvcih3YXRjaE1hcCkge1xuICAgIHRoaXMuaGlzdG9yeSA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5O1xuICAgIHRoaXMubWFwQ29udHJvbCA9IHdhdGNoTWFwLnBpZ2Vvbk1hcC5tYXBDb250cm9sOy8vY2FtZXJhQ29udHJvbFxuICAgIHRoaXMucGlnZW9uTWFwID0gd2F0Y2hNYXAucGlnZW9uTWFwO1xuICAgIHRoaXMud2F0Y2hNYXAgPSB3YXRjaE1hcDtcbiAgICB0aGlzLnBvaW50cyA9IFtdO1xuICAgIHRoaXMucG9pbnQgPSBuZXcgUG9pbnQodGhpcyk7XG4gICAgdGhpcy50aGluZyA9IG5ldyBUaGluZyh0aGlzKTtcbiAgICB0aGlzLmFyZWEgPSBuZXcgQXJlYSh0aGlzKTtcbiAgICB0aGlzLmxpbmUgPSBuZXcgTGluZSh0aGlzKTtcbiAgICB0aGlzLnRyaWdnZXIgPSBuZXcgVHJpZ2dlckFyZWEodGhpcyk7XG4gICAgdGhpcy50cmFmZmljQXJlYSA9IG5ldyBUcmFmZmljQXJlYSh0aGlzKTtcbiAgICB0aGlzLmluaXRDb250cm9scygpO1xuICAgIHRoaXMubGlzdGVuRG9tRXZlbnRzKCk7XG4gICAgdGhpcy5saXN0ZW5TZWxlY3RlZENoYW5nZSgpOy8v6YCJ5Lit5LqL5Lu2XG4gICAgdGhpcy5pbml0Q29udG9ybEV2ZW50cygpOy8v5o6n5Yi25pS55Y+Y5LqL5Lu2XG4gICAgdGhpcy5hZGREcmFnRXZlbnRzKCk7XG4gIH1cblxuICAvL+WIneWni+WMluaLluWKqOW3peWFt1xuICBpbml0Q29udHJvbHMoKSB7XG4gICAgY29uc3QgdGhpbmdDb250cm9sID0gbmV3IFRIUkVFLlRyYW5zZm9ybUNvbnRyb2xzKHRoaXMucGlnZW9uTWFwLmNhbWVyYSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21hcCcpKTtcbiAgICB0aGlzLnBpZ2Vvbk1hcC53b3JsZC5hZGQodGhpbmdDb250cm9sKTtcbiAgICB0aGlzLmRvbUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFwJyk7XG4gICAgdGhpbmdDb250cm9sLnNldFNpemUoMyk7XG4gICAgdGhpbmdDb250cm9sLnNldFNwYWNlKCdsb2NhbCcpO1xuICAgIHRoaXMucGlnZW9uTWFwLmlucHV0SGFuZGxlci5yYXljYXN0ZXIubGluZVByZWNpc2lvbiA9IDI7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmNvbnRyb2xzID0ge307XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmNvbnRyb2xzLnRoaW5nQ29udHJvbCA9IHRoaW5nQ29udHJvbDtcbiAgICAvL3RhcmdldENvbnRyb2xcbiAgICBjb25zdCB0YXJnZXRQb2ludENvbnRvcmwgPSBuZXcgVEhSRUUuVHJhbnNmb3JtQ29udHJvbHModGhpcy5waWdlb25NYXAuY2FtZXJhLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFwJykpO1xuICAgIHRoaXMucGlnZW9uTWFwLndvcmxkLmFkZCh0YXJnZXRQb2ludENvbnRvcmwpO1xuICAgIHRhcmdldFBvaW50Q29udG9ybC5zZXRTaXplKDMpO1xuICAgIHRhcmdldFBvaW50Q29udG9ybC5zZXRTcGFjZSgnbG9jYWwnKTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuY29udHJvbHMudGFyZ2V0UG9pbnRDb250b3JsID0gdGFyZ2V0UG9pbnRDb250b3JsO1xuICAgIHRoaXMuY29udHJvbHMgPSB7dGhpbmdDb250cm9sLCB0YXJnZXRQb2ludENvbnRvcmx9O1xuICB9XG5cblxuICAvL+ebkeWQrHZpZXdwb3J0ZHJvcOeahOS6i+S7tlxuICBsaXN0ZW5Eb21FdmVudHMoKSB7XG4gICAgdGhpcy5kb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdvdmVyJywgKGUpID0+IHtcbiAgICAgIC8v6I635Y+W6byg5qCH5b2T5YmN5L2N572u77yM5pu05paw5bCE57q/5L2N572uXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjb25zdCByZWN0ID0gdGhpcy5kb21FbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgY29uc3QgeCA9IGUuY2xpZW50WCAtIHJlY3QubGVmdDtcbiAgICAgIGNvbnN0IHkgPSBlLmNsaWVudFkgLSByZWN0LnRvcDtcbiAgICAgIHRoaXMucGlnZW9uTWFwLmlucHV0SGFuZGxlci5tb3VzZS5zZXQoeCwgeSk7XG4gICAgfSk7XG4gICAgdGhpcy5kb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2Ryb3AnLCAoZSkgPT4ge1xuICAgICAgLy/mt7vliqDniankvZNcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmICh3aW5kb3cuZ2xvYmFsU3RhdGUuX2RyYWdJdGVtKSB7XG4gICAgICAgIHRoaXMudGhpbmcuYWRkVGhpbmcod2luZG93Lmdsb2JhbFN0YXRlLl9kcmFnSXRlbSk7XG4gICAgICAgIGRlbGV0ZSB3aW5kb3cuZ2xvYmFsU3RhdGUuX2RyYWdJdGVtO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy/nm5HlkKzniankvZPooqvpgInkuK3nm7jlhbPpgLvovpFcbiAgbGlzdGVuU2VsZWN0ZWRDaGFuZ2UoKSB7XG4gICAgY29uc3QgdGhpbmdDb250cm9sID0gdGhpcy5jb250cm9scy50aGluZ0NvbnRyb2w7XG4gICAgY29uc3QgdGFyZ2V0UG9pbnRDb250b3JsID0gdGhpcy5jb250cm9scy50YXJnZXRQb2ludENvbnRvcmw7XG5cbiAgICB0aGlzLmRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCBlID0+IHtcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHt0eXBlOiAnZGVzZWxlY3QnLCBzb3VyY2U6ICdtb3VzZSd9KTtcbiAgICB9KTtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5pbnB1dEhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLnRlc3RUaGluZyhlLmRhdGEpOy8v6ZKI5a+55Lik56eN5o6n5Yi25Zmo55qE6YCJ5Lit5LiN5b+F5q+P5Liq6YO957uR5a6a5LqL5Lu2LOeJueS+i1xuICAgICAgaWYgKGRhdGEub2JqZWN0ICYmIGRhdGEuY29vcmQpIHtcbiAgICAgICAgZGF0YS5vYmplY3QuY29vcmQgPSBkYXRhLmNvb3JkO1xuICAgICAgICBpZiAodGhpcy5iaW5kaW5nKSB7Ly/nu5HlrprnirbmgIHkuIvmlK/mnrbov5Tlm57ngrnlh7vnmoRJRFxuICAgICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgICAgICAgIHR5cGU6ICdjaG9vc2VUaGluZycsXG4gICAgICAgICAgICBvYmplY3Q6IGRhdGEub2JqZWN0LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvL+ebruagh+eCueiiq+mAieS4reS4jeinpuWPkVxuICAgICAgICBpZiAoZGF0YS5vYmplY3QubmFtZSA9PT0gJ3RhcmdldFBvaW50Jykge1xuICAgICAgICAgIHRoaXMuc2VsZWN0VGFyZ2V0UG9pbnQoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRhdGEub2JqZWN0Lm5hbWUgPT09ICd0aGluZycpIHsvL+ayoemAieS4re+8jOaIluiAheW3sue7j+mAieS4reWQjOS4gOeJqeS9k1xuICAgICAgICAgIHRoaXMuc2VsZWN0VGhpbmcoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHsvL+inpuWPkeeCueWHu+S6i+S7tlxuICAgICAgICAgIHR5cGU6ICdjbGljaycsXG4gICAgICAgICAgY29vcmQ6IGRhdGEuY29vcmQsXG4gICAgICAgICAgb2JqZWN0OiBkYXRhLm9iamVjdFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvL+ebkeWQrOmAieS4reS6i+S7tlxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdzZWxlY3RjaGFuZ2UnLCAoZSkgPT4ge1xuICAgICAgY29uc3QgdGhpbmcgPSBlLm1lc2g7XG4gICAgICB0aGluZ0NvbnRyb2wuZGV0YWNoKCk7XG4gICAgICB0YXJnZXRQb2ludENvbnRvcmwuZGV0YWNoKCk7XG4gICAgICB0aGluZ0NvbnRyb2wuYXR0YWNoKHRoaW5nLmNvb3JkaW5hdGVzID8gdGhpbmcucGFyZW50IDogdGhpbmcpO1xuICAgICAgdGhpcy50b2dnbGVUaGluZyhlLm1lc2gsIGUucHJlKTtcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5zZWxlY3R0aGluZyA9IHRoaW5nO1xuICAgIH0pO1xuICAgIC8v55uR5ZCs6YCJ5Lit5LqL5Lu2XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdFRhcmdldFBvaW50JywgKGUpID0+IHtcbiAgICAgIGNvbnN0IHRoaW5nID0gZS5tZXNoO1xuICAgICAgdGFyZ2V0UG9pbnRDb250b3JsLmRldGFjaCgpO1xuICAgICAgdGFyZ2V0UG9pbnRDb250b3JsLmF0dGFjaCh0aGluZy5jb29yZGluYXRlcyA/IHRoaW5nLnBhcmVudCA6IHRoaW5nKTtcbiAgICB9KTtcbiAgICAvL+ebkeWQrOWPlua2iOmAieS4reS6i+S7tlxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdkZXNlbGVjdCcsIChlKSA9PiB7XG4gICAgICB0YXJnZXRQb2ludENvbnRvcmwuZGV0YWNoKCk7XG4gICAgICB0aGluZ0NvbnRyb2wuZGV0YWNoKCk7XG4gICAgfSk7XG4gIH1cblxuICAvL+mAieS4reebruagh+eCueeahOaXtuWAmVxuICBzZWxlY3RUYXJnZXRQb2ludChkYXRhKSB7XG4gICAgY29uc3QgdGhpbmdDb250cm9sID0gdGhpcy5jb250cm9scy50aGluZ0NvbnRyb2w7XG5cbiAgICAvL+WFiOmAieS4reWvueW6lOeahG9iamVjdFxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHt0eXBlOiAnZGVzZWxlY3QnLCBvYmplY3Q6IGRhdGEub2JqZWN0fSk7Ly/pgInmi6nnm67moIfngrnlkIzml7bkuZ/lj5bmtohcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnc2VsZWN0Y2hhbmdlJyxcbiAgICAgIHByZTogd2luZG93Lmdsb2JhbFN0YXRlLnNlbGVjdHRoaW5nLFxuICAgICAgbWVzaDogZGF0YS5vYmplY3QudGhpbmcsXG4gICAgICBuYW1lOiBkYXRhLm9iamVjdC50aGluZy5uYW1lXG4gICAgfSk7XG4gICAgLy/pgInkuK3niankvZPkuovku7ZcbiAgICBpZiAodGhpbmdDb250cm9sLm9iamVjdCAmJiBkYXRhLm9iamVjdC5wYXJlbnQgPT09IHRoaW5nQ29udHJvbC5vYmplY3QpIHJldHVybjsvL+W3sue7j+mAieS4reS6hueJqeS9k1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgIHR5cGU6ICdzZWxlY3RUYXJnZXRQb2ludCcsXG4gICAgICBtZXNoOiBkYXRhLm9iamVjdCxcbiAgICAgIG5hbWU6IGRhdGEub2JqZWN0Lm5hbWVcbiAgICB9KTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvL+mAieS4reeJqeS9k1xuICBzZWxlY3RUaGluZyhkYXRhKSB7XG4gICAgY29uc3QgdGhpbmdDb250cm9sID0gdGhpcy5jb250cm9scy50aGluZ0NvbnRyb2w7XG4gICAgaWYgKHRoaW5nQ29udHJvbC5vYmplY3QgJiYgZGF0YS5vYmplY3QucGFyZW50ID09PSB0aGluZ0NvbnRyb2wub2JqZWN0KSByZXR1cm47XG4gICAgLy9hZ2VudOWvueixoeiiq+mAieS4re+8jOayoeaciee7keWumuWvueixoeaIluiAheW3sue7j+mAieS4rVxuICAgIC8v6YCJ5Lit54mp5L2T5LqL5Lu2XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe3R5cGU6ICdkZXNlbGVjdCcsIG9iamVjdDogZGF0YS5vYmplY3R9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnc2VsZWN0Y2hhbmdlJyxcbiAgICAgIHByZTogd2luZG93Lmdsb2JhbFN0YXRlLnNlbGVjdHRoaW5nLFxuICAgICAgbWVzaDogZGF0YS5vYmplY3QsXG4gICAgICBuYW1lOiBkYXRhLm9iamVjdC5uYW1lXG4gICAgfSk7XG4gIH1cblxuICAvL+WIh+aNoueJqeS9k+aYvuW9sVxuICB0b2dnbGVUaGluZyhub3csIHByZSkge1xuXG4gIH1cblxuICAvL+a1i+ivlVxuICB0ZXN0VGhpbmcoZGF0YSkge1xuICAgIGlmICghZGF0YS5vYmplY3QpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvb3JkOiBkYXRhLmNvb3JkLFxuICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGRhdGEub2JqZWN0Lm5hbWUgPT09ICd0YXJnZXRQb2ludCcgfHwgZGF0YS5vYmplY3QubmFtZSA9PT0gJ3RoaW5nJykge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBlbHNlIGlmIChkYXRhLmNvb3JkKSB7XG4gICAgICByZXR1cm4gdGhpcy50ZXN0VGhpbmcoe1xuICAgICAgICBvYmplY3Q6IGRhdGEub2JqZWN0LnBhcmVudCxcbiAgICAgICAgY29vcmQ6IGRhdGEuY29vcmQsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog55uR5ZCs5o6n5Yi25LqL5Lu2XG4gICAqL1xuICBpbml0Q29udG9ybEV2ZW50cygpIHtcbiAgICBjb25zdCB0aGluZ0NvbnRyb2wgPSB0aGlzLmNvbnRyb2xzLnRoaW5nQ29udHJvbDtcbiAgICBjb25zdCB0YXJnZXRQb2ludENvbnRvcmwgPSB0aGlzLmNvbnRyb2xzLnRhcmdldFBvaW50Q29udG9ybDtcbiAgICB0aGluZ0NvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHtcbiAgICAgIHRoaW5nQ29udHJvbC51cGRhdGUoKTtcbiAgICAgIGlmICghZS50YXJnZXQub2JqZWN0KSByZXR1cm47Ly/msqHmnInnu5HlrprlsLHop6blj5FjaGFuZ2VcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgICAgdHlwZTogJ2NoYW5nZXRoaW5nJyxcbiAgICAgICAgbW9kZTogZS50YXJnZXQuZ2V0TW9kZSgpLFxuICAgICAgICBuYW1lOiBlLnRhcmdldC5vYmplY3QuY2hpbGRyZW5bMF0udXNlckRhdGEubmFtZSxcbiAgICAgICAgbWVzaDogZS50YXJnZXQub2JqZWN0LmNoaWxkcmVuWzBdXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB0YXJnZXRQb2ludENvbnRvcmwuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHtcbiAgICAgIHRhcmdldFBvaW50Q29udG9ybC51cGRhdGUoKTtcbiAgICAgIGlmICghZS50YXJnZXQub2JqZWN0KSByZXR1cm47Ly/msqHmnInnu5HlrprlsLHop6blj5FjaGFuZ2VcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgICAgdHlwZTogJ2NoYW5nZVRhcmdldFBvaW50JyxcbiAgICAgICAgbW9kZTogZS50YXJnZXQuZ2V0TW9kZSgpLFxuICAgICAgICBuYW1lOiBlLnRhcmdldC5vYmplY3QuY2hpbGRyZW5bMF0udXNlckRhdGEubmFtZSxcbiAgICAgICAgbWVzaDogZS50YXJnZXQub2JqZWN0LmNoaWxkcmVuWzBdXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICAvL+aOp+WItuWcsOWbvuWcqOaLluWKqOaXtuS4jeWKqFxuICAgIHRoaW5nQ29udHJvbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZURvd24nLCAoZSkgPT4ge1xuICAgICAgdGhpcy5tYXBDb250cm9sLmRpc2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5tYXBDb250cm9sLm1vdXNlU3RhdHVzID0gbnVsbDsvL+S4jeWcqOWQhOenjem8oOagh+eKtuaAgeS4i1xuICAgIH0pO1xuICAgIHRoaW5nQ29udHJvbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZVVwJywgKGUpID0+IHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLm1hcENvbnRyb2wuZGlzYWJsZSA9IGZhbHNlO1xuICAgICAgfSwgMTApO1xuICAgIH0pO1xuICAgIHRhcmdldFBvaW50Q29udG9ybC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZURvd24nLCAoZSkgPT4ge1xuICAgICAgdGhpcy5tYXBDb250cm9sLmRpc2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5tYXBDb250cm9sLm1vdXNlU3RhdHVzID0gbnVsbDsvL+S4jeWcqOWQhOenjem8oOagh+eKtuaAgeS4i1xuICAgIH0pO1xuICAgIHRhcmdldFBvaW50Q29udG9ybC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZVVwJywgKGUpID0+IHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLm1hcENvbnRyb2wuZGlzYWJsZSA9IGZhbHNlO1xuICAgICAgfSwgMTApO1xuICAgIH0pO1xuICB9XG5cbiAgLy/mi5bmi73kuovku7ZcbiAgYWRkRHJhZ0V2ZW50cygpIHtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5pbnB1dEhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZSA9PiB7XG4gICAgICBsZXQge2RhdGF9ID0gZSB8fCB7fTtcbiAgICAgIGxldCB7b2JqZWN0fSA9IGRhdGEgfHwge31cbiAgICAgIGlmIChvYmplY3QgJiYgdGhpcy50ZXN0RHJhZ09iamVjdChvYmplY3QpKSB7XG4gICAgICAgIHRoaXMubWFwQ29udHJvbC5kaXNhYmxlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kcmFnZ2luZ0l0ZW0gPSBlLmRhdGEub2JqZWN0O1xuICAgICAgICB0aGlzLm1hcENvbnRyb2wuZGlzYWJsZSA9IHRydWU7IC8v5o6n5Yi25Zyw5Zu+5o6n5Yi25ZmoXG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5waWdlb25NYXAuaW5wdXRIYW5kbGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBlID0+IHtcbiAgICAgIGlmICh0aGlzLmRyYWdnaW5nSXRlbSkge1xuICAgICAgICB0aGlzLmRyYWdnaW5nSXRlbSA9IG51bGw7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMubWFwQ29udHJvbC5kaXNhYmxlID0gZmFsc2U7XG4gICAgICAgIH0sIDEwKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5pbnB1dEhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZSA9PiB7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgIHR5cGU6ICdtb3VzZW92ZXInLFxuICAgICAgICBjb29yZDogZS5jb29yZFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvL+a1i+ivleaYr+WQpuaYr+aUr+aMgeebtOaOpeaLluaLveeahOexu+Wei1xuICB0ZXN0RHJhZ09iamVjdChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0Ll9saXN0ZW5lcnMgJiYgb2JqZWN0Ll9saXN0ZW5lcnNbJ2RyYWdvdmVyJ107XG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBWaWV3cG9ydDtcbiIsImNvbnN0IFRIUkVFID0gd2luZG93LlRIUkVFO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJlYSB7XG4gIGNvbnN0cnVjdG9yKHZpZXdwb3J0KSB7XG4gICAgdGhpcy5waWdlb25NYXAgPSB2aWV3cG9ydC5waWdlb25NYXA7XG4gICAgdGhpcy5pbml0TWVzaCgpO1xuICAgIHRoaXMubGlzdGVuRXZlbnRzKCk7XG4gIH1cblxuICBsaXN0ZW5FdmVudHMoKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2FkZEFyZWEnLCBlID0+IHtcbiAgICAgIGNvbnN0IHsgdGhpbmcsIGxvY2F0aW9uLCBpbmRleCB9ID0gZS5kYXRhO1xuICAgICAgdGhpcy5hZGRBcmVhKGxvY2F0aW9uLCBpbmRleCwgdGhpbmcpO1xuICAgIH0pO1xuICAgICAgXG4gIH1cblxuICBpbml0TWVzaCgpIHtcbiAgICB0aGlzLm1lc2hzID0ge307XG4gICAgY29uc3QgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoIHtcbiAgICAgIHRyYW5zcGFyZW50OiB0cnVlLCBzaWRlOiBUSFJFRS5Eb3VibGVTaWRlLFxuICAgICAgb3BhY2l0eTogMC4zLCBjb2xvcjogMHhmMGZmZjUgfSApIDtcbiAgICB0aGlzLm1lc2hzWydhcmVhJ10gPSBuZXcgVEhSRUUuTWVzaCggbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCksIG1hdGVyaWFsICk7XG4gIH1cblxuICAvKipcbiAgICAgKiDov5jljp/niankvZPmiYDmnInnmoTljLrln59cbiAgICAgKi9cbiAgYWRkQXJlYXMoZGF0YSwgdGhpbmcpIHtcbiAgICBjb25zdCB7IGluaXRsb2NhdGlvbiwgc3RhcnRQb2ludFR5cGUsIGdvYWwgfSA9IGRhdGE7XG4gICAgaWYgKHN0YXJ0UG9pbnRUeXBlID09PSAnYXJlYScpIHsvL+i1t+eCueWMuuWfn+mHjee7mFxuICAgICAgdGhpcy5hZGRBcmVhKGluaXRsb2NhdGlvbiwgJ3N0YXJ0JywgdGhpbmcpO1xuICAgIH1cbiAgICBnb2FsLnNjcmlwdC5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICBpZiAoaXRlbS50eXBlID09PSAnYXJlYScpIHtcbiAgICAgICAgdGhpcy5hZGRBcmVhKGl0ZW0ubG9jYXRpb24sIGluZGV4LCB0aGluZyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgICBcbiAgLyoqXG4gICAgICog5re75Yqg5Yy65Z+f55qE5pWw5o2uIGtleeW9k+WJjeWMuuWfn+eahElE5oiW6ICFaW5kZXhcbiAgICAgKi9cbiAgYWRkQXJlYShsb2NhdGlvbiwgaW5kZXgsIHRoaW5nKSB7XG4gICAgaWYgKCFsb2NhdGlvblsxXSB8fCAhbG9jYXRpb25bMF0pIHJldHVybjtcbiAgICB0aGluZy5hcmVhcyA9IHRoaW5nLmFyZWFzIHx8IFtdO1xuICAgIGxldCBhcmVhO1xuICAgIGlmICh0aGluZy5hcmVhc1tpbmRleF0pIHtcbiAgICAgIGFyZWEgPSB0aGluZy5hcmVhc1tpbmRleF07XG4gICAgfSBlbHNlIHtcbiAgICAgIGFyZWEgPSB0aGlzLm1lc2hzWydhcmVhJ10uY2xvbmUoKTtcbiAgICAgIGFyZWEuZ2VvbWV0cnkgPSBhcmVhLmdlb21ldHJ5LmNsb25lKCk7XG4gICAgICBhcmVhLmdlb21ldHJ5LnZlcnRpY2VzTmVlZFVwZGF0ZSA9IHRydWU7XG4gICAgICBhcmVhLmRyYXdNb2RlID0gVEhSRUUuVHJpYW5nbGVTdHJpcERyYXdNb2RlO1xuICAgIH1cbiAgICBjb25zdCBwb2ludHMgPSB0aGlzLmdlbmVyYXRlUG9pbnRzKGxvY2F0aW9uWzBdLCBsb2NhdGlvblsxXSk7XG4gICAgYXJlYS5nZW9tZXRyeS5hZGRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShwb2ludHMsIDMpKTtcbiAgICBhcmVhLmdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ0JveCgpO1xuICAgIHRoaXMucGlnZW9uTWFwLmFkZEF0Q29vcmRpbmF0ZShhcmVhLCBbbG9jYXRpb25bMF0ueCwgbG9jYXRpb25bMF0ueSwgMC4yXSk7XG4gICAgdGhpbmcuYXJlYXNbaW5kZXhdID0gYXJlYTtcbiAgfVxuXG4gIGdlbmVyYXRlUG9pbnRzKGxlZnQsIHJpZ2h0KSB7XG4gICAgaWYgKCFsZWZ0IHx8ICFyaWdodCkgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW10pO1xuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcbiAgICAgIDAsIDAsIDAuMixcbiAgICAgIHJpZ2h0LnggLSBsZWZ0LngsIDAsIDAsXG4gICAgICAwLCByaWdodC55IC0gbGVmdC55LCAwLFxuICAgICAgcmlnaHQueCAtIGxlZnQueCwgcmlnaHQueSAtIGxlZnQueSwgMFxuICAgIF0pO1xuICB9XG59IiwiY29uc3QgVEhSRUUgPSB3aW5kb3cuVEhSRUU7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2ludCB7XG4gIGNvbnN0cnVjdG9yKHZpZXdwb3J0KSB7XG4gICAgdGhpcy5waWdlb25NYXAgPSB2aWV3cG9ydC5waWdlb25NYXA7XG4gICAgdGhpcy5pbml0TWVzaCgpO1xuICAgIHRoaXMubGlzdGVuQWRkUG9pbnQoKTtcbiAgfVxuXG4gIGluaXRNZXNoKCkge1xuICAgIHRoaXMubWVzaHMgPSB7fTtcbiAgICB0aGlzLm1lc2hzWydwb2ludCddID0gbmV3IFRIUkVFLk1lc2goIG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeSgwLjIsIDgsIDgpLCBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoIHsgY29sb3I6IDB4ZmZmZjAwIH0gKSApO1xuICAgIHRoaXMubWVzaHNbJ3N0YXJ0UG9pbnQnXSA9IG5ldyBUSFJFRS5NZXNoKCBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoMC4yLCA4LCA4KSwgbmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKCB7IGNvbG9yOiAweGYwZmY1MCB9ICkgKTtcbiAgICB0aGlzLm1lc2hzWyd0YXJnZXRQb2ludCddID0gbmV3IFRIUkVFLkdyb3VwKCk7XG4gICAgY29uc3QgYm94ID0gbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLkJveEdlb21ldHJ5KCAxLjcsIDAuOCwgMS4yICksIG5ldyBUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbCggeyBjb2xvcjogMHhmZjBmZmYgfSApICk7XG4gICAgY29uc3QgYXJyb3dHZW9tZXRyeSA9IG5ldyBUSFJFRS5HZW9tZXRyeSgpO1xuICAgIGFycm93R2VvbWV0cnkudmVydGljZXMucHVzaChcbiAgICAgIG5ldyBUSFJFRS5WZWN0b3IzKCAwLCAwLCAwICksXG4gICAgICBuZXcgVEhSRUUuVmVjdG9yMyggMiwgMCwgMCApLFxuICAgICAgbmV3IFRIUkVFLlZlY3RvcjMoIDIsIDAsIDAgKSxcbiAgICAgIG5ldyBUSFJFRS5WZWN0b3IzKCAxLjcsIDAuNCwgMCApLFxuICAgICAgbmV3IFRIUkVFLlZlY3RvcjMoIDIsIDAsIDAgKSxcbiAgICAgIG5ldyBUSFJFRS5WZWN0b3IzKCAxLjcsIC0wLjQsIDAgKVxuICAgICk7XG4gICAgY29uc3QgYXJyb3cgPSBuZXcgVEhSRUUuTGluZVNlZ21lbnRzKGFycm93R2VvbWV0cnksIG5ldyBUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbCggeyBjb2xvcjogMHhmZjBmZmYgfSApICk7XG4gICAgdGhpcy5tZXNoc1sndGFyZ2V0UG9pbnQnXS5ib3ggPSBib3g7XG4gICAgdGhpcy5tZXNoc1sndGFyZ2V0UG9pbnQnXS5hcnJvdyA9IGFycm93O1xuICAgIHRoaXMubWVzaHNbJ3RhcmdldFBvaW50J10uYWRkKGJveCk7XG4gICAgdGhpcy5tZXNoc1sndGFyZ2V0UG9pbnQnXS5hZGQoYXJyb3cpO1xuICB9XG5cbiAgLy/nm5HlkKzmt7vliqDngrnkuovku7YgIFxuICBsaXN0ZW5BZGRQb2ludCgpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignYWRkUG9pbnQnLCBlID0+IHtcbiAgICAgIHRoaXMuYWRkUG9pbnQoZS5kYXRhLCBlLmRhdGEudGhpbmcpO1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdhZGRTdGFydFBvaW50JywgZSA9PiB7XG4gICAgICB0aGlzLmFkZFN0YXJ0UG9pbnQoZS5kYXRhLCBlLmRhdGEudGhpbmcpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAgICog6L+Y5Y6fb2JqZWN0IOacrOi6q+aJgOacieeahOeCuVxuICAgICAqL1xuICBhZGRQb2ludHMob2JqZWN0LCB0aGluZykge1xuICAgIGNvbnN0IGdvYWxzID0gb2JqZWN0LmdvYWwuc2NyaXB0O1xuICAgIGZvciAoY29uc3QgeCBpbiBnb2Fscykge1xuICAgICAgY29uc3QgZ29hbCA9IGdvYWxzW3hdO1xuICAgICAgZ29hbC5sb2NhdGlvbi5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIHRoaXMuYWRkUG9pbnQoe1xuICAgICAgICAgIHBvaW50SW5kZXg6IGluZGV4LFxuICAgICAgICAgIGdvYWxJbmRleDogeCxcbiAgICAgICAgICBvcmllbnRhdGlvbjogZ29hbC5vcmllbnRhdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogaXRlbSB9LCB0aGluZyk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgLy/ov5jljp/otbfngrnnmoTngrlcbiAgICBjb25zdCBpbml0bG9jYXRpb24gPSBvYmplY3QuaW5pdGxvY2F0aW9uO1xuICAgIGluaXRsb2NhdGlvbi5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICBpZiAoaW5kZXggIT09IDApIHsvL+aooeWei+i1t+eCueS4jemcgOimgeeCuVxuICAgICAgICB0aGlzLmFkZFN0YXJ0UG9pbnQoe1xuICAgICAgICAgIHBvaW50SW5kZXg6IGluZGV4LFxuICAgICAgICAgIGxvY2F0aW9uOiBpdGVtLFxuICAgICAgICB9LCB0aGluZyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICAgKiDmm7TmlLnngrnnmoTkvY3nva7vvIzlhbPogZTnmoRhZ2VudO+8jOesrOWHoOS4queCuVxuICAgICAqL1xuICBhZGRQb2ludChkYXRhLCB0aGluZykge1xuICAgIGlmICghdGhpbmcucG9pbnRzKXRoaW5nLnBvaW50cyA9IFtdO1xuICAgIGxldCBtZXNoID0gdGhpcy5nZXRQb2ludEZyb21NZXNoKHRoaW5nLnBvaW50cywgZGF0YSk7XG4gICAgaWYgKCFtZXNoKSB7XG4gICAgICBtZXNoID0gdGhpcy5hZGROZXdQb2ludChkYXRhLCB0aGluZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGlnZW9uTWFwLmFkZEF0Q29vcmRpbmF0ZShtZXNoLCBbZGF0YS5sb2NhdGlvbi54LCBkYXRhLmxvY2F0aW9uLnksIDAuNV0pO1xuICAgIH1cbiAgICBtZXNoLnVzZXJEYXRhLnBvaW50SW5kZXggPSBkYXRhLnBvaW50SW5kZXg7XG4gICAgbWVzaC51c2VyRGF0YS50aGluZyA9IHRoaW5nO1xuICAgIG1lc2gudXNlckRhdGEuZ29hbEluZGV4ID0gcGFyc2VJbnQoZGF0YS5nb2FsSW5kZXgpO1xuICAgIHJldHVybiBtZXNoO1xuICB9XG5cbiAgYWRkUG9pbnRFdmVudHMocG9pbnQpIHtcbiAgICBwb2ludC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIChlKSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUuY29vcmQ7XG4gICAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUocG9pbnQsIFtjb29yZC54LCBjb29yZC55LCAwLjVdKTtcbiAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5kaXNwYXRjaEV2ZW50KHtcbiAgICAgICAgdHlwZTogJ2NoYW5nZVBvaW50JyxcbiAgICAgICAgY29vcmQ6IGNvb3JkLFxuICAgICAgICBwb2ludDogcG9pbnRcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAgICog5paw55Sf5Lqn55qE54K5XG4gICAgICovXG4gIGFkZE5ld1BvaW50KGRhdGEsIHRoaW5nKSB7XG4gICAgY29uc3Qgb2JqZWN0ID0gd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5vYmplY3RzW3RoaW5nLnVzZXJEYXRhLm5hbWVdO1xuICAgIGxldCBtZXNoO1xuICAgIGlmIChvYmplY3Qucm9sZS5uYW1lID09PSAnZ3BsdXMnKSB7XG4gICAgICBtZXNoID0gdGhpcy5tZXNoc1sndGFyZ2V0UG9pbnQnXS5jbG9uZSgpO1xuICAgICAgbWVzaC5uYW1lID0gJ3RhcmdldFBvaW50JztcbiAgICAgIG1lc2gudGhpbmcgPSB0aGluZztcbiAgICB9IGVsc2Uge1xuICAgICAgbWVzaCA9IHRoaXMubWVzaHNbJ3BvaW50J10uY2xvbmUoKTtcbiAgICAgIG1lc2gubmFtZSA9ICdwb2ludCc7XG4gICAgICBtZXNoLmdlb21ldHJ5ID0gbWVzaC5nZW9tZXRyeS5jbG9uZSgpO1xuICAgICAgdGhpcy5hZGRQb2ludEV2ZW50cyhtZXNoKTtcbiAgICB9XG4gICAgdGhpbmcucG9pbnRzLnB1c2gobWVzaCk7XG4gICAgdGhpcy5waWdlb25NYXAuYWRkQXRDb29yZGluYXRlKG1lc2gsIFtkYXRhLmxvY2F0aW9uLngsIGRhdGEubG9jYXRpb24ueSwgMC41XSk7XG4gICAgbWVzaC5wYXJlbnQucm90YXRpb24ueiA9IGRhdGEub3JpZW50YXRpb24gJiYgZGF0YS5vcmllbnRhdGlvblsyXSB8fCAwO1xuICAgICAgICBcbiAgICByZXR1cm4gbWVzaDtcbiAgfVxuXG4gIC8qKlxuICAgICAqIOa3u+WKoOi1t+eCuSDkvY3nva7vvIzlhbPogZTnmoRhZ2VudO+8jOesrOWHoOS4queCuVxuICAgICAqL1xuICBhZGRTdGFydFBvaW50KGRhdGEsIHRoaW5nKSB7XG4gICAgaWYgKCF0aGluZy5zdGFydFBvaW50cyl0aGluZy5zdGFydFBvaW50cyA9IFtdO1xuICAgIGxldCBtZXNoID0gdGhpcy5nZXRQb2ludEZyb21NZXNoKHRoaW5nLnN0YXJ0UG9pbnRzLCBkYXRhKTtcbiAgICBpZiAoIW1lc2gpIHtcbiAgICAgIG1lc2ggPSB0aGlzLm1lc2hzWydzdGFydFBvaW50J10uY2xvbmUoKTtcbiAgICAgIHRoaW5nLnN0YXJ0UG9pbnRzLnB1c2gobWVzaCk7XG4gICAgICBtZXNoLnVzZXJEYXRhLnRoaW5nID0gdGhpbmc7XG4gICAgICB0aGlzLmFkZFBvaW50RXZlbnRzKG1lc2gpO1xuICAgICAgdGhpcy5waWdlb25NYXAuYWRkQXRDb29yZGluYXRlKG1lc2gsIFtkYXRhLmxvY2F0aW9uLngsIGRhdGEubG9jYXRpb24ueSwgMC41XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGlnZW9uTWFwLm1vdmVUb0Nvb3JkaW5hdGUobWVzaCwgW2RhdGEubG9jYXRpb24ueCwgZGF0YS5sb2NhdGlvbi55LCAwLjVdKTtcbiAgICB9XG5cbiAgICBtZXNoLm5hbWUgPSAncG9pbnQnO1xuICAgIG1lc2gudXNlckRhdGEucG9pbnRJbmRleCA9IGRhdGEucG9pbnRJbmRleDtcbiAgICBtZXNoLnVzZXJEYXRhLmdvYWxJbmRleCA9ICdzdGFydCc7XG4gICAgcmV0dXJuIG1lc2g7XG4gIH1cblxuICAvKipcbiAgICAgKiDojrflj5blt7Lnu4/lrZjlnKjnmoTngrlcbiAgICAgKi9cbiAgZ2V0UG9pbnRGcm9tTWVzaChwb2ludHMsIGRhdGEpIHtcbiAgICBmb3IgKGNvbnN0IHggaW4gcG9pbnRzKSB7XG4gICAgICBpZiAocG9pbnRzW3hdLnVzZXJEYXRhLnBvaW50SW5kZXggPT09IGRhdGEucG9pbnRJbmRleCAmJlxuICAgICAgICAgICAgIHBvaW50c1t4XS51c2VyRGF0YS5nb2FsSW5kZXggPT09IGRhdGEuZ29hbEluZGV4KSB7XG4gICAgICAgIHJldHVybiBwb2ludHNbeF07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG59IiwiaW1wb3J0IE9iakxvYWRlciBmcm9tICcuL09iakxvYWRlcic7XG5jb25zdCBUSFJFRSA9IHdpbmRvdy5USFJFRTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRoaW5nIHtcbiAgY29uc3RydWN0b3Iodmlld3BvcnQpIHtcbiAgICB0aGlzLnBpZ2Vvbk1hcCA9IHZpZXdwb3J0LnBpZ2Vvbk1hcDtcbiAgICB0aGlzLmluaXRNZXNocygpO1xuICAgIHRoaXMubGlzdGVuRXZlbnRzKCk7XG4gICAgdGhpcy5vYmpMb2FkZXIgPSBuZXcgT2JqTG9hZGVyKCk7XG4gIH1cblxuICBsaXN0ZW5FdmVudHMoKSB7XG4gICAgLy/liKDpmaRcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignZGVsZXRlVGhpbmcnLCAoZSkgPT4ge1xuICAgICAgaWYgKCB3aW5kb3cuZ2xvYmFsU3RhdGUuc2VsZWN0dGhpbmcpIHtcbiAgICAgICAgbGV0IHRoaW5nID0gd2luZG93Lmdsb2JhbFN0YXRlLnNlbGVjdHRoaW5nO1xuICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgICAgdHlwZTogJ2Rlc2VsZWN0J1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5kZWxldGVUaGluZyh0aGluZyk7XG4gICAgICAgIHRoaW5nID0gbnVsbDtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgICAgIHR5cGU6ICdyZW1vdmVUaGluZycsXG4gICAgICAgICAgZGF0YTogZVxuICAgICAgICB9KTtcbiAgICAgICAgICAgICAgIFxuICAgICAgfVxuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdkZXNlbGVjdCcsIChlKSA9PiB7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2VsZWN0dGhpbmcgPSBudWxsO1xuICAgIH0pO1xuICB9XG5cbiAgLy/liKDpmaTniankvZNcbiAgZGVsZXRlVGhpbmcodGhpbmcpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuY29udHJvbHMudGhpbmdDb250cm9sLmRldGFjaCgpO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5jb250cm9scy50YXJnZXRQb2ludENvbnRvcmwuZGV0YWNoKCk7XG4gICAgY29uc3Qgb2JqZWN0TmFtZSA9IHRoaW5nLnVzZXJEYXRhLm5hbWU7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmhpc3RvcnkucmVtb3ZlT2JqZWN0KG9iamVjdE5hbWUpO1xuICAgIC8vcG9pbnRzXG4gICAgdGhpbmcucG9pbnRzICYmIHRoaW5nLnBvaW50cy5tYXAoaXRlbSA9PiB7XG4gICAgICBpdGVtLnBhcmVudC5wYXJlbnQgJiYgaXRlbS5wYXJlbnQucGFyZW50LnJlbW92ZShpdGVtLnBhcmVudCk7XG4gICAgfSk7XG4gICAgdGhpbmcuc3RhcnRQb2ludHMgJiYgdGhpbmcuc3RhcnRQb2ludHMubWFwKGl0ZW0gPT4ge1xuICAgICAgaXRlbS5wYXJlbnQucGFyZW50LnJlbW92ZShpdGVtLnBhcmVudCk7XG4gICAgfSk7XG4gICAgLy9hcmVhXG4gICAgaWYgKHRoaW5nLmFyZWFzKSB7XG4gICAgICBmb3IgKGNvbnN0IHggaW4gdGhpbmcuYXJlYXMpIHtcbiAgICAgICAgdGhpbmcuYXJlYXNbeF0ucGFyZW50LnJlbW92ZSh0aGluZy5hcmVhc1t4XSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8vbGluZVxuICAgIHRoaW5nLmxpbmUgJiYgdGhpcy5waWdlb25NYXAucmVtb3ZlKHRoaW5nLmxpbmUpO1xuICAgIGRlbGV0ZSB0aGluZy5saW5lO1xuICAgIC8vdGhpbmdcbiAgICB0aGluZy5wYXJlbnQucGFyZW50LnJlbW92ZSh0aGluZy5wYXJlbnQpO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS50aGluZ3MgPSB3aW5kb3cuZ2xvYmFsU3RhdGUudGhpbmdzLmZpbHRlcihpdGVtID0+IGl0ZW0udXVpZCAhPT0gdGhpbmcudXVpZCk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgdHlwZTogJ2RldGFjaFRoaW5nJyxcbiAgICB9KTtcbiAgICBpZiAodGhpbmcudXNlckRhdGEucm9sZS5uYW1lID09PSAnZ3BsdXMnKSB7XG4gICAgICBkZWxldGUgd2luZG93Lmdsb2JhbFN0YXRlLmhpc3RvcnkuWEc7XG4gICAgfVxuICB9XG5cbiAgLy/liJ3lp4vljJbniankvZPmqKHlnotcbiAgaW5pdE1lc2hzKCkge1xuICAgIHRoaXMubWVzaHMgPSBbXTtcbiAgICB0aGlzLm1lc2hzWyd0aGluZyddID0gbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLkJveEdlb21ldHJ5KDEsIDIsIDEpLCBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoeyBjb2xvcjogMHg4OGFhY2MsIG9wYWNpdHk6IDAuOCwgdHJhbnNwYXJlbnQ6IHRydWUgfSkpO1xuICB9XG5cbiAgLy/mt7vliqDlr7nlupTnmoTniankvZPliLDlnLDlm77kuK1cbiAgYWRkVGhpbmcoZGF0YSwgcG9zLCBjYWxsYmFjaykge1xuICAgIGlmIChkYXRhLnJvbGUubmFtZSA9PT0gJ2dwbHVzJykge1xuICAgICAgcmV0dXJuIHRoaXMuYWRkWEcoZGF0YSwgcG9zLCBjYWxsYmFjayk7XG4gICAgfVxuICAgIGNvbnN0IGFwcGVhcmFuY2UgPSBkYXRhLnJvbGUuYXBwZWFyYW5jZTtcbiAgICBsZXQgY29vcmQ7XG4gICAgaWYgKCFwb3MpIHtcbiAgICAgIGNvbnN0IG9iaiA9IHRoaXMucGlnZW9uTWFwLmlucHV0SGFuZGxlci5nZXRIb3ZlcmVkRWxlbWVudCh0cnVlKTtcbiAgICAgIGlmICghb2JqKSB7cmV0dXJufVxuICAgICAgY29vcmQgPSBvYmoucG9pbnQuY2xvbmUoKTtcbiAgICAgIGNvb3JkLnggLT0gdGhpcy5waWdlb25NYXAud29ybGQucG9zaXRpb24ueDtjb29yZC55IC09IHRoaXMucGlnZW9uTWFwLndvcmxkLnBvc2l0aW9uLnk7XG4gICAgICBjb29yZC56ID0gYXBwZWFyYW5jZS5oZWlnaHQgLyAyO1xuICAgICAgZGF0YS5pbml0bG9jYXRpb24gPSBbY29vcmRdO1xuICAgICAgZGF0YS5pbml0b3JpZW50ID0gWzAsIDAsIDBdO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb29yZCA9IHBvcztcbiAgICB9XG4gICAgICAgIFxuICAgIGNvbnN0IG1lc2ggPSB0aGlzLm1lc2hzWyd0aGluZyddLmNsb25lKCk7XG4gICAgbWVzaC5nZW9tZXRyeSA9IG5ldyBUSFJFRS5Cb3hHZW9tZXRyeShhcHBlYXJhbmNlLmxlbmd0aCwgYXBwZWFyYW5jZS53aWR0aCwgYXBwZWFyYW5jZS5oZWlnaHQpO1xuICAgIG1lc2gubmFtZSA9ICd0aGluZyc7XG4gICAgbWVzaC5hbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUobWVzaCwgW2Nvb3JkLngsIGNvb3JkLnksIGFwcGVhcmFuY2UuaGVpZ2h0IC8gMl0pO1xuICAgIG1lc2gudXNlckRhdGEgPSBkYXRhO1xuICAgIG1lc2gucGFyZW50LnJvdGF0aW9uLnogPSBkYXRhLmluaXRvcmllbnQgJiYgKGRhdGEuaW5pdG9yaWVudFsyXSB8fCAwKTtcbiAgICAvL+a3u+WKoOS6hueJqeS9k+i/m+WFpVxuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS50aGluZ3MucHVzaChtZXNoKTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnYWRkVGhpbmcnXG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmhpc3RvcnkuYWRkT2JqZWN0KGRhdGEpO1xuICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKG1lc2gpO1xuICAgIHJldHVybiBtZXNoO1xuICB9XG5cbiAgYWRkWEcoZGF0YSwgcG9zLCBjYWxsYmFjaykge1xuICAgIGlmICghd2luZG93Lmdsb2JhbFN0YXRlLm1vZGVsc1sneGcnXSkge1xuICAgICAgdGhpcy5vYmpMb2FkZXIubG9hZFhHKCkudGhlbigoWEcpID0+IHtcbiAgICAgICAgdGhpcy5hZGRYRyhkYXRhLCBwb3MsIGNhbGxiYWNrKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgY29vcmQ7XG4gICAgaWYgKCFwb3MpIHtcbiAgICAgIGNvbnN0IG9iaiA9IHRoaXMucGlnZW9uTWFwLmlucHV0SGFuZGxlci5nZXRIb3ZlcmVkRWxlbWVudCh0cnVlKTtcbiAgICAgIGlmICghb2JqKSB7cmV0dXJufVxuICAgICAgY29vcmQgPSBvYmoucG9pbnQuY2xvbmUoKTtcbiAgICAgIGNvb3JkLnggLT0gdGhpcy5waWdlb25NYXAud29ybGQucG9zaXRpb24ueDtjb29yZC55IC09IHRoaXMucGlnZW9uTWFwLndvcmxkLnBvc2l0aW9uLnk7XG4gICAgICBkYXRhLm5hbWUgPSAneGcnOy8v55Sf5oiQ5paw55qERGF0YVxuICAgICAgZGF0YS5pbml0bG9jYXRpb24gPSBbY29vcmRdO1xuICAgICAgZGF0YS5pbml0b3JpZW50ID0gWzAsIDAsIDBdO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb29yZCA9IHBvcztcbiAgICB9XG5cbiAgICBpZiAoIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5LlhHKSB7XG4gICAgICB0aGlzLmRlbGV0ZVRoaW5nKHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5LlhHKTtcbiAgICB9XG4gICAgY29uc3QgbWVzaCA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5tb2RlbHNbJ3hnJ10uY2xvbmUoKTtcbiAgICBtZXNoLm5hbWUgPSAndGhpbmcnO1xuICAgIG1lc2gudXNlckRhdGEgPSBkYXRhO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5LlhHID0gbWVzaDtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUobWVzaCwgW2Nvb3JkLngsIGNvb3JkLnksIGNvb3JkLnpdKTtcbiAgICBtZXNoLnBhcmVudC5yb3RhdGlvbi56ID0gZGF0YS5pbml0b3JpZW50ICYmIChkYXRhLmluaXRvcmllbnRbMl0gfHwgMCk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmhpc3RvcnkuYWRkT2JqZWN0KGRhdGEpO1xuICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKG1lc2gpO1xuICAgIHJldHVybiBtZXNoO1xuICB9XG59IiwiY29uc3QgVEhSRUUgPSB3aW5kb3cuVEhSRUU7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPYmpMb2FkZXIge1xuICBsb2FkWEcoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIGNvbnN0IG10bExvYWRlciA9IG5ldyBUSFJFRS5NVExMb2FkZXIoKTtcbiAgICAgIG10bExvYWRlci5zZXRDcm9zc09yaWdpbih0cnVlKTtcbiAgICAgIG10bExvYWRlci5zZXRQYXRoKCcvL2V0LWFzaW0tcGxhdGZvcm0ub3NzLWNuLXNoYW5naGFpLmFsaXl1bmNzLmNvbS9zdHVkaW8tY2FyLW1vZGVscy9tb2RlbHMvJyk7XG4gICAgICBtdGxMb2FkZXIubG9hZCgneXVubS5tdGwnLCBmdW5jdGlvbiggbWF0ZXJpYWxzICkge1xuICAgICAgICBjb25zdCBvYmpMb2FkZXIgPSBuZXcgVEhSRUUuT0JKTG9hZGVyKCk7Ly/liqDovb3mqKHlnotcbiAgICAgICAgLy8gb2JqTG9hZGVyLnNldENyb3NzT3JpZ2luKHRydWUpO1xuICAgICAgICBvYmpMb2FkZXIuc2V0TWF0ZXJpYWxzKCBtYXRlcmlhbHMgKTtcbiAgICAgICAgb2JqTG9hZGVyLmxvYWQoJy8vZXQtYXNpbS1wbGF0Zm9ybS5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL3N0dWRpby1jYXItbW9kZWxzL21vZGVscy95dW5tLm9iaicsIGZ1bmN0aW9uKG1lc2gpIHtcbiAgICAgICAgICB3aW5kb3cubWVzaCA9IG1lc2g7XG4gICAgICAgICAgbWVzaC5jaGlsZHJlblswXS5wb3NpdGlvbi54ID0gLSA2MztcbiAgICAgICAgICBtZXNoLmNoaWxkcmVuWzBdLnBvc2l0aW9uLnogPSA0Ni44O1xuICAgICAgICAgIG1lc2guY2hpbGRyZW5bMF0ucG9zaXRpb24ueSA9IC0wLjM1O1xuICAgICAgICAgIG1lc2guc2NhbGUuYWRkU2NhbGFyKDAuNSk7XG4gICAgICAgICAgbWVzaC5yb3RhdGlvbi54ID0gTWF0aC5QSSAvIDI7XG4gICAgICAgICAgaWYgKCF3aW5kb3cuZ2xvYmFsU3RhdGUubW9kZWxzKXdpbmRvdy5nbG9iYWxTdGF0ZS5tb2RlbHMgPSB7fTtcbiAgICAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUubW9kZWxzWyd4ZyddID0gbWVzaDtcbiAgICAgICAgICByZXNvbHZlKG1lc2gpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59IiwiY29uc3QgVEhSRUUgPSB3aW5kb3cuVEhSRUU7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaW5lIHtcbiAgY29uc3RydWN0b3Iodmlld3BvcnQpIHtcbiAgICB0aGlzLnBpZ2Vvbk1hcCA9IHZpZXdwb3J0LnBpZ2Vvbk1hcDtcbiAgICB0aGlzLmluaXRNZXNoKCk7XG4gICAgdGhpcy5saXN0ZW5FdmVudHMoKTtcbiAgfVxuXG4gIGxpc3RlbkV2ZW50cygpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignYWRkQXJlYScsIGUgPT4ge1xuICAgICAgY29uc3QgeyB0aGluZyB9ID0gZS5kYXRhO1xuICAgICAgdGhpcy51cGRhdGUodGhpbmcpO1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdhZGRQb2ludCcsIGUgPT4ge1xuICAgICAgY29uc3QgeyB0aGluZyB9ID0gZS5kYXRhO1xuICAgICAgdGhpcy51cGRhdGUodGhpbmcpO1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2V0aGluZycsIGUgPT4ge1xuICAgICAgY29uc3QgdGhpbmcgPSBlLm1lc2g7XG4gICAgICB0aGlzLnVwZGF0ZSh0aGluZyk7XG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ3VwZGF0ZUxpbmUnLCBlID0+IHtcbiAgICAgIGNvbnN0IHRoaW5nID0gZS5tZXNoO1xuICAgICAgdGhpcy51cGRhdGUodGhpbmcpO1xuICAgIH0pO1xuICB9XG5cbiAgaW5pdE1lc2goKSB7XG4gICAgdGhpcy5tYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCgge1xuICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXG4gICAgICBvcGFjaXR5OiAwLjMsIGNvbG9yOiAweGYwZmYwNSB9KTtcbiAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCk7XG4gICAgdGhpcy5nZW9tZXRyeS5hZGRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShuZXcgRmxvYXQzMkFycmF5KFswLCAwLCAtMC4xLCAwLjEsIDAuMSwgLTAuMV0pLCAzKSk7XG4gICAgdGhpcy5saW5lID0gbmV3IFRIUkVFLkxpbmUodGhpcy5nZW9tZXRyeSwgdGhpcy5tYXRlcmlhbCApO1xuICB9XG5cbiAgLyoqXG4gICAgICog6L+Y5Y6f54mp5L2T5omA5pyJ55qE5Yy65Z+fXG4gICAgICovXG4gIHVwZGF0ZSh0aGluZykge1xuICAgIGlmICh0aGluZy51c2VyRGF0YS5yb2xlLm5hbWUgPT09ICdncGx1cycpIHJldHVybjtcbiAgICBjb25zdCBvYmplY3QgPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm9iamVjdHNbdGhpbmcudXNlckRhdGEubmFtZV07XG4gICAgaWYgKCF0aGluZy5saW5lKSB7Ly/msqHmnInnur/mt7vliqDnur9cbiAgICAgIHRoaXMuYWRkTGluZSh0aGluZyk7XG4gICAgfVxuICAgIGNvbnN0IGxpbmUgPSB0aGluZy5saW5lO1xuICAgIGNvbnN0IGdvYWxzID0gb2JqZWN0LmdvYWwuc2NyaXB0O1xuICAgIGNvbnN0IHBvc2l0aW9ucyA9IFtdO1xuICAgIGlmIChnb2Fscy5sZW5ndGggPCAxKSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgYmFzZVhZWiA9IG9iamVjdC5pbml0bG9jYXRpb25bMF07XG4gICAgcG9zaXRpb25zLnB1c2goMCwgMCwgMCk7XG4gICAgZm9yIChjb25zdCB4IGluIGdvYWxzKSB7XG4gICAgICBjb25zdCBsb2NhdGlvbiA9IGdvYWxzW3hdLmxvY2F0aW9uWzBdO1xuICAgICAgcG9zaXRpb25zLnB1c2goXG4gICAgICAgIGxvY2F0aW9uLnggLSBiYXNlWFlaLngsXG4gICAgICAgIGxvY2F0aW9uLnkgLSBiYXNlWFlaLnksXG4gICAgICAgIDApO1xuICAgIH1cbiAgICBsaW5lLmdlb21ldHJ5LmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKG5ldyBGbG9hdDMyQXJyYXkocG9zaXRpb25zKSwgMykpO1xuICAgIGxpbmUuZ2VvbWV0cnkuY29tcHV0ZUJvdW5kaW5nQm94KCk7XG4gICAgdGhpcy5waWdlb25NYXAubW92ZVRvQ29vcmRpbmF0ZShsaW5lLCBbYmFzZVhZWi54LCBiYXNlWFlaLnksIDAuNV0pO1xuICB9XG5cbiAgYWRkTGluZSh0aGluZykge1xuICAgIHRoaW5nLmxpbmUgPSB0aGlzLmxpbmUuY2xvbmUoKTtcbiAgICB0aGluZy5saW5lLmdlb21ldHJ5ID0gdGhpcy5nZW9tZXRyeS5jbG9uZSgpO1xuICAgIHRoaXMucGlnZW9uTWFwLmFkZEF0Q29vcmRpbmF0ZSh0aGluZy5saW5lLCBbMCwgMF0pO1xuICB9XG5cbn0iLCJjb25zdCBUSFJFRSA9IHdpbmRvdy5USFJFRTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyaWdnZXIge1xuICBjb25zdHJ1Y3Rvcih2aWV3cG9ydCkge1xuICAgIHRoaXMucGlnZW9uTWFwID0gdmlld3BvcnQucGlnZW9uTWFwO1xuICAgIHRoaXMuaW5pdE1lc2goKTtcbiAgICB0aGlzLmxpc3RlbkV2ZW50cygpO1xuICB9XG5cbiAgaW5pdE1lc2goKSB7XG4gICAgdGhpcy5nZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIHRoaXMubGluZU1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHsgY29sb3I6IDB4ZGQ1MzlhIH0pO1xuICAgIHRoaXMubGluZUhvdmVyTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoeyBjb2xvcjogMHhmYWZmZWIgfSk7XG4gICAgdGhpcy5saW5lID0gbmV3IFRIUkVFLkxpbmUodGhpcy5nZW9tZXRyeSwgdGhpcy5saW5lTWF0ZXJpYWwgKTtcbiAgICAgICAgXG4gICAgdGhpcy5wb2ludE1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKHsgY29sb3I6IDB4ZGQ1MzlhIH0pO1xuICAgIHRoaXMucG9pbnRIb3Zlck1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKHsgY29sb3I6IDB4ZmFmZmViIH0pO1xuICAgIHRoaXMucG9pbnQgPSBuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoMC4yLCA4LCA4KSwgdGhpcy5wb2ludE1hdGVyaWFsKTtcbiAgfVxuXG4gIC8v5LqL5Lu25Y+Y5YyWXG4gIGxpc3RlbkV2ZW50cygpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignYWRkVHJpZ2dlclBvaW50JywgZSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUuY29vcmQ7XG4gICAgICBjb25zdCBvYmplY3QgPSBlLm9iamVjdDtcbiAgICAgIHRoaXMuYWRkUG9pbnQoeyBjb29yZCwgb2JqZWN0IH0pO1xuICAgICAgdGhpcy51cGRhdGVMaW5lKG9iamVjdCk7XG4gICAgICB0aGlzLnVwZGF0ZVNjaGVtYShvYmplY3QpO1xuICAgIH0pO1xuICAgXG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2Rlc2VsZWN0JywgZSA9PiB7XG4gICAgICB0aGlzLmxlYXZlT2JqZWN0KHRoaXMuc2VsZWN0aW5nLCB0cnVlKTsvL+W8uuWItuWPlua2iOmAieS4rVxuICAgICAgdGhpcy5zZWxlY3RpbmcgPSBudWxsO1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdkZWxldGVUaGluZycsIGUgPT4ge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0aW5nKSB7XG4gICAgICAgIHRoaXMuZGVsZXRlVHJpZ2dlcih0aGlzLnNlbGVjdGluZyk7XG4gICAgICAgIHRoaXMuc2VsZWN0aW5nID0gbnVsbDtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoeyB0eXBlOiAnZGVzZWxlY3QnIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCd0cmlnZ2VyTW91c2Vtb3ZlJywgZSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUuY29vcmQ7XG4gICAgICBjb25zdCBvYmplY3QgPSBlLm9iamVjdDtcbiAgICAgIGlmICghb2JqZWN0LmhvdmVyUG9pbnQpIHsvL+i3n+maj+m8oOagh+enu+WKqOeahOeCuVxuICAgICAgICBvYmplY3QuaG92ZXJQb2ludCA9IHRoaXMuYWRkSG92ZXJQb2ludCh7IGNvb3JkLCBvYmplY3QgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUob2JqZWN0LmhvdmVyUG9pbnQsIFtjb29yZC54LCBjb29yZC55XSk7XG4gICAgICB9XG4gICAgICB0aGlzLnVwZGF0ZUxpbmUob2JqZWN0KTtcbiAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZVRyaWdnZXIob2JqZWN0KSB7XG4gICAgZGVsZXRlIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEudHJpZ2dlcnNbb2JqZWN0Lm5hbWVdO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS50cmlnZ2Vycy5maWx0ZXIoaXRlbSA9PiBpdGVtLnV1aWQgIT09IG9iamVjdC51dWlkKTtcbiAgICBvYmplY3QucG9pbnRzLm1hcChpdGVtID0+IHtcbiAgICAgIGl0ZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcigpO1xuICAgICAgdGhpcy5waWdlb25NYXAucmVtb3ZlKGl0ZW0pO1xuICAgIH0pO1xuICAgIG9iamVjdC5wb2ludHMgPSBudWxsO1xuICAgIG9iamVjdC5yZW1vdmVFdmVudExpc3RlbmVyKCk7XG4gICAgdGhpcy5waWdlb25NYXAucmVtb3ZlKG9iamVjdCk7XG4gIH1cblxuICAvL+aWsOWinuaWsHRyaWdnZXJcbiAgYWRkTmV3VHJpZ2dlcih0cmlnZ2VyKSB7XG4gICAgY29uc3QgdHJpZ2dlck9iamVjdCA9IHRoaXMubGluZS5jbG9uZSgpO1xuICAgIHRyaWdnZXJPYmplY3QuZ2VvbWV0cnkgPSB0aGlzLmxpbmUuZ2VvbWV0cnkuY2xvbmUoKTtcbiAgICB0cmlnZ2VyT2JqZWN0LnBvaW50cyA9IFtdO1xuICAgIHRyaWdnZXJPYmplY3QubmFtZSA9ICd0cmlnZ2VyXycgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBjb25zdCBzY2hlbWEgPSB0cmlnZ2VyO1xuICAgIHNjaGVtYS5uYW1lID0gdHJpZ2dlck9iamVjdC5uYW1lO1xuICAgIHRyaWdnZXJPYmplY3QudXNlckRhdGEgPSB0cmlnZ2VyO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5oaXN0b3J5Lm1vZGlmeVRyaWdnZXIoc2NoZW1hKTsvL+a3u+WKoHNjaGVtYeWIsOWFqOWxgOWPmOmHj1xuICAgIHJldHVybiB0cmlnZ2VyT2JqZWN0O1xuICB9XG5cbiAgLy/ov5jljp90cmlnZ2VyXG4gIGFkZFRyaWdnZXIoZGF0YSkge1xuICAgIGNvbnN0IHRyaWdnZXJPYmplY3QgPSB0aGlzLmxpbmUuY2xvbmUoKTtcbiAgICB0cmlnZ2VyT2JqZWN0Lmdlb21ldHJ5ID0gdGhpcy5saW5lLmdlb21ldHJ5LmNsb25lKCk7XG4gICAgdHJpZ2dlck9iamVjdC5wb2ludHMgPSBbXTtcbiAgICB0cmlnZ2VyT2JqZWN0LnVzZXJEYXRhID0gZGF0YTtcbiAgICB0cmlnZ2VyT2JqZWN0Lm5hbWUgPSBkYXRhLm5hbWU7XG4gICAgcmV0dXJuIHRyaWdnZXJPYmplY3Q7XG4gIH1cblxuICAvL+a3u+WKoOeCuSBcbiAgYWRkUG9pbnQoeyBjb29yZCwgb2JqZWN0IH0pIHtcbiAgICBjb25zdCBwb2ludCA9IHRoaXMucG9pbnQuY2xvbmUoKTtcbiAgICBwb2ludC5uYW1lID0gJ3RyaWdnZXJBcmVhUG9pbnQnO1xuICAgIHRoaXMucGlnZW9uTWFwLmFkZEF0Q29vcmRpbmF0ZShwb2ludCwgW2Nvb3JkLngsIGNvb3JkLnksIDAuNV0pO1xuICAgIG9iamVjdC5wb2ludHMgfHwgKG9iamVjdC5wb2ludHMgPSBbXSk7XG4gICAgaWYgKG9iamVjdC5wb2ludHMubGVuZ3RoIDwgMSkgdGhpcy5hZGRTZWxlY3RFdmVudHMob2JqZWN0KTtcbiAgICB0aGlzLmFkZFBvaW50U2VsZWN0RXZlbnRzKHBvaW50KTtcbiAgICBwb2ludC5saW5lID0gb2JqZWN0O1xuICAgIG9iamVjdC5wb2ludHMucHVzaChwb2ludCk7XG4gIH1cblxuICAvL+a3u+WKoOeCuSBcbiAgYWRkSG92ZXJQb2ludCh7IGNvb3JkLCBvYmplY3QgfSkge1xuICAgIGNvbnN0IHBvaW50ID0gdGhpcy5wb2ludC5jbG9uZSgpO1xuICAgIHBvaW50Lm5hbWUgPSAndHJpZ2dlckFyZWFQb2ludCc7XG4gICAgdGhpcy5waWdlb25NYXAuYWRkQXRDb29yZGluYXRlKHBvaW50LCBbY29vcmQueCwgY29vcmQueSwgMC41XSk7XG4gICAgcG9pbnQubGluZSA9IG9iamVjdDtcbiAgICByZXR1cm4gcG9pbnQ7XG4gIH1cblxuICAvL+mAieS4reS6i+S7tlxuICBhZGRTZWxlY3RFdmVudHMob2JqZWN0KSB7XG4gICAgb2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XG4gICAgICB0aGlzLnNlbGVjdE9iamVjdChvYmplY3QpO1xuICAgIH0pO1xuICAgIG9iamVjdC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBlID0+IHtcbiAgICAgIGlmICghdGhpcy5ob3ZlclBvaW50KVxuICAgICAgICB0aGlzLmhvdmVyT2JqZWN0KG9iamVjdCk7XG4gICAgfSk7XG4gICAgb2JqZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgZSA9PiB7XG4gICAgICB0aGlzLmxlYXZlT2JqZWN0KG9iamVjdCk7XG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnRyaWdnZXJzLnB1c2gob2JqZWN0KTtcbiAgfVxuXG4gIC8v54K555qE5LqL5Lu25aSE55CGXG4gIGFkZFBvaW50U2VsZWN0RXZlbnRzKG9iamVjdCkge1xuICAgIG9iamVjdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgICAgaWYgKG9iamVjdC5saW5lLmhvdmVyUG9pbnQgJiYgb2JqZWN0LmxpbmUuaG92ZXJQb2ludC52aXNpYmxlKSByZXR1cm47Ly/ov5nnp43mg4XlhrXkuI3opoHpgInkuK1cbiAgICAgIHRoaXMuc2VsZWN0T2JqZWN0KG9iamVjdC5saW5lKTtcbiAgICB9KTtcbiAgICBvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZSA9PiB7XG4gICAgICB0aGlzLmhvdmVyT2JqZWN0KG9iamVjdC5saW5lKTtcbiAgICB9KTtcbiAgICBvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCBlID0+IHtcbiAgICAgIHRoaXMubGVhdmVPYmplY3Qob2JqZWN0LmxpbmUpO1xuICAgIH0pO1xuICAgIG9iamVjdC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIGUgPT4ge1xuICAgICAgY29uc3QgY29vcmQgPSBlLmNvb3JkO1xuICAgICAgdGhpcy5waWdlb25NYXAuYWRkQXRDb29yZGluYXRlKG9iamVjdCwgW2Nvb3JkLngsIGNvb3JkLnksIDAuNV0pO1xuICAgICAgdGhpcy51cGRhdGVMaW5lKG9iamVjdC5saW5lKTtcbiAgICAgIHRoaXMudXBkYXRlU2NoZW1hKG9iamVjdC5saW5lKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNlbGVjdE9iamVjdChvYmplY3QpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnZGVzZWxlY3QnLFxuICAgICAgb2JqZWN0OiBvYmplY3RcbiAgICB9KTtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnc2VsZWN0VHJpZ2dlckFyZWEnLFxuICAgICAgb2JqZWN0OiBvYmplY3QsXG4gICAgfSk7XG4gICAgdGhpcy5zZWxlY3RpbmcgPSBvYmplY3Q7XG4gICAgdGhpcy5ob3Zlck9iamVjdChvYmplY3QpO1xuICB9XG5cbiAgaG92ZXJPYmplY3QobGluZSkge1xuICAgIGxpbmUubWF0ZXJpYWwgPSB0aGlzLmxpbmVIb3Zlck1hdGVyaWFsO1xuICAgIGxpbmUucG9pbnRzLm1hcChpdGVtID0+IHtcbiAgICAgIGl0ZW0ubWF0ZXJpYWwgPSB0aGlzLnBvaW50SG92ZXJNYXRlcmlhbDtcbiAgICB9KTtcbiAgfVxuXG4gIC8v5oGi5aSN5Y6f5qC377yM6YCJ5Lit5oCB5LiN5oGi5aSNXG4gIGxlYXZlT2JqZWN0KGxpbmUsIGZvcmNlKSB7XG4gICAgaWYgKCFmb3JjZSAmJiBsaW5lID09PSB0aGlzLnNlbGVjdGluZykgcmV0dXJuOy8v5by66KGM56a75byAXG4gICAgaWYgKCFsaW5lKSByZXR1cm47Ly/msqHmnInpgInkuK1cbiAgICBsaW5lLm1hdGVyaWFsID0gdGhpcy5saW5lTWF0ZXJpYWw7XG4gICAgbGluZS5wb2ludHMubWFwKGl0ZW0gPT4ge1xuICAgICAgaXRlbS5tYXRlcmlhbCA9IHRoaXMucG9pbnRNYXRlcmlhbDtcbiAgICB9KTtcbiAgfVxuXG4gIC8v5pu05paw57q/XG4gIHVwZGF0ZUxpbmUob2JqZWN0KSB7XG4gICAgdGhpcy5iYXNlWFlaID0gb2JqZWN0LnBvaW50c1swXS5wYXJlbnQucG9zaXRpb24uY2xvbmUoKTsvL+abtOaWsOWfuuWHhuS9jee9rlxuICAgIGNvbnN0IHBvaW50cyA9IHRoaXMudXBkYXRlUG9pbnRzKG9iamVjdCk7XG4gICAgb2JqZWN0Lmdlb21ldHJ5LmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKHBvaW50cywgMykpO1xuICAgIG9iamVjdC5nZW9tZXRyeS5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUob2JqZWN0LCBbdGhpcy5iYXNlWFlaLngsIHRoaXMuYmFzZVhZWi55LCB0aGlzLmJhc2VYWVouel0pO1xuICB9XG5cbiAgLy/mm7TmlrBzY2hlbWEgdG9kbzpcbiAgdXBkYXRlU2NoZW1hKG9iamVjdCkge1xuICAgIGNvbnN0IHRyaWdnZXIgPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLnRyaWdnZXJzW29iamVjdC5uYW1lXTtcbiAgICBjb25zdCBwb2ludHMgPSBbXTtcbiAgICBvYmplY3QucG9pbnRzLm1hcChpdGVtID0+IHtcbiAgICAgIHBvaW50cy5wdXNoKGl0ZW0ucGFyZW50LnBvc2l0aW9uKTtcbiAgICB9KTtcbiAgICB0cmlnZ2VyLnBvaW50cyA9IHBvaW50cztcbiAgfVxuXG4gIC8v5pu05paw54K55pWwXG4gIHVwZGF0ZVBvaW50cyhvYmplY3QpIHtcbiAgICBjb25zdCBpdGVtcyA9IG9iamVjdC5wb2ludHM7XG4gICAgY29uc3QgcG9pbnRzID0gW107XG4gICAgaXRlbXMubWFwKGl0ZW0gPT4ge1xuICAgICAgY29uc3QgcG9zaXRpb24gPSBpdGVtLnBhcmVudC5wb3NpdGlvbjtcbiAgICAgIHBvaW50cy5wdXNoKFxuICAgICAgICBwb3NpdGlvbi54IC0gdGhpcy5iYXNlWFlaLngsXG4gICAgICAgIHBvc2l0aW9uLnkgLSB0aGlzLmJhc2VYWVoueSxcbiAgICAgICAgcG9zaXRpb24ueiAtIHRoaXMuYmFzZVhZWi56XG4gICAgICApO1xuICAgIH0pO1xuICAgIGlmIChvYmplY3QuaG92ZXJQb2ludCAmJiBvYmplY3QuaG92ZXJQb2ludC52aXNpYmxlKSB7XG4gICAgICBjb25zdCBob3ZlclBvc2l0aW9uID0gb2JqZWN0LmhvdmVyUG9pbnQucGFyZW50LnBvc2l0aW9uO1xuICAgICAgcG9pbnRzLnB1c2goXG4gICAgICAgIGhvdmVyUG9zaXRpb24ueCAtIHRoaXMuYmFzZVhZWi54LFxuICAgICAgICBob3ZlclBvc2l0aW9uLnkgLSB0aGlzLmJhc2VYWVoueSxcbiAgICAgICAgaG92ZXJQb3NpdGlvbi56IC0gdGhpcy5iYXNlWFlaLnpcbiAgICAgICk7XG4gICAgfVxuICAgIHBvaW50cy5wdXNoKFxuICAgICAgcG9pbnRzWzBdLCBwb2ludHNbMV0sIHBvaW50c1syXVxuICAgICk7XG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkocG9pbnRzKTtcbiAgfVxufSIsImNvbnN0IFRIUkVFID0gd2luZG93LlRIUkVFO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJhZmZpY0FyZWEge1xuICBjb25zdHJ1Y3Rvcih2aWV3cG9ydCkge1xuICAgIHRoaXMucGlnZW9uTWFwID0gdmlld3BvcnQucGlnZW9uTWFwO1xuICAgIHRoaXMuaW5pdE1lc2goKTtcbiAgICB0aGlzLmxpc3RlbkV2ZW50cygpO1xuICB9XG5cbiAgaW5pdE1lc2goKSB7XG4gICAgdGhpcy5nZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIHRoaXMubGluZU1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHsgY29sb3I6IDB4ODJhNmY1IH0pO1xuICAgIHRoaXMubGluZUhvdmVyTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoeyBjb2xvcjogMHhmYWRhZmYgfSk7XG4gICAgdGhpcy5saW5lID0gbmV3IFRIUkVFLkxpbmUodGhpcy5nZW9tZXRyeSwgdGhpcy5saW5lTWF0ZXJpYWwgKTtcbiAgICB0aGlzLnBvaW50TWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoeyBjb2xvcjogMHg4MmE2ZjUgfSk7XG4gICAgdGhpcy5wb2ludEhvdmVyTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoeyBjb2xvcjogMHhmYWRhZmYgfSk7XG4gICAgdGhpcy5wb2ludCA9IG5ldyBUSFJFRS5NZXNoKG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeSgwLjIsIDgsIDgpLCB0aGlzLnBvaW50TWF0ZXJpYWwpO1xuICAgIHRoaXMuYXJlYU1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHsgY29sb3I6IDB4ODJhNmY1LCB0cmFuc3BhcmVudDogdHJ1ZSwgb3BhY2l0eTogMC4yIH0pO1xuICAgIHRoaXMuYXJlYUhvdmVyTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoeyBjb2xvcjogMHhmYWRhZmYsIHRyYW5zcGFyZW50OiB0cnVlLCBvcGFjaXR5OiAwLjYgfSk7XG4gICAgdGhpcy5hcmVhID0gbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCksIHRoaXMuYXJlYU1hdGVyaWFsKTtcbiAgfVxuXG4gIC8v5LqL5Lu25Y+Y5YyWXG4gIGxpc3RlbkV2ZW50cygpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuYWRkRXZlbnRMaXN0ZW5lcignYWRkVHJhZmZpY1BvaW50JywgZSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUuY29vcmQ7XG4gICAgICBjb25zdCBvYmplY3QgPSBlLm9iamVjdDtcbiAgICAgIC8vIHRoaXMuc2VsZWN0T2JqZWN0KG9iamVjdClcbiAgICAgIHRoaXMuYWRkUG9pbnQoeyBjb29yZCwgb2JqZWN0IH0pO1xuICAgICAgdGhpcy51cGRhdGVMaW5lKG9iamVjdCk7XG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2Rlc2VsZWN0JywgZSA9PiB7XG4gICAgICB0aGlzLmxlYXZlT2JqZWN0KHRoaXMuc2VsZWN0aW5nLCB0cnVlKTsvL+W8uuWItuWPlua2iOmAieS4rVxuICAgICAgdGhpcy5zZWxlY3RpbmcgPSBudWxsO1xuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCdkZWxldGVUaGluZycsIGUgPT4ge1xuICAgICAgaWYgKHRoaXMuc2VsZWN0aW5nKSB7XG4gICAgICAgIHRoaXMuZGVsZXRlVHJhZmZpYyh0aGlzLnNlbGVjdGluZyk7XG4gICAgICAgIHRoaXMuc2VsZWN0aW5nID0gbnVsbDtcbiAgICAgICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoeyB0eXBlOiAnZGVzZWxlY3QnIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5hZGRFdmVudExpc3RlbmVyKCd0cmFmZmljTW91c2Vtb3ZlJywgZSA9PiB7XG4gICAgICBjb25zdCBjb29yZCA9IGUuY29vcmQ7XG4gICAgICBjb25zdCBvYmplY3QgPSBlLm9iamVjdDtcbiAgICAgIGlmICghb2JqZWN0LmhvdmVyUG9pbnQpIHsvL+i3n+maj+m8oOagh+enu+WKqOeahOeCuVxuICAgICAgICBvYmplY3QuaG92ZXJQb2ludCA9IHRoaXMuYWRkSG92ZXJQb2ludCh7IGNvb3JkLCBvYmplY3QgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUob2JqZWN0LmhvdmVyUG9pbnQsIFtjb29yZC54LCBjb29yZC55XSk7XG4gICAgICB9XG4gICAgICB0aGlzLnVwZGF0ZUxpbmUob2JqZWN0KTtcbiAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZVRyYWZmaWMob2JqZWN0KSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnRyYWZmaWNBcmVhcy5maWx0ZXIoaXRlbSA9PiBpdGVtLnV1aWQgIT09IG9iamVjdC51dWlkKTtcbiAgICBvYmplY3QucG9pbnRzLm1hcChpdGVtID0+IHtcbiAgICAgIGl0ZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcigpO1xuICAgICAgdGhpcy5waWdlb25NYXAucmVtb3ZlKGl0ZW0pO1xuICAgIH0pO1xuICAgIG9iamVjdC5wb2ludHMgPSBudWxsO1xuICAgIG9iamVjdC5yZW1vdmVFdmVudExpc3RlbmVyKCk7XG4gICAgdGhpcy5waWdlb25NYXAucmVtb3ZlKG9iamVjdCk7XG4gIH1cblxuICAvL+aWsOWinuaWsHRyYWZmaWNcbiAgYWRkTmV3VHJhZmZpYyhpdGVtKSB7XG4gICAgY29uc3QgdHJhZmZpY09iamVjdCA9IHRoaXMubGluZS5jbG9uZSgpO1xuICAgIHRyYWZmaWNPYmplY3QuZ2VvbWV0cnkgPSB0aGlzLmxpbmUuZ2VvbWV0cnkuY2xvbmUoKTtcbiAgICB0cmFmZmljT2JqZWN0LnBvaW50cyA9IFtdO1xuICAgIGNvbnN0IHRyYWZmaWNBcmVhID0gdGhpcy5hcmVhLmNsb25lKCk7XG4gICAgdHJhZmZpY0FyZWEuZ2VvbWV0cnkgPSB0cmFmZmljQXJlYS5nZW9tZXRyeS5jbG9uZSgpO1xuICAgIHRyYWZmaWNPYmplY3QuYWRkKHRyYWZmaWNBcmVhKTtcbiAgICB0cmFmZmljT2JqZWN0LmFyZWEgPSB0cmFmZmljQXJlYTtcbiAgICB0cmFmZmljT2JqZWN0Lm5hbWUgPSBpdGVtLm5hbWU7XG4gICAgdHJhZmZpY09iamVjdC51c2VyRGF0YSA9IGl0ZW07XG4gICAgcmV0dXJuIHRyYWZmaWNPYmplY3Q7XG4gIH1cblxuICAvL+i/mOWOn3RyYWZmaWNcbiAgYWRkVHJhZmZpYyhkYXRhKSB7XG4gICAgY29uc3QgdHJhZmZpY09iamVjdCA9IHRoaXMubGluZS5jbG9uZSgpO1xuICAgIHRyYWZmaWNPYmplY3QuZ2VvbWV0cnkgPSB0aGlzLmxpbmUuZ2VvbWV0cnkuY2xvbmUoKTtcbiAgICB0cmFmZmljT2JqZWN0LnBvaW50cyA9IFtdO1xuICAgIHRyYWZmaWNPYmplY3QudXNlckRhdGEgPSBkYXRhO1xuICAgIHRyYWZmaWNPYmplY3QubmFtZSA9IGRhdGEubmFtZTtcbiAgICByZXR1cm4gdHJhZmZpY09iamVjdDtcbiAgfVxuXG4gIC8v5re75Yqg54K5IOiuvuiuoeWkseivr++8jOatpOWkhOW6lOivpeWPquWBmuaVsOaNruaooeWei+euoeeQhlxuICBhZGRQb2ludCh7IGNvb3JkLCBvYmplY3QgfSkge1xuICAgIGNvbnN0IHBvaW50ID0gdGhpcy5wb2ludC5jbG9uZSgpO1xuICAgIHBvaW50Lm5hbWUgPSAndHJhZmZpY0FyZWFQb2ludCc7XG4gICAgdGhpcy5waWdlb25NYXAuYWRkQXRDb29yZGluYXRlKHBvaW50LCBbY29vcmQueCwgY29vcmQueSwgMC41XSk7XG4gICAgb2JqZWN0LnBvaW50cyB8fCAob2JqZWN0LnBvaW50cyA9IFtdKTtcbiAgICBpZiAob2JqZWN0LnBvaW50cy5sZW5ndGggPCAxKSB0aGlzLmFkZFNlbGVjdEV2ZW50cyhvYmplY3QpO1xuICAgIHRoaXMuYWRkUG9pbnRTZWxlY3RFdmVudHMocG9pbnQpO1xuICAgIHBvaW50LmxpbmUgPSBvYmplY3Q7XG4gICAgb2JqZWN0LnBvaW50cy5wdXNoKHBvaW50KTtcbiAgfVxuXG4gIC8v5re75Yqg54K5IFxuICBhZGRIb3ZlclBvaW50KHsgY29vcmQsIG9iamVjdCB9KSB7XG4gICAgY29uc3QgcG9pbnQgPSB0aGlzLnBvaW50LmNsb25lKCk7XG4gICAgcG9pbnQubmFtZSA9ICd0cmFmZmljQXJlYVBvaW50JztcbiAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUocG9pbnQsIFtjb29yZC54LCBjb29yZC55LCAwLjVdKTtcbiAgICBwb2ludC5saW5lID0gb2JqZWN0O1xuICAgIHJldHVybiBwb2ludDtcbiAgfVxuXG4gIC8v6YCJ5Lit5LqL5Lu2XG4gIGFkZFNlbGVjdEV2ZW50cyhvYmplY3QpIHtcbiAgICBcbiAgfVxuXG4gIC8v54K555qE5LqL5Lu25aSE55CGXG4gIGFkZFBvaW50U2VsZWN0RXZlbnRzKG9iamVjdCkge1xuICAgICBcbiAgICBvYmplY3QuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ292ZXInLCBlID0+IHtcbiAgICAgIGNvbnN0IGNvb3JkID0gZS5jb29yZDtcbiAgICAgIHRoaXMucGlnZW9uTWFwLmFkZEF0Q29vcmRpbmF0ZShvYmplY3QsIFtjb29yZC54LCBjb29yZC55LCAwLjVdKTtcbiAgICAgIHRoaXMudXBkYXRlTGluZShvYmplY3QubGluZSk7XG4gICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICAgIHR5cGU6ICdtb2RpZnlUcmFmZmljQXJlYScsXG4gICAgICAgIG9iamVjdDogb2JqZWN0LmxpbmUsXG4gICAgICAgIGRhdGE6IG9iamVjdC5saW5lLnVzZXJEYXRhXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHNlbGVjdE9iamVjdChvYmplY3QpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuZGlzcGF0Y2hFdmVudCh7XG4gICAgICB0eXBlOiAnZGVzZWxlY3QnXG4gICAgfSk7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgdHlwZTogJ3NlbGVjdFRyYWZmaWNBcmVhJyxcbiAgICAgIG9iamVjdDogb2JqZWN0LFxuICAgIH0pO1xuICAgIHRoaXMuc2VsZWN0aW5nID0gb2JqZWN0O1xuICAgIHRoaXMuaG92ZXJPYmplY3Qob2JqZWN0KTtcbiAgfVxuXG4gIGhvdmVyT2JqZWN0KGxpbmUpIHtcbiAgICBsaW5lLm1hdGVyaWFsID0gdGhpcy5saW5lSG92ZXJNYXRlcmlhbDtcbiAgICBsaW5lLnBvaW50cy5tYXAoaXRlbSA9PiB7XG4gICAgICBpdGVtLm1hdGVyaWFsID0gdGhpcy5wb2ludEhvdmVyTWF0ZXJpYWw7XG4gICAgfSk7XG4gICAgbGluZS5hcmVhLm1hdGVyaWFsID0gdGhpcy5hcmVhSG92ZXJNYXRlcmlhbDtcbiAgfVxuXG4gIC8v5oGi5aSN5Y6f5qC377yM6YCJ5Lit5oCB5LiN5oGi5aSNXG4gIGxlYXZlT2JqZWN0KGxpbmUsIGZvcmNlKSB7XG4gICAgaWYgKCFmb3JjZSAmJiBsaW5lID09PSB0aGlzLnNlbGVjdGluZykgcmV0dXJuOy8v5by66KGM56a75byAXG4gICAgaWYgKCFsaW5lKSByZXR1cm47Ly/msqHmnInpgInkuK1cbiAgICBsaW5lLm1hdGVyaWFsID0gdGhpcy5saW5lTWF0ZXJpYWw7XG4gICAgbGluZS5wb2ludHMubWFwKGl0ZW0gPT4ge1xuICAgICAgaXRlbS5tYXRlcmlhbCA9IHRoaXMucG9pbnRNYXRlcmlhbDtcbiAgICB9KTtcbiAgICBsaW5lLmFyZWEubWF0ZXJpYWwgPSB0aGlzLmFyZWFNYXRlcmlhbDtcbiAgfVxuXG4gIC8v5pu05paw57q/XG4gIHVwZGF0ZUxpbmUob2JqZWN0KSB7XG4gICAgaWYgKG9iamVjdC5wb2ludHMubGVuZ3RoIDwgMSkgcmV0dXJuO1xuICAgIHRoaXMuYmFzZVhZWiA9IG9iamVjdC5wb2ludHNbMF0ucGFyZW50LnBvc2l0aW9uLmNsb25lKCk7Ly/mm7TmlrDln7rlh4bkvY3nva5cbiAgICBjb25zdCBwb2ludHMgPSB0aGlzLnVwZGF0ZVBvaW50cyhvYmplY3QpO1xuICAgIHRoaXMudXBkYXRlQXJlYShvYmplY3QsIHBvaW50cyk7XG4gICAgb2JqZWN0Lmdlb21ldHJ5LmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKG5ldyBGbG9hdDMyQXJyYXkocG9pbnRzKSwgMykpO1xuICAgIG9iamVjdC5nZW9tZXRyeS5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTtcbiAgICB0aGlzLnBpZ2Vvbk1hcC5hZGRBdENvb3JkaW5hdGUob2JqZWN0LCBbdGhpcy5iYXNlWFlaLngsIHRoaXMuYmFzZVhZWi55LCB0aGlzLmJhc2VYWVouel0pO1xuICB9XG5cbiAgLy/mm7TmlrDljLrln59cbiAgdXBkYXRlQXJlYShvYmplY3QsIHBvaW50cykge1xuICAgIGNvbnN0IHsgYXJlYSB9ID0gb2JqZWN0O1xuICAgIGNvbnN0IGVhcmN1dCA9IHdpbmRvdy5XYXRjaE1hcC5lYXJjdXQ7XG4gICAgY29uc3QgaW5kZXhzID0gZWFyY3V0KHBvaW50cywgZmFsc2UsIDMpO1xuICAgIGNvbnN0IHJlcyA9IFtdO1xuICAgIGluZGV4cy5tYXAoKGluZGV4KSA9PiB7XG4gICAgICByZXMucHVzaChwb2ludHNbMyAqIGluZGV4ICsgMF0sIHBvaW50c1szICogaW5kZXggKyAxXSwgcG9pbnRzWzMgKiBpbmRleCArIDJdKTtcbiAgICB9KTtcbiAgICBhcmVhLmdlb21ldHJ5LmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKG5ldyBGbG9hdDMyQXJyYXkocmVzKSwgMykgKTtcbiAgICBhcmVhLmdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpO1xuICB9XG5cbiAgLy/mm7TmlrDngrnmlbBcbiAgdXBkYXRlUG9pbnRzKG9iamVjdCkge1xuICAgIGNvbnN0IGl0ZW1zID0gb2JqZWN0LnBvaW50cztcbiAgICBjb25zdCBwb2ludHMgPSBbXTtcbiAgICBpdGVtcy5tYXAoaXRlbSA9PiB7XG4gICAgICBjb25zdCBwb3NpdGlvbiA9IGl0ZW0ucGFyZW50LnBvc2l0aW9uO1xuICAgICAgcG9pbnRzLnB1c2goXG4gICAgICAgIHBvc2l0aW9uLnggLSB0aGlzLmJhc2VYWVoueCxcbiAgICAgICAgcG9zaXRpb24ueSAtIHRoaXMuYmFzZVhZWi55LFxuICAgICAgICBwb3NpdGlvbi56IC0gdGhpcy5iYXNlWFlaLnpcbiAgICAgICk7XG4gICAgfSk7XG4gICAgaWYgKG9iamVjdC5ob3ZlclBvaW50ICYmIG9iamVjdC5ob3ZlclBvaW50LnZpc2libGUpIHtcbiAgICAgIGNvbnN0IGhvdmVyUG9zaXRpb24gPSBvYmplY3QuaG92ZXJQb2ludC5wYXJlbnQucG9zaXRpb247XG4gICAgICBwb2ludHMucHVzaChcbiAgICAgICAgaG92ZXJQb3NpdGlvbi54IC0gdGhpcy5iYXNlWFlaLngsXG4gICAgICAgIGhvdmVyUG9zaXRpb24ueSAtIHRoaXMuYmFzZVhZWi55LFxuICAgICAgICBob3ZlclBvc2l0aW9uLnogLSB0aGlzLmJhc2VYWVouelxuICAgICAgKTtcbiAgICB9XG4gICAgcG9pbnRzLnB1c2goXG4gICAgICBwb2ludHNbMF0sIHBvaW50c1sxXSwgcG9pbnRzWzJdXG4gICAgKTtcbiAgICByZXR1cm4gKHBvaW50cyk7XG4gIH1cbn0iLCIvKipcbiAqIEBhdXRob3IgYXJvZGljIC8gaHR0cHM6Ly9naXRodWIuY29tL2Fyb2RpY1xuICovXG5cbihmdW5jdGlvbiAoKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciBHaXptb01hdGVyaWFsID0gZnVuY3Rpb24gKHBhcmFtZXRlcnMpIHtcblxuICAgIFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsLmNhbGwodGhpcyk7XG5cbiAgICB0aGlzLmRlcHRoVGVzdCA9IGZhbHNlO1xuICAgIHRoaXMuZGVwdGhXcml0ZSA9IGZhbHNlO1xuICAgIHRoaXMuZm9nID0gZmFsc2U7XG4gICAgdGhpcy5zaWRlID0gVEhSRUUuRnJvbnRTaWRlO1xuICAgIHRoaXMudHJhbnNwYXJlbnQgPSB0cnVlO1xuXG4gICAgdGhpcy5zZXRWYWx1ZXMocGFyYW1ldGVycyk7XG5cbiAgICB0aGlzLm9sZENvbG9yID0gdGhpcy5jb2xvci5jbG9uZSgpO1xuICAgIHRoaXMub2xkT3BhY2l0eSA9IHRoaXMub3BhY2l0eTtcblxuICAgIHRoaXMuaGlnaGxpZ2h0ID0gZnVuY3Rpb24gKGhpZ2hsaWdodGVkKSB7XG5cbiAgICAgIGlmIChoaWdobGlnaHRlZCkge1xuXG4gICAgICAgIHRoaXMuY29sb3Iuc2V0UkdCKDEsIDEsIDApO1xuICAgICAgICB0aGlzLm9wYWNpdHkgPSAxO1xuXG4gICAgICB9IGVsc2Uge1xuXG4gICAgICAgIHRoaXMuY29sb3IuY29weSh0aGlzLm9sZENvbG9yKTtcbiAgICAgICAgdGhpcy5vcGFjaXR5ID0gdGhpcy5vbGRPcGFjaXR5O1xuXG4gICAgICB9XG5cbiAgICB9O1xuXG4gIH07XG5cbiAgR2l6bW9NYXRlcmlhbC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsLnByb3RvdHlwZSk7XG4gIEdpem1vTWF0ZXJpYWwucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gR2l6bW9NYXRlcmlhbDtcblxuXG4gIHZhciBHaXptb0xpbmVNYXRlcmlhbCA9IGZ1bmN0aW9uIChwYXJhbWV0ZXJzKSB7XG5cbiAgICBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbC5jYWxsKHRoaXMpO1xuXG4gICAgdGhpcy5kZXB0aFRlc3QgPSBmYWxzZTtcbiAgICB0aGlzLmRlcHRoV3JpdGUgPSBmYWxzZTtcbiAgICB0aGlzLmZvZyA9IGZhbHNlO1xuICAgIHRoaXMudHJhbnNwYXJlbnQgPSB0cnVlO1xuICAgIHRoaXMubGluZXdpZHRoID0gMTtcblxuICAgIHRoaXMuc2V0VmFsdWVzKHBhcmFtZXRlcnMpO1xuXG4gICAgdGhpcy5vbGRDb2xvciA9IHRoaXMuY29sb3IuY2xvbmUoKTtcbiAgICB0aGlzLm9sZE9wYWNpdHkgPSB0aGlzLm9wYWNpdHk7XG5cbiAgICB0aGlzLmhpZ2hsaWdodCA9IGZ1bmN0aW9uIChoaWdobGlnaHRlZCkge1xuXG4gICAgICBpZiAoaGlnaGxpZ2h0ZWQpIHtcblxuICAgICAgICB0aGlzLmNvbG9yLnNldFJHQigxLCAxLCAwKTtcbiAgICAgICAgdGhpcy5vcGFjaXR5ID0gMTtcblxuICAgICAgfSBlbHNlIHtcblxuICAgICAgICB0aGlzLmNvbG9yLmNvcHkodGhpcy5vbGRDb2xvcik7XG4gICAgICAgIHRoaXMub3BhY2l0eSA9IHRoaXMub2xkT3BhY2l0eTtcblxuICAgICAgfVxuXG4gICAgfTtcblxuICB9O1xuXG4gIEdpem1vTGluZU1hdGVyaWFsLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwucHJvdG90eXBlKTtcbiAgR2l6bW9MaW5lTWF0ZXJpYWwucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gR2l6bW9MaW5lTWF0ZXJpYWw7XG5cblxuICB2YXIgcGlja2VyTWF0ZXJpYWwgPSBuZXcgR2l6bW9NYXRlcmlhbCh7dmlzaWJsZTogZmFsc2UsIHRyYW5zcGFyZW50OiBmYWxzZX0pO1xuXG5cbiAgVEhSRUUuVHJhbnNmb3JtR2l6bW8gPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB0aGlzLmluaXQgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgIFRIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7XG5cbiAgICAgIHRoaXMuaGFuZGxlcyA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xuICAgICAgdGhpcy5waWNrZXJzID0gbmV3IFRIUkVFLk9iamVjdDNEKCk7XG4gICAgICB0aGlzLnBsYW5lcyA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xuICAgICAgdGhpcy5wbGFuZXMudmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICB0aGlzLmFkZCh0aGlzLmhhbmRsZXMpO1xuICAgICAgdGhpcy5hZGQodGhpcy5waWNrZXJzKTtcbiAgICAgIHRoaXMuYWRkKHRoaXMucGxhbmVzKTsvL+S8muaMoeS9j+mAieeCuVxuXG4gICAgICAvLy8vIFBMQU5FU1xuXG4gICAgICB2YXIgcGxhbmVHZW9tZXRyeSA9IG5ldyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5KDUwLCA1MCwgMiwgMik7XG4gICAgICB2YXIgcGxhbmVNYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7dmlzaWJsZTogZmFsc2UsIHNpZGU6IFRIUkVFLkRvdWJsZVNpZGV9KTtcblxuICAgICAgdmFyIHBsYW5lcyA9IHtcbiAgICAgICAgXCJYWVwiOiBuZXcgVEhSRUUuTWVzaChwbGFuZUdlb21ldHJ5LCBwbGFuZU1hdGVyaWFsKSxcbiAgICAgICAgXCJZWlwiOiBuZXcgVEhSRUUuTWVzaChwbGFuZUdlb21ldHJ5LCBwbGFuZU1hdGVyaWFsKSxcbiAgICAgICAgXCJYWlwiOiBuZXcgVEhSRUUuTWVzaChwbGFuZUdlb21ldHJ5LCBwbGFuZU1hdGVyaWFsKSxcbiAgICAgICAgXCJYWVpFXCI6IG5ldyBUSFJFRS5NZXNoKHBsYW5lR2VvbWV0cnksIHBsYW5lTWF0ZXJpYWwpXG4gICAgICB9O1xuXG4gICAgICB0aGlzLmFjdGl2ZVBsYW5lID0gcGxhbmVzW1wiWFlaRVwiXTtcblxuICAgICAgcGxhbmVzW1wiWVpcIl0ucm90YXRpb24uc2V0KDAsIE1hdGguUEkgLyAyLCAwKTtcbiAgICAgIHBsYW5lc1tcIlhaXCJdLnJvdGF0aW9uLnNldCgtTWF0aC5QSSAvIDIsIDAsIDApO1xuXG4gICAgICBmb3IgKHZhciBpIGluIHBsYW5lcykge1xuXG4gICAgICAgIHBsYW5lc1tpXS5uYW1lID0gaTtcbiAgICAgICAgdGhpcy5wbGFuZXMuYWRkKHBsYW5lc1tpXSk7XG4gICAgICAgIHRoaXMucGxhbmVzW2ldID0gcGxhbmVzW2ldO1xuXG4gICAgICB9XG5cbiAgICAgIC8vLy8gSEFORExFUyBBTkQgUElDS0VSU1xuXG4gICAgICB2YXIgc2V0dXBHaXptb3MgPSBmdW5jdGlvbiAoZ2l6bW9NYXAsIHBhcmVudCkge1xuXG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gZ2l6bW9NYXApIHtcblxuICAgICAgICAgIGZvciAoaSA9IGdpem1vTWFwW25hbWVdLmxlbmd0aDsgaS0tOykge1xuXG4gICAgICAgICAgICB2YXIgb2JqZWN0ID0gZ2l6bW9NYXBbbmFtZV1baV1bMF07XG4gICAgICAgICAgICB2YXIgcG9zaXRpb24gPSBnaXptb01hcFtuYW1lXVtpXVsxXTtcbiAgICAgICAgICAgIHZhciByb3RhdGlvbiA9IGdpem1vTWFwW25hbWVdW2ldWzJdO1xuXG4gICAgICAgICAgICBvYmplY3QubmFtZSA9IG5hbWU7XG5cbiAgICAgICAgICAgIG9iamVjdC5yZW5kZXJPcmRlciA9IEluZmluaXR5OyAvLyBhdm9pZCBiZWluZyBoaWRkZW4gYnkgb3RoZXIgdHJhbnNwYXJlbnQgb2JqZWN0c1xuXG4gICAgICAgICAgICBpZiAocG9zaXRpb24pIG9iamVjdC5wb3NpdGlvbi5zZXQocG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdLCBwb3NpdGlvblsyXSk7XG4gICAgICAgICAgICBpZiAocm90YXRpb24pIG9iamVjdC5yb3RhdGlvbi5zZXQocm90YXRpb25bMF0sIHJvdGF0aW9uWzFdLCByb3RhdGlvblsyXSk7XG5cbiAgICAgICAgICAgIHBhcmVudC5hZGQob2JqZWN0KTtcblxuICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgIH07XG5cbiAgICAgIHNldHVwR2l6bW9zKHRoaXMuaGFuZGxlR2l6bW9zLCB0aGlzLmhhbmRsZXMpO1xuICAgICAgc2V0dXBHaXptb3ModGhpcy5waWNrZXJHaXptb3MsIHRoaXMucGlja2Vycyk7XG5cbiAgICAgIC8vIHJlc2V0IFRyYW5zZm9ybWF0aW9uc1xuXG4gICAgICB0aGlzLnRyYXZlcnNlKGZ1bmN0aW9uIChjaGlsZCkge1xuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2gpIHtcblxuICAgICAgICAgIGNoaWxkLnVwZGF0ZU1hdHJpeCgpO1xuXG4gICAgICAgICAgdmFyIHRlbXBHZW9tZXRyeSA9IGNoaWxkLmdlb21ldHJ5LmNsb25lKCk7XG4gICAgICAgICAgdGVtcEdlb21ldHJ5LmFwcGx5TWF0cml4KGNoaWxkLm1hdHJpeCk7XG4gICAgICAgICAgY2hpbGQuZ2VvbWV0cnkgPSB0ZW1wR2VvbWV0cnk7XG5cbiAgICAgICAgICBjaGlsZC5wb3NpdGlvbi5zZXQoMCwgMCwgMCk7XG4gICAgICAgICAgY2hpbGQucm90YXRpb24uc2V0KDAsIDAsIDApO1xuICAgICAgICAgIGNoaWxkLnNjYWxlLnNldCgxLCAxLCAxKTtcblxuICAgICAgICB9XG5cbiAgICAgIH0pO1xuXG4gICAgfTtcblxuICAgIHRoaXMuaGlnaGxpZ2h0ID0gZnVuY3Rpb24gKGF4aXMpIHtcblxuICAgICAgdGhpcy50cmF2ZXJzZShmdW5jdGlvbiAoY2hpbGQpIHtcblxuICAgICAgICBpZiAoY2hpbGQubWF0ZXJpYWwgJiYgY2hpbGQubWF0ZXJpYWwuaGlnaGxpZ2h0KSB7XG5cbiAgICAgICAgICBpZiAoY2hpbGQubmFtZSA9PT0gYXhpcykge1xuXG4gICAgICAgICAgICBjaGlsZC5tYXRlcmlhbC5oaWdobGlnaHQodHJ1ZSk7XG5cbiAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBjaGlsZC5tYXRlcmlhbC5oaWdobGlnaHQoZmFsc2UpO1xuXG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgfSk7XG5cbiAgICB9O1xuXG4gIH07XG5cbiAgVEhSRUUuVHJhbnNmb3JtR2l6bW8ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUpO1xuICBUSFJFRS5UcmFuc2Zvcm1HaXptby5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBUSFJFRS5UcmFuc2Zvcm1HaXptbztcblxuICBUSFJFRS5UcmFuc2Zvcm1HaXptby5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKHJvdGF0aW9uLCBleWUpIHtcblxuICAgIHZhciB2ZWMxID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMCk7XG4gICAgdmFyIHZlYzIgPSBuZXcgVEhSRUUuVmVjdG9yMygwLCAxLCAwKTtcbiAgICB2YXIgbG9va0F0TWF0cml4ID0gbmV3IFRIUkVFLk1hdHJpeDQoKTtcblxuICAgIHRoaXMudHJhdmVyc2UoZnVuY3Rpb24gKGNoaWxkKSB7XG5cbiAgICAgIGlmIChjaGlsZC5uYW1lLnNlYXJjaChcIkVcIikgIT09IC0xKSB7XG5cbiAgICAgICAgY2hpbGQucXVhdGVybmlvbi5zZXRGcm9tUm90YXRpb25NYXRyaXgobG9va0F0TWF0cml4Lmxvb2tBdChleWUsIHZlYzEsIHZlYzIpKTtcblxuICAgICAgfSBlbHNlIGlmIChjaGlsZC5uYW1lLnNlYXJjaChcIlhcIikgIT09IC0xIHx8IGNoaWxkLm5hbWUuc2VhcmNoKFwiWVwiKSAhPT0gLTEgfHwgY2hpbGQubmFtZS5zZWFyY2goXCJaXCIpICE9PSAtMSkge1xuXG4gICAgICAgIGNoaWxkLnF1YXRlcm5pb24uc2V0RnJvbUV1bGVyKHJvdGF0aW9uKTtcblxuICAgICAgfVxuXG4gICAgfSk7XG5cbiAgfTtcblxuICBUSFJFRS5UcmFuc2Zvcm1HaXptb1RyYW5zbGF0ZSA9IGZ1bmN0aW9uICgpIHtcblxuICAgIFRIUkVFLlRyYW5zZm9ybUdpem1vLmNhbGwodGhpcyk7XG5cbiAgICB2YXIgYXJyb3dHZW9tZXRyeSA9IG5ldyBUSFJFRS5Db25lQnVmZmVyR2VvbWV0cnkoMC4wNSwgMC4yLCAxMiwgMSwgZmFsc2UpO1xuICAgIGFycm93R2VvbWV0cnkudHJhbnNsYXRlKDAsIDAuNSwgMCk7XG5cbiAgICB2YXIgbGluZVhHZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIGxpbmVYR2VvbWV0cnkuYWRkQXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKFswLCAwLCAwLCAxLCAwLCAwXSwgMykpO1xuXG4gICAgdmFyIGxpbmVZR2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcbiAgICBsaW5lWUdlb21ldHJ5LmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShbMCwgMCwgMCwgMCwgMSwgMF0sIDMpKTtcblxuICAgIHZhciBsaW5lWkdlb21ldHJ5ID0gbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCk7XG4gICAgbGluZVpHZW9tZXRyeS5hZGRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUoWzAsIDAsIDAsIDAsIDAsIDFdLCAzKSk7XG5cbiAgICB0aGlzLmhhbmRsZUdpem1vcyA9IHtcblxuICAgICAgWDogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2goYXJyb3dHZW9tZXRyeSwgbmV3IEdpem1vTWF0ZXJpYWwoe2NvbG9yOiAweGZmMDAwMH0pKSwgWzAuNSwgMCwgMF0sIFswLCAwLCAtTWF0aC5QSSAvIDJdXSxcbiAgICAgICAgW25ldyBUSFJFRS5MaW5lKGxpbmVYR2VvbWV0cnksIG5ldyBHaXptb0xpbmVNYXRlcmlhbCh7Y29sb3I6IDB4ZmYwMDAwfSkpXVxuICAgICAgXSxcblxuICAgICAgWTogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2goYXJyb3dHZW9tZXRyeSwgbmV3IEdpem1vTWF0ZXJpYWwoe2NvbG9yOiAweDAwZmYwMH0pKSwgWzAsIDAuNSwgMF1dLFxuICAgICAgICBbbmV3IFRIUkVFLkxpbmUobGluZVlHZW9tZXRyeSwgbmV3IEdpem1vTGluZU1hdGVyaWFsKHtjb2xvcjogMHgwMGZmMDB9KSldXG4gICAgICBdLFxuXG4gICAgICAvLyBaOiBbXG4gICAgICAvLyBcdFsgbmV3IFRIUkVFLk1lc2goIGFycm93R2VvbWV0cnksIG5ldyBHaXptb01hdGVyaWFsKCB7IGNvbG9yOiAweDAwMDBmZiB9ICkgKSwgWyAwLCAwLCAwLjUgXSwgWyBNYXRoLlBJIC8gMiwgMCwgMCBdIF0sXG4gICAgICAvLyBcdFsgbmV3IFRIUkVFLkxpbmUoIGxpbmVaR2VvbWV0cnksIG5ldyBHaXptb0xpbmVNYXRlcmlhbCggeyBjb2xvcjogMHgwMDAwZmYgfSApICkgXVxuICAgICAgLy8gXSxcblxuICAgICAgLy8gWFlaOiBbXG4gICAgICAvLyBcdFsgbmV3IFRIUkVFLk1lc2goIG5ldyBUSFJFRS5PY3RhaGVkcm9uR2VvbWV0cnkoIDAuMSwgMCApLCBuZXcgR2l6bW9NYXRlcmlhbCggeyBjb2xvcjogMHhmZmZmZmYsIG9wYWNpdHk6IDAuMjUgfSApICksIFsgMCwgMCwgMCBdLCBbIDAsIDAsIDAgXSBdXG4gICAgICAvLyBdLFxuXG4gICAgICBYWTogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLlBsYW5lQnVmZmVyR2VvbWV0cnkoMC4yOSwgMC4yOSksIG5ldyBHaXptb01hdGVyaWFsKHtcbiAgICAgICAgICBjb2xvcjogMHhmZmZmMDAsXG4gICAgICAgICAgb3BhY2l0eTogMC4yNVxuICAgICAgICB9KSksIFswLjE1LCAwLjE1LCAwXV1cbiAgICAgIF0sXG5cbiAgICAgIFlaOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuUGxhbmVCdWZmZXJHZW9tZXRyeSgwLjI5LCAwLjI5KSwgbmV3IEdpem1vTWF0ZXJpYWwoe1xuICAgICAgICAgIGNvbG9yOiAweDAwZmZmZixcbiAgICAgICAgICBvcGFjaXR5OiAwLjI1XG4gICAgICAgIH0pKSwgWzAsIDAuMTUsIDAuMTVdLCBbMCwgTWF0aC5QSSAvIDIsIDBdXVxuICAgICAgXSxcblxuICAgICAgWFo6IFtcbiAgICAgICAgW25ldyBUSFJFRS5NZXNoKG5ldyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5KDAuMjksIDAuMjkpLCBuZXcgR2l6bW9NYXRlcmlhbCh7XG4gICAgICAgICAgY29sb3I6IDB4ZmYwMGZmLFxuICAgICAgICAgIG9wYWNpdHk6IDAuMjVcbiAgICAgICAgfSkpLCBbMC4xNSwgMCwgMC4xNV0sIFstTWF0aC5QSSAvIDIsIDAsIDBdXVxuICAgICAgXVxuXG4gICAgfTtcblxuICAgIHRoaXMucGlja2VyR2l6bW9zID0ge1xuXG4gICAgICBYOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuQ3lsaW5kZXJCdWZmZXJHZW9tZXRyeSgwLjIsIDAsIDEsIDQsIDEsIGZhbHNlKSwgcGlja2VyTWF0ZXJpYWwpLCBbMC42LCAwLCAwXSwgWzAsIDAsIC1NYXRoLlBJIC8gMl1dXG4gICAgICBdLFxuXG4gICAgICBZOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuQ3lsaW5kZXJCdWZmZXJHZW9tZXRyeSgwLjIsIDAsIDEsIDQsIDEsIGZhbHNlKSwgcGlja2VyTWF0ZXJpYWwpLCBbMCwgMC42LCAwXV1cbiAgICAgIF0sXG5cbiAgICAgIC8vIFo6IFtcbiAgICAgIC8vIFx0WyBuZXcgVEhSRUUuTWVzaCggbmV3IFRIUkVFLkN5bGluZGVyQnVmZmVyR2VvbWV0cnkoIDAuMiwgMCwgMSwgNCwgMSwgZmFsc2UgKSwgcGlja2VyTWF0ZXJpYWwgKSwgWyAwLCAwLCAwLjYgXSwgWyBNYXRoLlBJIC8gMiwgMCwgMCBdIF1cbiAgICAgIC8vIF0sXG5cbiAgICAgIC8vIFhZWjogW1xuICAgICAgLy8gXHRbIG5ldyBUSFJFRS5NZXNoKCBuZXcgVEhSRUUuT2N0YWhlZHJvbkdlb21ldHJ5KCAwLjIsIDAgKSwgcGlja2VyTWF0ZXJpYWwgKSBdXG4gICAgICAvLyBdLFxuXG4gICAgICBYWTogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLlBsYW5lQnVmZmVyR2VvbWV0cnkoMC40LCAwLjQpLCBwaWNrZXJNYXRlcmlhbCksIFswLjIsIDAuMiwgMF1dXG4gICAgICBdLFxuXG4gICAgICBZWjogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLlBsYW5lQnVmZmVyR2VvbWV0cnkoMC40LCAwLjQpLCBwaWNrZXJNYXRlcmlhbCksIFswLCAwLjIsIDAuMl0sIFswLCBNYXRoLlBJIC8gMiwgMF1dXG4gICAgICBdLFxuXG4gICAgICBYWjogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLlBsYW5lQnVmZmVyR2VvbWV0cnkoMC40LCAwLjQpLCBwaWNrZXJNYXRlcmlhbCksIFswLjIsIDAsIDAuMl0sIFstTWF0aC5QSSAvIDIsIDAsIDBdXVxuICAgICAgXVxuXG4gICAgfTtcblxuICAgIHRoaXMuc2V0QWN0aXZlUGxhbmUgPSBmdW5jdGlvbiAoYXhpcywgZXllKSB7XG5cbiAgICAgIHZhciB0ZW1wTWF0cml4ID0gbmV3IFRIUkVFLk1hdHJpeDQoKTtcbiAgICAgIGV5ZS5hcHBseU1hdHJpeDQodGVtcE1hdHJpeC5nZXRJbnZlcnNlKHRlbXBNYXRyaXguZXh0cmFjdFJvdGF0aW9uKHRoaXMucGxhbmVzW1wiWFlcIl0ubWF0cml4V29ybGQpKSk7XG5cbiAgICAgIGlmIChheGlzID09PSBcIlhcIikge1xuXG4gICAgICAgIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhZXCJdO1xuXG4gICAgICAgIGlmIChNYXRoLmFicyhleWUueSkgPiBNYXRoLmFicyhleWUueikpIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhaXCJdO1xuXG4gICAgICB9XG5cbiAgICAgIGlmIChheGlzID09PSBcIllcIikge1xuXG4gICAgICAgIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhZXCJdO1xuXG4gICAgICAgIGlmIChNYXRoLmFicyhleWUueCkgPiBNYXRoLmFicyhleWUueikpIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIllaXCJdO1xuXG4gICAgICB9XG5cbiAgICAgIGlmIChheGlzID09PSBcIlpcIikge1xuXG4gICAgICAgIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhaXCJdO1xuXG4gICAgICAgIGlmIChNYXRoLmFicyhleWUueCkgPCBNYXRoLmFicyhleWUueSkpIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIllaXCJdO1xuXG4gICAgICB9XG5cbiAgICAgIGlmIChheGlzID09PSBcIlhZWlwiKSB0aGlzLmFjdGl2ZVBsYW5lID0gdGhpcy5wbGFuZXNbXCJYWVpFXCJdO1xuXG4gICAgICBpZiAoYXhpcyA9PT0gXCJYWVwiKSB0aGlzLmFjdGl2ZVBsYW5lID0gdGhpcy5wbGFuZXNbXCJYWVwiXTtcblxuICAgICAgaWYgKGF4aXMgPT09IFwiWVpcIikgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWVpcIl07XG5cbiAgICAgIGlmIChheGlzID09PSBcIlhaXCIpIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhaXCJdO1xuXG4gICAgfTtcblxuICAgIHRoaXMuaW5pdCgpO1xuXG4gIH07XG5cbiAgVEhSRUUuVHJhbnNmb3JtR2l6bW9UcmFuc2xhdGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShUSFJFRS5UcmFuc2Zvcm1HaXptby5wcm90b3R5cGUpO1xuICBUSFJFRS5UcmFuc2Zvcm1HaXptb1RyYW5zbGF0ZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBUSFJFRS5UcmFuc2Zvcm1HaXptb1RyYW5zbGF0ZTtcblxuICBUSFJFRS5UcmFuc2Zvcm1HaXptb1JvdGF0ZSA9IGZ1bmN0aW9uICgpIHtcblxuICAgIFRIUkVFLlRyYW5zZm9ybUdpem1vLmNhbGwodGhpcyk7XG5cbiAgICB2YXIgQ2lyY2xlR2VvbWV0cnkgPSBmdW5jdGlvbiAocmFkaXVzLCBmYWNpbmcsIGFyYykge1xuXG4gICAgICB2YXIgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcbiAgICAgIHZhciB2ZXJ0aWNlcyA9IFtdO1xuICAgICAgYXJjID0gYXJjID8gYXJjIDogMTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gNjQgKiBhcmM7ICsraSkge1xuXG4gICAgICAgIGlmIChmYWNpbmcgPT09ICd4JykgdmVydGljZXMucHVzaCgwLCBNYXRoLmNvcyhpIC8gMzIgKiBNYXRoLlBJKSAqIHJhZGl1cywgTWF0aC5zaW4oaSAvIDMyICogTWF0aC5QSSkgKiByYWRpdXMpO1xuICAgICAgICBpZiAoZmFjaW5nID09PSAneScpIHZlcnRpY2VzLnB1c2goTWF0aC5jb3MoaSAvIDMyICogTWF0aC5QSSkgKiByYWRpdXMsIDAsIE1hdGguc2luKGkgLyAzMiAqIE1hdGguUEkpICogcmFkaXVzKTtcbiAgICAgICAgaWYgKGZhY2luZyA9PT0gJ3onKSB2ZXJ0aWNlcy5wdXNoKE1hdGguc2luKGkgLyAzMiAqIE1hdGguUEkpICogcmFkaXVzLCBNYXRoLmNvcyhpIC8gMzIgKiBNYXRoLlBJKSAqIHJhZGl1cywgMCk7XG5cbiAgICAgIH1cblxuICAgICAgZ2VvbWV0cnkuYWRkQXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKHZlcnRpY2VzLCAzKSk7XG4gICAgICByZXR1cm4gZ2VvbWV0cnk7XG5cbiAgICB9O1xuXG4gICAgdGhpcy5oYW5kbGVHaXptb3MgPSB7XG5cbiAgICAgIC8vIFg6IFtcbiAgICAgIC8vIFx0WyBuZXcgVEhSRUUuTGluZSggbmV3IENpcmNsZUdlb21ldHJ5KCAxLCAneCcsIDAuNSApLCBuZXcgR2l6bW9MaW5lTWF0ZXJpYWwoIHsgY29sb3I6IDB4ZmYwMDAwIH0gKSApIF1cbiAgICAgIC8vIF0sXG5cbiAgICAgIC8vIFk6IFtcbiAgICAgIC8vIFx0WyBuZXcgVEhSRUUuTGluZSggbmV3IENpcmNsZUdlb21ldHJ5KCAxLCAneScsIDAuNSApLCBuZXcgR2l6bW9MaW5lTWF0ZXJpYWwoIHsgY29sb3I6IDB4MDBmZjAwIH0gKSApIF1cbiAgICAgIC8vIF0sXG5cbiAgICAgIFo6IFtcbiAgICAgICAgW25ldyBUSFJFRS5MaW5lKG5ldyBDaXJjbGVHZW9tZXRyeSgxLCAneicsIDAuNSksIG5ldyBHaXptb0xpbmVNYXRlcmlhbCh7Y29sb3I6IDB4MDAwMGZmfSkpXVxuICAgICAgXSxcblxuICAgICAgLy8gRTogW1xuICAgICAgLy8gXHRbIG5ldyBUSFJFRS5MaW5lKCBuZXcgQ2lyY2xlR2VvbWV0cnkoIDEuMjUsICd6JywgMSApLCBuZXcgR2l6bW9MaW5lTWF0ZXJpYWwoIHsgY29sb3I6IDB4Y2NjYzAwIH0gKSApIF1cbiAgICAgIC8vIF0sXG5cbiAgICAgIC8vIFhZWkU6IFtcbiAgICAgIC8vIFx0WyBuZXcgVEhSRUUuTGluZSggbmV3IENpcmNsZUdlb21ldHJ5KCAxLCAneicsIDEgKSwgbmV3IEdpem1vTGluZU1hdGVyaWFsKCB7IGNvbG9yOiAweDc4Nzg3OCB9ICkgKSBdXG4gICAgICAvLyBdXG5cbiAgICB9O1xuXG4gICAgdGhpcy5waWNrZXJHaXptb3MgPSB7XG5cbiAgICAgIC8vIFg6IFtcbiAgICAgIC8vIFx0WyBuZXcgVEhSRUUuTWVzaCggbmV3IFRIUkVFLlRvcnVzQnVmZmVyR2VvbWV0cnkoIDEsIDAuMTIsIDQsIDEyLCBNYXRoLlBJICksIHBpY2tlck1hdGVyaWFsICksIFsgMCwgMCwgMCBdLCBbIDAsIC0gTWF0aC5QSSAvIDIsIC0gTWF0aC5QSSAvIDIgXSBdXG4gICAgICAvLyBdLFxuXG4gICAgICAvLyBZOiBbXG4gICAgICAvLyBcdFsgbmV3IFRIUkVFLk1lc2goIG5ldyBUSFJFRS5Ub3J1c0J1ZmZlckdlb21ldHJ5KCAxLCAwLjEyLCA0LCAxMiwgTWF0aC5QSSApLCBwaWNrZXJNYXRlcmlhbCApLCBbIDAsIDAsIDAgXSwgWyBNYXRoLlBJIC8gMiwgMCwgMCBdIF1cbiAgICAgIC8vIF0sXG5cbiAgICAgIFo6IFtcbiAgICAgICAgW25ldyBUSFJFRS5NZXNoKG5ldyBUSFJFRS5Ub3J1c0J1ZmZlckdlb21ldHJ5KDEsIDAuMTIsIDQsIDEyLCBNYXRoLlBJKSwgcGlja2VyTWF0ZXJpYWwpLCBbMCwgMCwgMF0sIFswLCAwLCAtTWF0aC5QSSAvIDJdXVxuICAgICAgXSxcblxuICAgICAgLy8gRTogW1xuICAgICAgLy8gXHRbIG5ldyBUSFJFRS5NZXNoKCBuZXcgVEhSRUUuVG9ydXNCdWZmZXJHZW9tZXRyeSggMS4yNSwgMC4xMiwgMiwgMjQgKSwgcGlja2VyTWF0ZXJpYWwgKSBdXG4gICAgICAvLyBdLFxuXG4gICAgICAvLyBYWVpFOiBbXG4gICAgICAvLyBcdFsgbmV3IFRIUkVFLk1lc2goIG5ldyBUSFJFRS5Ub3J1c0J1ZmZlckdlb21ldHJ5KCAxLCAwLjEyLCAyLCAyNCApLCBwaWNrZXJNYXRlcmlhbCApIF1cbiAgICAgIC8vIF1cblxuICAgIH07XG5cbiAgICAvLyB0aGlzLnBpY2tlckdpem1vcy5YWVpFWyAwIF1bIDAgXS52aXNpYmxlID0gZmFsc2U7IC8vIGRpc2FibGUgWFlaRSBwaWNrZXIgZ2l6bW9cblxuICAgIHRoaXMuc2V0QWN0aXZlUGxhbmUgPSBmdW5jdGlvbiAoYXhpcykge1xuXG4gICAgICBpZiAoYXhpcyA9PT0gXCJFXCIpIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhZWkVcIl07XG5cbiAgICAgIGlmIChheGlzID09PSBcIlhcIikgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWVpcIl07XG5cbiAgICAgIGlmIChheGlzID09PSBcIllcIikgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWFpcIl07XG5cbiAgICAgIGlmIChheGlzID09PSBcIlpcIikgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWFlcIl07XG5cbiAgICB9O1xuXG4gICAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbiAocm90YXRpb24sIGV5ZTIpIHtcblxuICAgICAgVEhSRUUuVHJhbnNmb3JtR2l6bW8ucHJvdG90eXBlLnVwZGF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgICB2YXIgdGVtcE1hdHJpeCA9IG5ldyBUSFJFRS5NYXRyaXg0KCk7XG4gICAgICB2YXIgd29ybGRSb3RhdGlvbiA9IG5ldyBUSFJFRS5FdWxlcigwLCAwLCAxKTtcbiAgICAgIHZhciB0ZW1wUXVhdGVybmlvbiA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XG4gICAgICB2YXIgdW5pdFggPSBuZXcgVEhSRUUuVmVjdG9yMygxLCAwLCAwKTtcbiAgICAgIHZhciB1bml0WSA9IG5ldyBUSFJFRS5WZWN0b3IzKDAsIDEsIDApO1xuICAgICAgdmFyIHVuaXRaID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMSk7XG4gICAgICB2YXIgcXVhdGVybmlvblggPSBuZXcgVEhSRUUuUXVhdGVybmlvbigpO1xuICAgICAgdmFyIHF1YXRlcm5pb25ZID0gbmV3IFRIUkVFLlF1YXRlcm5pb24oKTtcbiAgICAgIHZhciBxdWF0ZXJuaW9uWiA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XG4gICAgICB2YXIgZXllID0gZXllMi5jbG9uZSgpO1xuXG4gICAgICB3b3JsZFJvdGF0aW9uLmNvcHkodGhpcy5wbGFuZXNbXCJYWVwiXS5yb3RhdGlvbik7XG4gICAgICB0ZW1wUXVhdGVybmlvbi5zZXRGcm9tRXVsZXIod29ybGRSb3RhdGlvbik7XG5cbiAgICAgIHRlbXBNYXRyaXgubWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb24odGVtcFF1YXRlcm5pb24pLmdldEludmVyc2UodGVtcE1hdHJpeCk7XG4gICAgICBleWUuYXBwbHlNYXRyaXg0KHRlbXBNYXRyaXgpO1xuXG4gICAgICB0aGlzLnRyYXZlcnNlKGZ1bmN0aW9uIChjaGlsZCkge1xuXG4gICAgICAgIHRlbXBRdWF0ZXJuaW9uLnNldEZyb21FdWxlcih3b3JsZFJvdGF0aW9uKTtcblxuICAgICAgICBpZiAoY2hpbGQubmFtZSA9PT0gXCJYXCIpIHtcblxuICAgICAgICAgIHF1YXRlcm5pb25YLnNldEZyb21BeGlzQW5nbGUodW5pdFgsIE1hdGguYXRhbjIoLWV5ZS55LCBleWUueikpO1xuICAgICAgICAgIHRlbXBRdWF0ZXJuaW9uLm11bHRpcGx5UXVhdGVybmlvbnModGVtcFF1YXRlcm5pb24sIHF1YXRlcm5pb25YKTtcbiAgICAgICAgICBjaGlsZC5xdWF0ZXJuaW9uLmNvcHkodGVtcFF1YXRlcm5pb24pO1xuXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQubmFtZSA9PT0gXCJZXCIpIHtcblxuICAgICAgICAgIHF1YXRlcm5pb25ZLnNldEZyb21BeGlzQW5nbGUodW5pdFksIE1hdGguYXRhbjIoZXllLngsIGV5ZS56KSk7XG4gICAgICAgICAgdGVtcFF1YXRlcm5pb24ubXVsdGlwbHlRdWF0ZXJuaW9ucyh0ZW1wUXVhdGVybmlvbiwgcXVhdGVybmlvblkpO1xuICAgICAgICAgIGNoaWxkLnF1YXRlcm5pb24uY29weSh0ZW1wUXVhdGVybmlvbik7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZC5uYW1lID09PSBcIlpcIikge1xuXG4gICAgICAgICAgcXVhdGVybmlvblouc2V0RnJvbUF4aXNBbmdsZSh1bml0WiwgTWF0aC5hdGFuMihleWUueSwgZXllLngpKTtcbiAgICAgICAgICB0ZW1wUXVhdGVybmlvbi5tdWx0aXBseVF1YXRlcm5pb25zKHRlbXBRdWF0ZXJuaW9uLCBxdWF0ZXJuaW9uWik7XG4gICAgICAgICAgY2hpbGQucXVhdGVybmlvbi5jb3B5KHRlbXBRdWF0ZXJuaW9uKTtcblxuICAgICAgICB9XG5cbiAgICAgIH0pO1xuXG4gICAgfTtcblxuICAgIHRoaXMuaW5pdCgpO1xuXG4gIH07XG5cbiAgVEhSRUUuVHJhbnNmb3JtR2l6bW9Sb3RhdGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShUSFJFRS5UcmFuc2Zvcm1HaXptby5wcm90b3R5cGUpO1xuICBUSFJFRS5UcmFuc2Zvcm1HaXptb1JvdGF0ZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBUSFJFRS5UcmFuc2Zvcm1HaXptb1JvdGF0ZTtcblxuICBUSFJFRS5UcmFuc2Zvcm1HaXptb1NjYWxlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgVEhSRUUuVHJhbnNmb3JtR2l6bW8uY2FsbCh0aGlzKTtcblxuICAgIHZhciBhcnJvd0dlb21ldHJ5ID0gbmV3IFRIUkVFLkJveEJ1ZmZlckdlb21ldHJ5KDAuMTI1LCAwLjEyNSwgMC4xMjUpO1xuICAgIGFycm93R2VvbWV0cnkudHJhbnNsYXRlKDAsIDAuNSwgMCk7XG5cbiAgICB2YXIgbGluZVhHZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIGxpbmVYR2VvbWV0cnkuYWRkQXR0cmlidXRlKCdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKFswLCAwLCAwLCAxLCAwLCAwXSwgMykpO1xuXG4gICAgdmFyIGxpbmVZR2VvbWV0cnkgPSBuZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcbiAgICBsaW5lWUdlb21ldHJ5LmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShbMCwgMCwgMCwgMCwgMSwgMF0sIDMpKTtcblxuICAgIHZhciBsaW5lWkdlb21ldHJ5ID0gbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCk7XG4gICAgbGluZVpHZW9tZXRyeS5hZGRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUoWzAsIDAsIDAsIDAsIDAsIDFdLCAzKSk7XG5cbiAgICB0aGlzLmhhbmRsZUdpem1vcyA9IHtcblxuICAgICAgWDogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2goYXJyb3dHZW9tZXRyeSwgbmV3IEdpem1vTWF0ZXJpYWwoe2NvbG9yOiAweGZmMDAwMH0pKSwgWzAuNSwgMCwgMF0sIFswLCAwLCAtTWF0aC5QSSAvIDJdXSxcbiAgICAgICAgW25ldyBUSFJFRS5MaW5lKGxpbmVYR2VvbWV0cnksIG5ldyBHaXptb0xpbmVNYXRlcmlhbCh7Y29sb3I6IDB4ZmYwMDAwfSkpXVxuICAgICAgXSxcblxuICAgICAgWTogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2goYXJyb3dHZW9tZXRyeSwgbmV3IEdpem1vTWF0ZXJpYWwoe2NvbG9yOiAweDAwZmYwMH0pKSwgWzAsIDAuNSwgMF1dLFxuICAgICAgICBbbmV3IFRIUkVFLkxpbmUobGluZVlHZW9tZXRyeSwgbmV3IEdpem1vTGluZU1hdGVyaWFsKHtjb2xvcjogMHgwMGZmMDB9KSldXG4gICAgICBdLFxuXG4gICAgICBaOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChhcnJvd0dlb21ldHJ5LCBuZXcgR2l6bW9NYXRlcmlhbCh7Y29sb3I6IDB4MDAwMGZmfSkpLCBbMCwgMCwgMC41XSwgW01hdGguUEkgLyAyLCAwLCAwXV0sXG4gICAgICAgIFtuZXcgVEhSRUUuTGluZShsaW5lWkdlb21ldHJ5LCBuZXcgR2l6bW9MaW5lTWF0ZXJpYWwoe2NvbG9yOiAweDAwMDBmZn0pKV1cbiAgICAgIF0sXG5cbiAgICAgIFhZWjogW1xuICAgICAgICBbbmV3IFRIUkVFLk1lc2gobmV3IFRIUkVFLkJveEJ1ZmZlckdlb21ldHJ5KDAuMTI1LCAwLjEyNSwgMC4xMjUpLCBuZXcgR2l6bW9NYXRlcmlhbCh7XG4gICAgICAgICAgY29sb3I6IDB4ZmZmZmZmLFxuICAgICAgICAgIG9wYWNpdHk6IDAuMjVcbiAgICAgICAgfSkpXVxuICAgICAgXVxuXG4gICAgfTtcblxuICAgIHRoaXMucGlja2VyR2l6bW9zID0ge1xuXG4gICAgICBYOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuQ3lsaW5kZXJCdWZmZXJHZW9tZXRyeSgwLjIsIDAsIDEsIDQsIDEsIGZhbHNlKSwgcGlja2VyTWF0ZXJpYWwpLCBbMC42LCAwLCAwXSwgWzAsIDAsIC1NYXRoLlBJIC8gMl1dXG4gICAgICBdLFxuXG4gICAgICBZOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuQ3lsaW5kZXJCdWZmZXJHZW9tZXRyeSgwLjIsIDAsIDEsIDQsIDEsIGZhbHNlKSwgcGlja2VyTWF0ZXJpYWwpLCBbMCwgMC42LCAwXV1cbiAgICAgIF0sXG5cbiAgICAgIFo6IFtcbiAgICAgICAgW25ldyBUSFJFRS5NZXNoKG5ldyBUSFJFRS5DeWxpbmRlckJ1ZmZlckdlb21ldHJ5KDAuMiwgMCwgMSwgNCwgMSwgZmFsc2UpLCBwaWNrZXJNYXRlcmlhbCksIFswLCAwLCAwLjZdLCBbTWF0aC5QSSAvIDIsIDAsIDBdXVxuICAgICAgXSxcblxuICAgICAgWFlaOiBbXG4gICAgICAgIFtuZXcgVEhSRUUuTWVzaChuZXcgVEhSRUUuQm94QnVmZmVyR2VvbWV0cnkoMC40LCAwLjQsIDAuNCksIHBpY2tlck1hdGVyaWFsKV1cbiAgICAgIF1cblxuICAgIH07XG5cbiAgICB0aGlzLnNldEFjdGl2ZVBsYW5lID0gZnVuY3Rpb24gKGF4aXMsIGV5ZSkge1xuXG4gICAgICB2YXIgdGVtcE1hdHJpeCA9IG5ldyBUSFJFRS5NYXRyaXg0KCk7XG4gICAgICBleWUuYXBwbHlNYXRyaXg0KHRlbXBNYXRyaXguZ2V0SW52ZXJzZSh0ZW1wTWF0cml4LmV4dHJhY3RSb3RhdGlvbih0aGlzLnBsYW5lc1tcIlhZXCJdLm1hdHJpeFdvcmxkKSkpO1xuXG4gICAgICBpZiAoYXhpcyA9PT0gXCJYXCIpIHtcblxuICAgICAgICB0aGlzLmFjdGl2ZVBsYW5lID0gdGhpcy5wbGFuZXNbXCJYWVwiXTtcbiAgICAgICAgaWYgKE1hdGguYWJzKGV5ZS55KSA+IE1hdGguYWJzKGV5ZS56KSkgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWFpcIl07XG5cbiAgICAgIH1cblxuICAgICAgaWYgKGF4aXMgPT09IFwiWVwiKSB7XG5cbiAgICAgICAgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWFlcIl07XG4gICAgICAgIGlmIChNYXRoLmFicyhleWUueCkgPiBNYXRoLmFicyhleWUueikpIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIllaXCJdO1xuXG4gICAgICB9XG5cbiAgICAgIGlmIChheGlzID09PSBcIlpcIikge1xuXG4gICAgICAgIHRoaXMuYWN0aXZlUGxhbmUgPSB0aGlzLnBsYW5lc1tcIlhaXCJdO1xuICAgICAgICBpZiAoTWF0aC5hYnMoZXllLngpID4gTWF0aC5hYnMoZXllLnkpKSB0aGlzLmFjdGl2ZVBsYW5lID0gdGhpcy5wbGFuZXNbXCJZWlwiXTtcblxuICAgICAgfVxuXG4gICAgICBpZiAoYXhpcyA9PT0gXCJYWVpcIikgdGhpcy5hY3RpdmVQbGFuZSA9IHRoaXMucGxhbmVzW1wiWFlaRVwiXTtcblxuICAgIH07XG5cbiAgICB0aGlzLmluaXQoKTtcblxuICB9O1xuXG4gIFRIUkVFLlRyYW5zZm9ybUdpem1vU2NhbGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShUSFJFRS5UcmFuc2Zvcm1HaXptby5wcm90b3R5cGUpO1xuICBUSFJFRS5UcmFuc2Zvcm1HaXptb1NjYWxlLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFRIUkVFLlRyYW5zZm9ybUdpem1vU2NhbGU7XG5cbiAgVEhSRUUuVHJhbnNmb3JtQ29udHJvbHMgPSBmdW5jdGlvbiAoY2FtZXJhLCBkb21FbGVtZW50KSB7XG5cbiAgICAvLyBUT0RPOiBNYWtlIG5vbi11bmlmb3JtIHNjYWxlIGFuZCByb3RhdGUgcGxheSBuaWNlIGluIGhpZXJhcmNoaWVzXG4gICAgLy8gVE9ETzogQUREIFJYWVogY29udG9sXG5cbiAgICBUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO1xuXG4gICAgZG9tRWxlbWVudCA9IChkb21FbGVtZW50ICE9PSB1bmRlZmluZWQpID8gZG9tRWxlbWVudCA6IGRvY3VtZW50O1xuXG4gICAgdGhpcy5vYmplY3QgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy52aXNpYmxlID0gZmFsc2U7XG4gICAgdGhpcy50cmFuc2xhdGlvblNuYXAgPSBudWxsO1xuICAgIHRoaXMucm90YXRpb25TbmFwID0gbnVsbDtcbiAgICB0aGlzLnNwYWNlID0gXCJ3b3JsZFwiO1xuICAgIHRoaXMuc2l6ZSA9IDE7XG4gICAgdGhpcy5heGlzID0gbnVsbDtcblxuICAgIHZhciBzY29wZSA9IHRoaXM7XG5cbiAgICB2YXIgX21vZGUgPSBcInRyYW5zbGF0ZVwiO1xuICAgIC8vIOato+WcqGRyYWdnaW5nXG4gICAgdmFyIF9kcmFnZ2luZyA9IGZhbHNlO1xuICAgIC8v5LiJ56eN5Yqf6IO9XG4gICAgdmFyIF9naXptbyA9IHtcblxuICAgICAgXCJ0cmFuc2xhdGVcIjogbmV3IFRIUkVFLlRyYW5zZm9ybUdpem1vVHJhbnNsYXRlKCksXG4gICAgICBcInJvdGF0ZVwiOiBuZXcgVEhSRUUuVHJhbnNmb3JtR2l6bW9Sb3RhdGUoKSxcbiAgICAgIFwic2NhbGVcIjogbmV3IFRIUkVFLlRyYW5zZm9ybUdpem1vU2NhbGUoKVxuICAgIH07XG4gICAgLy/lhbbku5Ztb2Rl6ZqQ6JePXG4gICAgZm9yICh2YXIgdHlwZSBpbiBfZ2l6bW8pIHtcblxuICAgICAgdmFyIGdpem1vT2JqID0gX2dpem1vW3R5cGVdO1xuXG4gICAgICBnaXptb09iai52aXNpYmxlID0gKHR5cGUgPT09IF9tb2RlKTtcbiAgICAgIHRoaXMuYWRkKGdpem1vT2JqKTtcblxuICAgIH1cbiAgICAvL1xuICAgIHZhciBjaGFuZ2VFdmVudCA9IHt0eXBlOiBcImNoYW5nZVwifTtcbiAgICB2YXIgbW91c2VEb3duRXZlbnQgPSB7dHlwZTogXCJtb3VzZURvd25cIn07XG4gICAgdmFyIG1vdXNlVXBFdmVudCA9IHt0eXBlOiBcIm1vdXNlVXBcIiwgbW9kZTogX21vZGV9O1xuICAgIHZhciBvYmplY3RDaGFuZ2VFdmVudCA9IHt0eXBlOiBcIm9iamVjdENoYW5nZVwifTtcblxuICAgIHZhciByYXkgPSBuZXcgVEhSRUUuUmF5Y2FzdGVyKCk7XG4gICAgdmFyIHBvaW50ZXJWZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMigpO1xuXG4gICAgdmFyIHBvaW50ID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICB2YXIgb2Zmc2V0ID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcblxuICAgIHZhciByb3RhdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgdmFyIG9mZnNldFJvdGF0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICB2YXIgc2NhbGUgPSAxO1xuXG4gICAgdmFyIGxvb2tBdE1hdHJpeCA9IG5ldyBUSFJFRS5NYXRyaXg0KCk7XG4gICAgdmFyIGV5ZSA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG5cbiAgICB2YXIgdGVtcE1hdHJpeCA9IG5ldyBUSFJFRS5NYXRyaXg0KCk7XG4gICAgdmFyIHRlbXBWZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgIHZhciB0ZW1wUXVhdGVybmlvbiA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XG4gICAgdmFyIHVuaXRYID0gbmV3IFRIUkVFLlZlY3RvcjMoMSwgMCwgMCk7XG4gICAgdmFyIHVuaXRZID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMSwgMCk7XG4gICAgdmFyIHVuaXRaID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMSk7XG5cbiAgICB2YXIgcXVhdGVybmlvblhZWiA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XG4gICAgdmFyIHF1YXRlcm5pb25YID0gbmV3IFRIUkVFLlF1YXRlcm5pb24oKTtcbiAgICB2YXIgcXVhdGVybmlvblkgPSBuZXcgVEhSRUUuUXVhdGVybmlvbigpO1xuICAgIHZhciBxdWF0ZXJuaW9uWiA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XG4gICAgdmFyIHF1YXRlcm5pb25FID0gbmV3IFRIUkVFLlF1YXRlcm5pb24oKTtcblxuICAgIHZhciBvbGRQb3NpdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgdmFyIG9sZFNjYWxlID0gbmV3IFRIUkVFLlZlY3RvcjMoKTtcbiAgICB2YXIgb2xkUm90YXRpb25NYXRyaXggPSBuZXcgVEhSRUUuTWF0cml4NCgpO1xuXG4gICAgdmFyIHBhcmVudFJvdGF0aW9uTWF0cml4ID0gbmV3IFRIUkVFLk1hdHJpeDQoKTtcbiAgICB2YXIgcGFyZW50U2NhbGUgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuXG4gICAgdmFyIHdvcmxkUG9zaXRpb24gPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgIHZhciB3b3JsZFJvdGF0aW9uID0gbmV3IFRIUkVFLkV1bGVyKCk7XG4gICAgdmFyIHdvcmxkUm90YXRpb25NYXRyaXggPSBuZXcgVEhSRUUuTWF0cml4NCgpO1xuICAgIHZhciBjYW1Qb3NpdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgdmFyIGNhbVJvdGF0aW9uID0gbmV3IFRIUkVFLkV1bGVyKCk7XG5cbiAgICBkb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgb25Qb2ludGVyRG93biwgZmFsc2UpO1xuICAgIGRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgb25Qb2ludGVyRG93biwgZmFsc2UpO1xuXG4gICAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIG9uUG9pbnRlckhvdmVyLCBmYWxzZSk7XG4gICAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIG9uUG9pbnRlckhvdmVyLCBmYWxzZSk7XG5cbiAgICBkb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgb25Qb2ludGVyTW92ZSwgZmFsc2UpO1xuICAgIGRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCBvblBvaW50ZXJNb3ZlLCBmYWxzZSk7XG5cbiAgICBkb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIG9uUG9pbnRlclVwLCBmYWxzZSk7XG4gICAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgb25Qb2ludGVyVXAsIGZhbHNlKTtcbiAgICBkb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLCBvblBvaW50ZXJVcCwgZmFsc2UpO1xuICAgIGRvbUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoY2FuY2VsXCIsIG9uUG9pbnRlclVwLCBmYWxzZSk7XG4gICAgZG9tRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hsZWF2ZVwiLCBvblBvaW50ZXJVcCwgZmFsc2UpO1xuXG4gICAgdGhpcy5kaXNwb3NlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICBkb21FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgb25Qb2ludGVyRG93bik7XG4gICAgICBkb21FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIG9uUG9pbnRlckRvd24pO1xuXG4gICAgICBkb21FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgb25Qb2ludGVySG92ZXIpO1xuICAgICAgZG9tRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIG9uUG9pbnRlckhvdmVyKTtcblxuICAgICAgZG9tRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIG9uUG9pbnRlck1vdmUpO1xuICAgICAgZG9tRWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIG9uUG9pbnRlck1vdmUpO1xuXG4gICAgICBkb21FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIG9uUG9pbnRlclVwKTtcbiAgICAgIGRvbUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsIG9uUG9pbnRlclVwKTtcbiAgICAgIGRvbUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIG9uUG9pbnRlclVwKTtcbiAgICAgIGRvbUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoY2FuY2VsXCIsIG9uUG9pbnRlclVwKTtcbiAgICAgIGRvbUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNobGVhdmVcIiwgb25Qb2ludGVyVXApO1xuXG4gICAgfTtcblxuICAgIHRoaXMuYXR0YWNoID0gZnVuY3Rpb24gKG9iamVjdCkge1xuXG4gICAgICB0aGlzLm9iamVjdCA9IG9iamVjdDtcbiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gICAgICB0aGlzLnVwZGF0ZSgpO1xuXG4gICAgfTtcblxuICAgIHRoaXMuZGV0YWNoID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICB0aGlzLm9iamVjdCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgdGhpcy5heGlzID0gbnVsbDtcblxuICAgIH07XG5cbiAgICB0aGlzLmdldE1vZGUgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgIHJldHVybiBfbW9kZTtcblxuICAgIH07XG5cbiAgICB0aGlzLnNldE1vZGUgPSBmdW5jdGlvbiAobW9kZSkge1xuXG4gICAgICBfbW9kZSA9IG1vZGUgPyBtb2RlIDogX21vZGU7XG5cbiAgICAgIGlmIChfbW9kZSA9PT0gXCJzY2FsZVwiKSBzY29wZS5zcGFjZSA9IFwibG9jYWxcIjtcblxuICAgICAgZm9yICh2YXIgdHlwZSBpbiBfZ2l6bW8pIF9naXptb1t0eXBlXS52aXNpYmxlID0gKHR5cGUgPT09IF9tb2RlKTtcblxuICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICAgIHNjb3BlLmRpc3BhdGNoRXZlbnQoY2hhbmdlRXZlbnQpO1xuXG4gICAgfTtcblxuICAgIHRoaXMuc2V0VHJhbnNsYXRpb25TbmFwID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uU25hcCkge1xuXG4gICAgICBzY29wZS50cmFuc2xhdGlvblNuYXAgPSB0cmFuc2xhdGlvblNuYXA7XG5cbiAgICB9O1xuXG4gICAgdGhpcy5zZXRSb3RhdGlvblNuYXAgPSBmdW5jdGlvbiAocm90YXRpb25TbmFwKSB7XG5cbiAgICAgIHNjb3BlLnJvdGF0aW9uU25hcCA9IHJvdGF0aW9uU25hcDtcblxuICAgIH07XG5cbiAgICB0aGlzLnNldFNpemUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuXG4gICAgICBzY29wZS5zaXplID0gc2l6ZTtcbiAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICBzY29wZS5kaXNwYXRjaEV2ZW50KGNoYW5nZUV2ZW50KTtcblxuICAgIH07XG5cbiAgICB0aGlzLnNldFNwYWNlID0gZnVuY3Rpb24gKHNwYWNlKSB7XG5cbiAgICAgIHNjb3BlLnNwYWNlID0gc3BhY2U7XG4gICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgc2NvcGUuZGlzcGF0Y2hFdmVudChjaGFuZ2VFdmVudCk7XG5cbiAgICB9O1xuXG4gICAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgIGlmIChzY29wZS5vYmplY3QgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICAgICAgbGV0IGNvb3JkID0gc2NvcGUub2JqZWN0LnBvc2l0aW9uO1xuICAgICAgd29ybGRQb3NpdGlvbi5zZXQoY29vcmQueCwgY29vcmQueSwgY29vcmQueik7XG4gICAgICB3b3JsZFJvdGF0aW9uLnNldEZyb21Sb3RhdGlvbk1hdHJpeCh0ZW1wTWF0cml4LmV4dHJhY3RSb3RhdGlvbihzY29wZS5vYmplY3QubWF0cml4V29ybGQpKTtcblxuICAgICAgY2FtZXJhLnVwZGF0ZU1hdHJpeFdvcmxkKCk7XG4gICAgICBjYW1Qb3NpdGlvbi5zZXRGcm9tTWF0cml4UG9zaXRpb24oY2FtZXJhLm1hdHJpeFdvcmxkKTtcbiAgICAgIGNhbVJvdGF0aW9uLnNldEZyb21Sb3RhdGlvbk1hdHJpeCh0ZW1wTWF0cml4LmV4dHJhY3RSb3RhdGlvbihjYW1lcmEubWF0cml4V29ybGQpKTtcblxuICAgICAgLy8gc2NhbGUgPSB3b3JsZFBvc2l0aW9uLmRpc3RhbmNlVG8oIGNhbVBvc2l0aW9uICkgLyA2ICogc2NvcGUuc2l6ZTtcbiAgICAgIHRoaXMucG9zaXRpb24uY29weSh3b3JsZFBvc2l0aW9uKTtcbiAgICAgIHRoaXMuc2NhbGUuc2V0KHNjb3BlLnNpemUsIHNjb3BlLnNpemUsIHNjb3BlLnNpemUpO1xuXG4gICAgICBpZiAoY2FtZXJhIGluc3RhbmNlb2YgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEpIHtcblxuICAgICAgICBleWUuY29weShjYW1Qb3NpdGlvbikuc3ViKHdvcmxkUG9zaXRpb24pLm5vcm1hbGl6ZSgpO1xuXG4gICAgICB9IGVsc2UgaWYgKGNhbWVyYSBpbnN0YW5jZW9mIFRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYSkge1xuXG4gICAgICAgIGV5ZS5jb3B5KGNhbVBvc2l0aW9uKS5ub3JtYWxpemUoKTtcblxuICAgICAgfVxuXG4gICAgICBpZiAoc2NvcGUuc3BhY2UgPT09IFwibG9jYWxcIikge1xuXG4gICAgICAgIF9naXptb1tfbW9kZV0udXBkYXRlKHdvcmxkUm90YXRpb24sIGV5ZSk7XG5cbiAgICAgIH0gZWxzZSBpZiAoc2NvcGUuc3BhY2UgPT09IFwid29ybGRcIikge1xuXG4gICAgICAgIF9naXptb1tfbW9kZV0udXBkYXRlKG5ldyBUSFJFRS5FdWxlcigpLCBleWUpO1xuXG4gICAgICB9XG5cbiAgICAgIF9naXptb1tfbW9kZV0uaGlnaGxpZ2h0KHNjb3BlLmF4aXMpO1xuXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIG9uUG9pbnRlckhvdmVyKGV2ZW50KSB7XG5cbiAgICAgIGlmIChzY29wZS5vYmplY3QgPT09IHVuZGVmaW5lZCB8fCBfZHJhZ2dpbmcgPT09IHRydWUgfHwgKGV2ZW50LmJ1dHRvbiAhPT0gdW5kZWZpbmVkICYmIGV2ZW50LmJ1dHRvbiAhPT0gMCkpIHJldHVybjtcblxuICAgICAgdmFyIHBvaW50ZXIgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyA/IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdIDogZXZlbnQ7XG5cbiAgICAgIHZhciBpbnRlcnNlY3QgPSBpbnRlcnNlY3RPYmplY3RzKHBvaW50ZXIsIF9naXptb1tfbW9kZV0ucGlja2Vycy5jaGlsZHJlbik7XG5cbiAgICAgIHZhciBheGlzID0gbnVsbDtcblxuICAgICAgaWYgKGludGVyc2VjdCkge1xuXG4gICAgICAgIGF4aXMgPSBpbnRlcnNlY3Qub2JqZWN0Lm5hbWU7XG5cbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgfVxuXG4gICAgICBpZiAoc2NvcGUuYXhpcyAhPT0gYXhpcykge1xuXG4gICAgICAgIHNjb3BlLmF4aXMgPSBheGlzO1xuICAgICAgICBzY29wZS51cGRhdGUoKTtcbiAgICAgICAgc2NvcGUuZGlzcGF0Y2hFdmVudChjaGFuZ2VFdmVudCk7XG5cbiAgICAgIH1cblxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uUG9pbnRlckRvd24oZXZlbnQpIHtcblxuICAgICAgaWYgKHNjb3BlLm9iamVjdCA9PT0gdW5kZWZpbmVkIHx8IF9kcmFnZ2luZyA9PT0gdHJ1ZSB8fCAoZXZlbnQuYnV0dG9uICE9PSB1bmRlZmluZWQgJiYgZXZlbnQuYnV0dG9uICE9PSAwKSkgcmV0dXJuO1xuXG4gICAgICB2YXIgcG9pbnRlciA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzID8gZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0gOiBldmVudDtcblxuICAgICAgaWYgKHBvaW50ZXIuYnV0dG9uID09PSAwIHx8IHBvaW50ZXIuYnV0dG9uID09PSB1bmRlZmluZWQpIHtcblxuICAgICAgICB2YXIgaW50ZXJzZWN0ID0gaW50ZXJzZWN0T2JqZWN0cyhwb2ludGVyLCBfZ2l6bW9bX21vZGVdLnBpY2tlcnMuY2hpbGRyZW4pO1xuXG4gICAgICAgIGlmIChpbnRlcnNlY3QpIHtcblxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgICBzY29wZS5heGlzID0gaW50ZXJzZWN0Lm9iamVjdC5uYW1lO1xuXG4gICAgICAgICAgc2NvcGUuZGlzcGF0Y2hFdmVudChtb3VzZURvd25FdmVudCk7XG5cbiAgICAgICAgICBzY29wZS51cGRhdGUoKTtcblxuICAgICAgICAgIGV5ZS5jb3B5KGNhbVBvc2l0aW9uKS5zdWIod29ybGRQb3NpdGlvbikubm9ybWFsaXplKCk7XG5cbiAgICAgICAgICBfZ2l6bW9bX21vZGVdLnNldEFjdGl2ZVBsYW5lKHNjb3BlLmF4aXMsIGV5ZSk7XG5cbiAgICAgICAgICB2YXIgcGxhbmVJbnRlcnNlY3QgPSBpbnRlcnNlY3RPYmplY3RzKHBvaW50ZXIsIFtfZ2l6bW9bX21vZGVdLmFjdGl2ZVBsYW5lXSk7XG5cbiAgICAgICAgICBpZiAocGxhbmVJbnRlcnNlY3QpIHtcblxuICAgICAgICAgICAgb2xkUG9zaXRpb24uY29weShzY29wZS5vYmplY3QucG9zaXRpb24pO1xuICAgICAgICAgICAgb2xkU2NhbGUuY29weShzY29wZS5vYmplY3Quc2NhbGUpO1xuXG4gICAgICAgICAgICBvbGRSb3RhdGlvbk1hdHJpeC5leHRyYWN0Um90YXRpb24oc2NvcGUub2JqZWN0Lm1hdHJpeCk7XG4gICAgICAgICAgICB3b3JsZFJvdGF0aW9uTWF0cml4LmV4dHJhY3RSb3RhdGlvbihzY29wZS5vYmplY3QubWF0cml4V29ybGQpO1xuXG4gICAgICAgICAgICBwYXJlbnRSb3RhdGlvbk1hdHJpeC5leHRyYWN0Um90YXRpb24oc2NvcGUub2JqZWN0LnBhcmVudC5tYXRyaXhXb3JsZCk7XG4gICAgICAgICAgICBwYXJlbnRTY2FsZS5zZXRGcm9tTWF0cml4U2NhbGUodGVtcE1hdHJpeC5nZXRJbnZlcnNlKHNjb3BlLm9iamVjdC5wYXJlbnQubWF0cml4V29ybGQpKTtcblxuICAgICAgICAgICAgb2Zmc2V0LmNvcHkocGxhbmVJbnRlcnNlY3QucG9pbnQpO1xuXG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgfVxuXG4gICAgICBfZHJhZ2dpbmcgPSB0cnVlO1xuXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25Qb2ludGVyTW92ZShldmVudCkge1xuXG4gICAgICBpZiAoc2NvcGUub2JqZWN0ID09PSB1bmRlZmluZWQgfHwgc2NvcGUuYXhpcyA9PT0gbnVsbCB8fCBfZHJhZ2dpbmcgPT09IGZhbHNlIHx8IChldmVudC5idXR0b24gIT09IHVuZGVmaW5lZCAmJiBldmVudC5idXR0b24gIT09IDApKSByZXR1cm47XG5cbiAgICAgIHZhciBwb2ludGVyID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMgPyBldmVudC5jaGFuZ2VkVG91Y2hlc1swXSA6IGV2ZW50O1xuXG4gICAgICB2YXIgcGxhbmVJbnRlcnNlY3QgPSBpbnRlcnNlY3RPYmplY3RzKHBvaW50ZXIsIFtfZ2l6bW9bX21vZGVdLmFjdGl2ZVBsYW5lXSk7XG5cbiAgICAgIGlmIChwbGFuZUludGVyc2VjdCA9PT0gZmFsc2UpIHJldHVybjtcblxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICBwb2ludC5jb3B5KHBsYW5lSW50ZXJzZWN0LnBvaW50KTtcblxuICAgICAgaWYgKF9tb2RlID09PSBcInRyYW5zbGF0ZVwiKSB7XG5cbiAgICAgICAgcG9pbnQuc3ViKG9mZnNldCk7XG4gICAgICAgIHBvaW50Lm11bHRpcGx5KHBhcmVudFNjYWxlKTtcblxuICAgICAgICBpZiAoc2NvcGUuc3BhY2UgPT09IFwibG9jYWxcIikge1xuXG4gICAgICAgICAgcG9pbnQuYXBwbHlNYXRyaXg0KHRlbXBNYXRyaXguZ2V0SW52ZXJzZSh3b3JsZFJvdGF0aW9uTWF0cml4KSk7XG5cbiAgICAgICAgICBpZiAoc2NvcGUuYXhpcy5zZWFyY2goXCJYXCIpID09PSAtMSkgcG9pbnQueCA9IDA7XG4gICAgICAgICAgaWYgKHNjb3BlLmF4aXMuc2VhcmNoKFwiWVwiKSA9PT0gLTEpIHBvaW50LnkgPSAwO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzLnNlYXJjaChcIlpcIikgPT09IC0xKSBwb2ludC56ID0gMDtcblxuICAgICAgICAgIHBvaW50LmFwcGx5TWF0cml4NChvbGRSb3RhdGlvbk1hdHJpeCk7XG5cbiAgICAgICAgICBzY29wZS5vYmplY3QucG9zaXRpb24uY29weShvbGRQb3NpdGlvbik7XG4gICAgICAgICAgc2NvcGUub2JqZWN0LnBvc2l0aW9uLmFkZChwb2ludCk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzY29wZS5zcGFjZSA9PT0gXCJ3b3JsZFwiIHx8IHNjb3BlLmF4aXMuc2VhcmNoKFwiWFlaXCIpICE9PSAtMSkge1xuXG4gICAgICAgICAgaWYgKHNjb3BlLmF4aXMuc2VhcmNoKFwiWFwiKSA9PT0gLTEpIHBvaW50LnggPSAwO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzLnNlYXJjaChcIllcIikgPT09IC0xKSBwb2ludC55ID0gMDtcbiAgICAgICAgICBpZiAoc2NvcGUuYXhpcy5zZWFyY2goXCJaXCIpID09PSAtMSkgcG9pbnQueiA9IDA7XG5cbiAgICAgICAgICBwb2ludC5hcHBseU1hdHJpeDQodGVtcE1hdHJpeC5nZXRJbnZlcnNlKHBhcmVudFJvdGF0aW9uTWF0cml4KSk7XG5cbiAgICAgICAgICBzY29wZS5vYmplY3QucG9zaXRpb24uY29weShvbGRQb3NpdGlvbik7XG4gICAgICAgICAgc2NvcGUub2JqZWN0LnBvc2l0aW9uLmFkZChwb2ludCk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzY29wZS50cmFuc2xhdGlvblNuYXAgIT09IG51bGwpIHtcblxuICAgICAgICAgIGlmIChzY29wZS5zcGFjZSA9PT0gXCJsb2NhbFwiKSB7XG5cbiAgICAgICAgICAgIHNjb3BlLm9iamVjdC5wb3NpdGlvbi5hcHBseU1hdHJpeDQodGVtcE1hdHJpeC5nZXRJbnZlcnNlKHdvcmxkUm90YXRpb25NYXRyaXgpKTtcblxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzY29wZS5heGlzLnNlYXJjaChcIlhcIikgIT09IC0xKSBzY29wZS5vYmplY3QucG9zaXRpb24ueCA9IE1hdGgucm91bmQoc2NvcGUub2JqZWN0LnBvc2l0aW9uLnggLyBzY29wZS50cmFuc2xhdGlvblNuYXApICogc2NvcGUudHJhbnNsYXRpb25TbmFwO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzLnNlYXJjaChcIllcIikgIT09IC0xKSBzY29wZS5vYmplY3QucG9zaXRpb24ueSA9IE1hdGgucm91bmQoc2NvcGUub2JqZWN0LnBvc2l0aW9uLnkgLyBzY29wZS50cmFuc2xhdGlvblNuYXApICogc2NvcGUudHJhbnNsYXRpb25TbmFwO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzLnNlYXJjaChcIlpcIikgIT09IC0xKSBzY29wZS5vYmplY3QucG9zaXRpb24ueiA9IE1hdGgucm91bmQoc2NvcGUub2JqZWN0LnBvc2l0aW9uLnogLyBzY29wZS50cmFuc2xhdGlvblNuYXApICogc2NvcGUudHJhbnNsYXRpb25TbmFwO1xuXG4gICAgICAgICAgaWYgKHNjb3BlLnNwYWNlID09PSBcImxvY2FsXCIpIHtcblxuICAgICAgICAgICAgc2NvcGUub2JqZWN0LnBvc2l0aW9uLmFwcGx5TWF0cml4NCh3b3JsZFJvdGF0aW9uTWF0cml4KTtcblxuICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgIH0gZWxzZSBpZiAoX21vZGUgPT09IFwic2NhbGVcIikge1xuXG4gICAgICAgIHBvaW50LnN1YihvZmZzZXQpO1xuICAgICAgICBwb2ludC5tdWx0aXBseShwYXJlbnRTY2FsZSk7XG5cbiAgICAgICAgaWYgKHNjb3BlLnNwYWNlID09PSBcImxvY2FsXCIpIHtcblxuICAgICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIlhZWlwiKSB7XG5cbiAgICAgICAgICAgIHNjYWxlID0gMSArICgocG9pbnQueSkgLyBNYXRoLm1heChvbGRTY2FsZS54LCBvbGRTY2FsZS55LCBvbGRTY2FsZS56KSk7XG5cbiAgICAgICAgICAgIHNjb3BlLm9iamVjdC5zY2FsZS54ID0gb2xkU2NhbGUueCAqIHNjYWxlO1xuICAgICAgICAgICAgc2NvcGUub2JqZWN0LnNjYWxlLnkgPSBvbGRTY2FsZS55ICogc2NhbGU7XG4gICAgICAgICAgICBzY29wZS5vYmplY3Quc2NhbGUueiA9IG9sZFNjYWxlLnogKiBzY2FsZTtcblxuICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIHBvaW50LmFwcGx5TWF0cml4NCh0ZW1wTWF0cml4LmdldEludmVyc2Uod29ybGRSb3RhdGlvbk1hdHJpeCkpO1xuXG4gICAgICAgICAgICBpZiAoc2NvcGUuYXhpcyA9PT0gXCJYXCIpIHNjb3BlLm9iamVjdC5zY2FsZS54ID0gb2xkU2NhbGUueCAqICgxICsgcG9pbnQueCAvIG9sZFNjYWxlLngpO1xuICAgICAgICAgICAgaWYgKHNjb3BlLmF4aXMgPT09IFwiWVwiKSBzY29wZS5vYmplY3Quc2NhbGUueSA9IG9sZFNjYWxlLnkgKiAoMSArIHBvaW50LnkgLyBvbGRTY2FsZS55KTtcbiAgICAgICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIlpcIikgc2NvcGUub2JqZWN0LnNjYWxlLnogPSBvbGRTY2FsZS56ICogKDEgKyBwb2ludC56IC8gb2xkU2NhbGUueik7XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICB9IGVsc2UgaWYgKF9tb2RlID09PSBcInJvdGF0ZVwiKSB7XG5cbiAgICAgICAgcG9pbnQuc3ViKHNjb3BlLm9iamVjdC5nZXRXb3JsZFBvc2l0aW9uKG5ldyBUSFJFRS5WZWN0b3IzKCkpKTtcbiAgICAgICAgcG9pbnQubXVsdGlwbHkocGFyZW50U2NhbGUpO1xuICAgICAgICB0ZW1wVmVjdG9yLmNvcHkob2Zmc2V0KS5zdWIod29ybGRQb3NpdGlvbik7XG4gICAgICAgIHRlbXBWZWN0b3IubXVsdGlwbHkocGFyZW50U2NhbGUpO1xuXG4gICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIkVcIikge1xuXG4gICAgICAgICAgcG9pbnQuYXBwbHlNYXRyaXg0KHRlbXBNYXRyaXguZ2V0SW52ZXJzZShsb29rQXRNYXRyaXgpKTtcbiAgICAgICAgICB0ZW1wVmVjdG9yLmFwcGx5TWF0cml4NCh0ZW1wTWF0cml4LmdldEludmVyc2UobG9va0F0TWF0cml4KSk7XG5cbiAgICAgICAgICByb3RhdGlvbi5zZXQoTWF0aC5hdGFuMihwb2ludC56LCBwb2ludC55KSwgTWF0aC5hdGFuMihwb2ludC54LCBwb2ludC56KSwgTWF0aC5hdGFuMihwb2ludC55LCBwb2ludC54KSk7XG4gICAgICAgICAgb2Zmc2V0Um90YXRpb24uc2V0KE1hdGguYXRhbjIodGVtcFZlY3Rvci56LCB0ZW1wVmVjdG9yLnkpLCBNYXRoLmF0YW4yKHRlbXBWZWN0b3IueCwgdGVtcFZlY3Rvci56KSwgTWF0aC5hdGFuMih0ZW1wVmVjdG9yLnksIHRlbXBWZWN0b3IueCkpO1xuXG4gICAgICAgICAgdGVtcFF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KHRlbXBNYXRyaXguZ2V0SW52ZXJzZShwYXJlbnRSb3RhdGlvbk1hdHJpeCkpO1xuXG4gICAgICAgICAgcXVhdGVybmlvbkUuc2V0RnJvbUF4aXNBbmdsZShleWUsIHJvdGF0aW9uLnogLSBvZmZzZXRSb3RhdGlvbi56KTtcbiAgICAgICAgICBxdWF0ZXJuaW9uWFlaLnNldEZyb21Sb3RhdGlvbk1hdHJpeCh3b3JsZFJvdGF0aW9uTWF0cml4KTtcblxuICAgICAgICAgIHRlbXBRdWF0ZXJuaW9uLm11bHRpcGx5UXVhdGVybmlvbnModGVtcFF1YXRlcm5pb24sIHF1YXRlcm5pb25FKTtcbiAgICAgICAgICB0ZW1wUXVhdGVybmlvbi5tdWx0aXBseVF1YXRlcm5pb25zKHRlbXBRdWF0ZXJuaW9uLCBxdWF0ZXJuaW9uWFlaKTtcblxuICAgICAgICAgIHNjb3BlLm9iamVjdC5xdWF0ZXJuaW9uLmNvcHkodGVtcFF1YXRlcm5pb24pO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoc2NvcGUuYXhpcyA9PT0gXCJYWVpFXCIpIHtcblxuICAgICAgICAgIHF1YXRlcm5pb25FLnNldEZyb21FdWxlcihwb2ludC5jbG9uZSgpLmNyb3NzKHRlbXBWZWN0b3IpLm5vcm1hbGl6ZSgpKTsgLy8gcm90YXRpb24gYXhpc1xuXG4gICAgICAgICAgdGVtcFF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KHRlbXBNYXRyaXguZ2V0SW52ZXJzZShwYXJlbnRSb3RhdGlvbk1hdHJpeCkpO1xuICAgICAgICAgIHF1YXRlcm5pb25YLnNldEZyb21BeGlzQW5nbGUocXVhdGVybmlvbkUsIC1wb2ludC5jbG9uZSgpLmFuZ2xlVG8odGVtcFZlY3RvcikpO1xuICAgICAgICAgIHF1YXRlcm5pb25YWVouc2V0RnJvbVJvdGF0aW9uTWF0cml4KHdvcmxkUm90YXRpb25NYXRyaXgpO1xuXG4gICAgICAgICAgdGVtcFF1YXRlcm5pb24ubXVsdGlwbHlRdWF0ZXJuaW9ucyh0ZW1wUXVhdGVybmlvbiwgcXVhdGVybmlvblgpO1xuICAgICAgICAgIHRlbXBRdWF0ZXJuaW9uLm11bHRpcGx5UXVhdGVybmlvbnModGVtcFF1YXRlcm5pb24sIHF1YXRlcm5pb25YWVopO1xuXG4gICAgICAgICAgc2NvcGUub2JqZWN0LnF1YXRlcm5pb24uY29weSh0ZW1wUXVhdGVybmlvbik7XG5cbiAgICAgICAgfSBlbHNlIGlmIChzY29wZS5zcGFjZSA9PT0gXCJsb2NhbFwiKSB7XG5cbiAgICAgICAgICBwb2ludC5hcHBseU1hdHJpeDQodGVtcE1hdHJpeC5nZXRJbnZlcnNlKHdvcmxkUm90YXRpb25NYXRyaXgpKTtcblxuICAgICAgICAgIHRlbXBWZWN0b3IuYXBwbHlNYXRyaXg0KHRlbXBNYXRyaXguZ2V0SW52ZXJzZSh3b3JsZFJvdGF0aW9uTWF0cml4KSk7XG5cbiAgICAgICAgICByb3RhdGlvbi5zZXQoTWF0aC5hdGFuMihwb2ludC56LCBwb2ludC55KSwgTWF0aC5hdGFuMihwb2ludC54LCBwb2ludC56KSwgTWF0aC5hdGFuMihwb2ludC55LCBwb2ludC54KSk7XG4gICAgICAgICAgb2Zmc2V0Um90YXRpb24uc2V0KE1hdGguYXRhbjIodGVtcFZlY3Rvci56LCB0ZW1wVmVjdG9yLnkpLCBNYXRoLmF0YW4yKHRlbXBWZWN0b3IueCwgdGVtcFZlY3Rvci56KSwgTWF0aC5hdGFuMih0ZW1wVmVjdG9yLnksIHRlbXBWZWN0b3IueCkpO1xuXG4gICAgICAgICAgcXVhdGVybmlvblhZWi5zZXRGcm9tUm90YXRpb25NYXRyaXgob2xkUm90YXRpb25NYXRyaXgpO1xuXG4gICAgICAgICAgaWYgKHNjb3BlLnJvdGF0aW9uU25hcCAhPT0gbnVsbCkge1xuXG4gICAgICAgICAgICBxdWF0ZXJuaW9uWC5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRYLCBNYXRoLnJvdW5kKChyb3RhdGlvbi54IC0gb2Zmc2V0Um90YXRpb24ueCkgLyBzY29wZS5yb3RhdGlvblNuYXApICogc2NvcGUucm90YXRpb25TbmFwKTtcbiAgICAgICAgICAgIHF1YXRlcm5pb25ZLnNldEZyb21BeGlzQW5nbGUodW5pdFksIE1hdGgucm91bmQoKHJvdGF0aW9uLnkgLSBvZmZzZXRSb3RhdGlvbi55KSAvIHNjb3BlLnJvdGF0aW9uU25hcCkgKiBzY29wZS5yb3RhdGlvblNuYXApO1xuICAgICAgICAgICAgcXVhdGVybmlvblouc2V0RnJvbUF4aXNBbmdsZSh1bml0WiwgTWF0aC5yb3VuZCgocm90YXRpb24ueiAtIG9mZnNldFJvdGF0aW9uLnopIC8gc2NvcGUucm90YXRpb25TbmFwKSAqIHNjb3BlLnJvdGF0aW9uU25hcCk7XG5cbiAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBxdWF0ZXJuaW9uWC5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRYLCByb3RhdGlvbi54IC0gb2Zmc2V0Um90YXRpb24ueCk7XG4gICAgICAgICAgICBxdWF0ZXJuaW9uWS5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRZLCByb3RhdGlvbi55IC0gb2Zmc2V0Um90YXRpb24ueSk7XG4gICAgICAgICAgICBxdWF0ZXJuaW9uWi5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRaLCByb3RhdGlvbi56IC0gb2Zmc2V0Um90YXRpb24ueik7XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2NvcGUuYXhpcyA9PT0gXCJYXCIpIHF1YXRlcm5pb25YWVoubXVsdGlwbHlRdWF0ZXJuaW9ucyhxdWF0ZXJuaW9uWFlaLCBxdWF0ZXJuaW9uWCk7XG4gICAgICAgICAgaWYgKHNjb3BlLmF4aXMgPT09IFwiWVwiKSBxdWF0ZXJuaW9uWFlaLm11bHRpcGx5UXVhdGVybmlvbnMocXVhdGVybmlvblhZWiwgcXVhdGVybmlvblkpO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIlpcIikgcXVhdGVybmlvblhZWi5tdWx0aXBseVF1YXRlcm5pb25zKHF1YXRlcm5pb25YWVosIHF1YXRlcm5pb25aKTtcblxuICAgICAgICAgIHNjb3BlLm9iamVjdC5xdWF0ZXJuaW9uLmNvcHkocXVhdGVybmlvblhZWik7XG5cbiAgICAgICAgfSBlbHNlIGlmIChzY29wZS5zcGFjZSA9PT0gXCJ3b3JsZFwiKSB7XG5cbiAgICAgICAgICByb3RhdGlvbi5zZXQoTWF0aC5hdGFuMihwb2ludC56LCBwb2ludC55KSwgTWF0aC5hdGFuMihwb2ludC54LCBwb2ludC56KSwgTWF0aC5hdGFuMihwb2ludC55LCBwb2ludC54KSk7XG4gICAgICAgICAgb2Zmc2V0Um90YXRpb24uc2V0KE1hdGguYXRhbjIodGVtcFZlY3Rvci56LCB0ZW1wVmVjdG9yLnkpLCBNYXRoLmF0YW4yKHRlbXBWZWN0b3IueCwgdGVtcFZlY3Rvci56KSwgTWF0aC5hdGFuMih0ZW1wVmVjdG9yLnksIHRlbXBWZWN0b3IueCkpO1xuXG4gICAgICAgICAgdGVtcFF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KHRlbXBNYXRyaXguZ2V0SW52ZXJzZShwYXJlbnRSb3RhdGlvbk1hdHJpeCkpO1xuXG4gICAgICAgICAgaWYgKHNjb3BlLnJvdGF0aW9uU25hcCAhPT0gbnVsbCkge1xuXG4gICAgICAgICAgICBxdWF0ZXJuaW9uWC5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRYLCBNYXRoLnJvdW5kKChyb3RhdGlvbi54IC0gb2Zmc2V0Um90YXRpb24ueCkgLyBzY29wZS5yb3RhdGlvblNuYXApICogc2NvcGUucm90YXRpb25TbmFwKTtcbiAgICAgICAgICAgIHF1YXRlcm5pb25ZLnNldEZyb21BeGlzQW5nbGUodW5pdFksIE1hdGgucm91bmQoKHJvdGF0aW9uLnkgLSBvZmZzZXRSb3RhdGlvbi55KSAvIHNjb3BlLnJvdGF0aW9uU25hcCkgKiBzY29wZS5yb3RhdGlvblNuYXApO1xuICAgICAgICAgICAgcXVhdGVybmlvblouc2V0RnJvbUF4aXNBbmdsZSh1bml0WiwgTWF0aC5yb3VuZCgocm90YXRpb24ueiAtIG9mZnNldFJvdGF0aW9uLnopIC8gc2NvcGUucm90YXRpb25TbmFwKSAqIHNjb3BlLnJvdGF0aW9uU25hcCk7XG5cbiAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBxdWF0ZXJuaW9uWC5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRYLCByb3RhdGlvbi54IC0gb2Zmc2V0Um90YXRpb24ueCk7XG4gICAgICAgICAgICBxdWF0ZXJuaW9uWS5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRZLCByb3RhdGlvbi55IC0gb2Zmc2V0Um90YXRpb24ueSk7XG4gICAgICAgICAgICBxdWF0ZXJuaW9uWi5zZXRGcm9tQXhpc0FuZ2xlKHVuaXRaLCByb3RhdGlvbi56IC0gb2Zmc2V0Um90YXRpb24ueik7XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBxdWF0ZXJuaW9uWFlaLnNldEZyb21Sb3RhdGlvbk1hdHJpeCh3b3JsZFJvdGF0aW9uTWF0cml4KTtcblxuICAgICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIlhcIikgdGVtcFF1YXRlcm5pb24ubXVsdGlwbHlRdWF0ZXJuaW9ucyh0ZW1wUXVhdGVybmlvbiwgcXVhdGVybmlvblgpO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIllcIikgdGVtcFF1YXRlcm5pb24ubXVsdGlwbHlRdWF0ZXJuaW9ucyh0ZW1wUXVhdGVybmlvbiwgcXVhdGVybmlvblkpO1xuICAgICAgICAgIGlmIChzY29wZS5heGlzID09PSBcIlpcIikgdGVtcFF1YXRlcm5pb24ubXVsdGlwbHlRdWF0ZXJuaW9ucyh0ZW1wUXVhdGVybmlvbiwgcXVhdGVybmlvblopO1xuXG4gICAgICAgICAgdGVtcFF1YXRlcm5pb24ubXVsdGlwbHlRdWF0ZXJuaW9ucyh0ZW1wUXVhdGVybmlvbiwgcXVhdGVybmlvblhZWik7XG5cbiAgICAgICAgICBzY29wZS5vYmplY3QucXVhdGVybmlvbi5jb3B5KHRlbXBRdWF0ZXJuaW9uKTtcblxuICAgICAgICB9XG5cbiAgICAgIH1cblxuICAgICAgc2NvcGUudXBkYXRlKCk7XG4gICAgICBzY29wZS5kaXNwYXRjaEV2ZW50KGNoYW5nZUV2ZW50KTtcbiAgICAgIHNjb3BlLmRpc3BhdGNoRXZlbnQob2JqZWN0Q2hhbmdlRXZlbnQpO1xuXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25Qb2ludGVyVXAoZXZlbnQpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIFByZXZlbnQgTW91c2VFdmVudCBvbiBtb2JpbGVcbiAgICAgIGlmIChldmVudC5idXR0b24gIT09IHVuZGVmaW5lZCAmJiBldmVudC5idXR0b24gIT09IDApIHJldHVybjtcbiAgICAgIGlmIChfZHJhZ2dpbmcgJiYgKHNjb3BlLmF4aXMgIT09IG51bGwpKSB7XG4gICAgICAgIG1vdXNlVXBFdmVudC5tb2RlID0gX21vZGU7XG4gICAgICAgIHNjb3BlLmRpc3BhdGNoRXZlbnQobW91c2VVcEV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgX2RyYWdnaW5nID0gZmFsc2U7XG5cbiAgICAgIGlmICgnVG91Y2hFdmVudCcgaW4gd2luZG93ICYmIGV2ZW50IGluc3RhbmNlb2YgVG91Y2hFdmVudCkge1xuXG4gICAgICAgIC8vIEZvcmNlIFwicm9sbG92ZXJcIlxuXG4gICAgICAgIHNjb3BlLmF4aXMgPSBudWxsO1xuICAgICAgICBzY29wZS51cGRhdGUoKTtcbiAgICAgICAgc2NvcGUuZGlzcGF0Y2hFdmVudChjaGFuZ2VFdmVudCk7XG5cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgb25Qb2ludGVySG92ZXIoZXZlbnQpO1xuXG4gICAgICB9XG5cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnRlcnNlY3RPYmplY3RzKHBvaW50ZXIsIG9iamVjdHMpIHtcblxuICAgICAgdmFyIHJlY3QgPSBkb21FbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdmFyIHggPSAocG9pbnRlci5jbGllbnRYIC0gcmVjdC5sZWZ0KSAvIHJlY3Qud2lkdGg7XG4gICAgICB2YXIgeSA9IChwb2ludGVyLmNsaWVudFkgLSByZWN0LnRvcCkgLyByZWN0LmhlaWdodDtcblxuICAgICAgcG9pbnRlclZlY3Rvci5zZXQoKHggKiAyKSAtIDEsIC0oeSAqIDIpICsgMSk7XG4gICAgICByYXkuc2V0RnJvbUNhbWVyYShwb2ludGVyVmVjdG9yLCBjYW1lcmEpO1xuXG4gICAgICB2YXIgaW50ZXJzZWN0aW9ucyA9IHJheS5pbnRlcnNlY3RPYmplY3RzKG9iamVjdHMsIHRydWUpO1xuICAgICAgcmV0dXJuIGludGVyc2VjdGlvbnNbMF0gPyBpbnRlcnNlY3Rpb25zWzBdIDogZmFsc2U7XG5cbiAgICB9XG5cbiAgfTtcblxuICBUSFJFRS5UcmFuc2Zvcm1Db250cm9scy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7XG4gIFRIUkVFLlRyYW5zZm9ybUNvbnRyb2xzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFRIUkVFLlRyYW5zZm9ybUNvbnRyb2xzO1xuXG59KCkpO1xuIiwiKGZ1bmN0aW9uIGUodCxuLGkpe2Z1bmN0aW9uIHIobCx1KXtpZighbltsXSl7aWYoIXRbbF0pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobCwhMCk7aWYocylyZXR1cm4gcyhsLCEwKTt2YXIgbz1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2wrXCInXCIpO3Rocm93IG8uY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixvfXZhciBmPW5bbF09e2V4cG9ydHM6e319O3RbbF1bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtsXVsxXVtlXTtyZXR1cm4gcihuP246ZSl9LGYsZi5leHBvcnRzLGUsdCxuLGkpfXJldHVybiBuW2xdLmV4cG9ydHN9dmFyIHM9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIGw9MDtsPGkubGVuZ3RoO2wrKylyKGlbbF0pO3JldHVybiByfSkoezE6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxyLHM7cz1lKFwiLi9VdGlsc1wiKTtyPWUoXCIuL0lubGluZVwiKTtpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31lLmluZGVudGF0aW9uPTQ7ZS5wcm90b3R5cGUuZHVtcD1mdW5jdGlvbihlLHQsbixpLGwpe3ZhciB1LGEsbyxmLGMsaCxwO2lmKHQ9PW51bGwpe3Q9MH1pZihuPT1udWxsKXtuPTB9aWYoaT09bnVsbCl7aT1mYWxzZX1pZihsPT1udWxsKXtsPW51bGx9Zj1cIlwiO2M9bj9zLnN0clJlcGVhdChcIiBcIixuKTpcIlwiO2lmKHQ8PTB8fHR5cGVvZiBlIT09XCJvYmplY3RcInx8ZSBpbnN0YW5jZW9mIERhdGV8fHMuaXNFbXB0eShlKSl7Zis9YytyLmR1bXAoZSxpLGwpfWVsc2V7aWYoZSBpbnN0YW5jZW9mIEFycmF5KXtmb3IodT0wLG89ZS5sZW5ndGg7dTxvO3UrKyl7aD1lW3VdO3A9dC0xPD0wfHx0eXBlb2YgaCE9PVwib2JqZWN0XCJ8fHMuaXNFbXB0eShoKTtmKz1jK1wiLVwiKyhwP1wiIFwiOlwiXFxuXCIpK3RoaXMuZHVtcChoLHQtMSxwPzA6bit0aGlzLmluZGVudGF0aW9uLGksbCkrKHA/XCJcXG5cIjpcIlwiKX19ZWxzZXtmb3IoYSBpbiBlKXtoPWVbYV07cD10LTE8PTB8fHR5cGVvZiBoIT09XCJvYmplY3RcInx8cy5pc0VtcHR5KGgpO2YrPWMrci5kdW1wKGEsaSxsKStcIjpcIisocD9cIiBcIjpcIlxcblwiKSt0aGlzLmR1bXAoaCx0LTEscD8wOm4rdGhpcy5pbmRlbnRhdGlvbixpLGwpKyhwP1wiXFxuXCI6XCJcIil9fX1yZXR1cm4gZn07cmV0dXJuIGV9KCk7dC5leHBvcnRzPWl9LHtcIi4vSW5saW5lXCI6NixcIi4vVXRpbHNcIjoxMH1dLDI6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxyO3I9ZShcIi4vUGF0dGVyblwiKTtpPWZ1bmN0aW9uKCl7dmFyIGU7ZnVuY3Rpb24gdCgpe310LkxJU1RfRVNDQVBFRVM9W1wiXFxcXFwiLFwiXFxcXFxcXFxcIiwnXFxcXFwiJywnXCInLFwiXFwwXCIsXCJcdTAwMDFcIixcIlx1MDAwMlwiLFwiXHUwMDAzXCIsXCJcdTAwMDRcIixcIlx1MDAwNVwiLFwiXHUwMDA2XCIsXCJcdTAwMDdcIixcIlxcYlwiLFwiXFx0XCIsXCJcXG5cIixcIlxcdlwiLFwiXFxmXCIsXCJcXHJcIixcIlx1MDAwZVwiLFwiXHUwMDBmXCIsXCJcdTAwMTBcIixcIlx1MDAxMVwiLFwiXHUwMDEyXCIsXCJcdTAwMTNcIixcIlx1MDAxNFwiLFwiXHUwMDE1XCIsXCJcdTAwMTZcIixcIlx1MDAxN1wiLFwiXHUwMDE4XCIsXCJcdTAwMTlcIixcIlx1MDAxYVwiLFwiXHUwMDFiXCIsXCJcdTAwMWNcIixcIlx1MDAxZFwiLFwiXHUwMDFlXCIsXCJcdTAwMWZcIiwoZT1TdHJpbmcuZnJvbUNoYXJDb2RlKSgxMzMpLGUoMTYwKSxlKDgyMzIpLGUoODIzMyldO3QuTElTVF9FU0NBUEVEPVtcIlxcXFxcXFxcXCIsJ1xcXFxcIicsJ1xcXFxcIicsJ1xcXFxcIicsXCJcXFxcMFwiLFwiXFxcXHgwMVwiLFwiXFxcXHgwMlwiLFwiXFxcXHgwM1wiLFwiXFxcXHgwNFwiLFwiXFxcXHgwNVwiLFwiXFxcXHgwNlwiLFwiXFxcXGFcIixcIlxcXFxiXCIsXCJcXFxcdFwiLFwiXFxcXG5cIixcIlxcXFx2XCIsXCJcXFxcZlwiLFwiXFxcXHJcIixcIlxcXFx4MGVcIixcIlxcXFx4MGZcIixcIlxcXFx4MTBcIixcIlxcXFx4MTFcIixcIlxcXFx4MTJcIixcIlxcXFx4MTNcIixcIlxcXFx4MTRcIixcIlxcXFx4MTVcIixcIlxcXFx4MTZcIixcIlxcXFx4MTdcIixcIlxcXFx4MThcIixcIlxcXFx4MTlcIixcIlxcXFx4MWFcIixcIlxcXFxlXCIsXCJcXFxceDFjXCIsXCJcXFxceDFkXCIsXCJcXFxceDFlXCIsXCJcXFxceDFmXCIsXCJcXFxcTlwiLFwiXFxcXF9cIixcIlxcXFxMXCIsXCJcXFxcUFwiXTt0Lk1BUFBJTkdfRVNDQVBFRVNfVE9fRVNDQVBFRD1mdW5jdGlvbigpe3ZhciBlLG4saSxyO2k9e307Zm9yKGU9bj0wLHI9dC5MSVNUX0VTQ0FQRUVTLmxlbmd0aDswPD1yP248cjpuPnI7ZT0wPD1yPysrbjotLW4pe2lbdC5MSVNUX0VTQ0FQRUVTW2VdXT10LkxJU1RfRVNDQVBFRFtlXX1yZXR1cm4gaX0oKTt0LlBBVFRFUk5fQ0hBUkFDVEVSU19UT19FU0NBUEU9bmV3IHIoXCJbXFxcXHgwMC1cXFxceDFmXXzDgsKFfMOCIHzDosKAwqh8w6LCgMKpXCIpO3QuUEFUVEVSTl9NQVBQSU5HX0VTQ0FQRUVTPW5ldyByKHQuTElTVF9FU0NBUEVFUy5qb2luKFwifFwiKS5zcGxpdChcIlxcXFxcIikuam9pbihcIlxcXFxcXFxcXCIpKTt0LlBBVFRFUk5fU0lOR0xFX1FVT1RJTkc9bmV3IHIoXCJbXFxcXHMnXFxcIjp7fVtcXFxcXSwmKiM/XXxeWy0/fDw+PSElQGBdXCIpO3QucmVxdWlyZXNEb3VibGVRdW90aW5nPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLlBBVFRFUk5fQ0hBUkFDVEVSU19UT19FU0NBUEUudGVzdChlKX07dC5lc2NhcGVXaXRoRG91YmxlUXVvdGVzPWZ1bmN0aW9uKGUpe3ZhciB0O3Q9dGhpcy5QQVRURVJOX01BUFBJTkdfRVNDQVBFRVMucmVwbGFjZShlLGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZS5NQVBQSU5HX0VTQ0FQRUVTX1RPX0VTQ0FQRURbdF19fSh0aGlzKSk7cmV0dXJuJ1wiJyt0KydcIid9O3QucmVxdWlyZXNTaW5nbGVRdW90aW5nPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLlBBVFRFUk5fU0lOR0xFX1FVT1RJTkcudGVzdChlKX07dC5lc2NhcGVXaXRoU2luZ2xlUXVvdGVzPWZ1bmN0aW9uKGUpe3JldHVyblwiJ1wiK2UucmVwbGFjZSgvJy9nLFwiJydcIikrXCInXCJ9O3JldHVybiB0fSgpO3QuZXhwb3J0cz1pfSx7XCIuL1BhdHRlcm5cIjo4fV0sMzpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHI9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl7aWYocy5jYWxsKHQsbikpZVtuXT10W25dfWZ1bmN0aW9uIGkoKXt0aGlzLmNvbnN0cnVjdG9yPWV9aS5wcm90b3R5cGU9dC5wcm90b3R5cGU7ZS5wcm90b3R5cGU9bmV3IGk7ZS5fX3N1cGVyX189dC5wcm90b3R5cGU7cmV0dXJuIGV9LHM9e30uaGFzT3duUHJvcGVydHk7aT1mdW5jdGlvbihlKXtyKHQsZSk7ZnVuY3Rpb24gdChlLHQsbil7dGhpcy5tZXNzYWdlPWU7dGhpcy5wYXJzZWRMaW5lPXQ7dGhpcy5zbmlwcGV0PW59dC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtpZih0aGlzLnBhcnNlZExpbmUhPW51bGwmJnRoaXMuc25pcHBldCE9bnVsbCl7cmV0dXJuXCI8RHVtcEV4Y2VwdGlvbj4gXCIrdGhpcy5tZXNzYWdlK1wiIChsaW5lIFwiK3RoaXMucGFyc2VkTGluZStcIjogJ1wiK3RoaXMuc25pcHBldCtcIicpXCJ9ZWxzZXtyZXR1cm5cIjxEdW1wRXhjZXB0aW9uPiBcIit0aGlzLm1lc3NhZ2V9fTtyZXR1cm4gdH0oRXJyb3IpO3QuZXhwb3J0cz1pfSx7fV0sNDpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHI9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl7aWYocy5jYWxsKHQsbikpZVtuXT10W25dfWZ1bmN0aW9uIGkoKXt0aGlzLmNvbnN0cnVjdG9yPWV9aS5wcm90b3R5cGU9dC5wcm90b3R5cGU7ZS5wcm90b3R5cGU9bmV3IGk7ZS5fX3N1cGVyX189dC5wcm90b3R5cGU7cmV0dXJuIGV9LHM9e30uaGFzT3duUHJvcGVydHk7aT1mdW5jdGlvbihlKXtyKHQsZSk7ZnVuY3Rpb24gdChlLHQsbil7dGhpcy5tZXNzYWdlPWU7dGhpcy5wYXJzZWRMaW5lPXQ7dGhpcy5zbmlwcGV0PW59dC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtpZih0aGlzLnBhcnNlZExpbmUhPW51bGwmJnRoaXMuc25pcHBldCE9bnVsbCl7cmV0dXJuXCI8UGFyc2VFeGNlcHRpb24+IFwiK3RoaXMubWVzc2FnZStcIiAobGluZSBcIit0aGlzLnBhcnNlZExpbmUrXCI6ICdcIit0aGlzLnNuaXBwZXQrXCInKVwifWVsc2V7cmV0dXJuXCI8UGFyc2VFeGNlcHRpb24+IFwiK3RoaXMubWVzc2FnZX19O3JldHVybiB0fShFcnJvcik7dC5leHBvcnRzPWl9LHt9XSw1OltmdW5jdGlvbihlLHQsbil7dmFyIGkscj1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbiBpbiB0KXtpZihzLmNhbGwodCxuKSllW25dPXRbbl19ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9ZX1pLnByb3RvdHlwZT10LnByb3RvdHlwZTtlLnByb3RvdHlwZT1uZXcgaTtlLl9fc3VwZXJfXz10LnByb3RvdHlwZTtyZXR1cm4gZX0scz17fS5oYXNPd25Qcm9wZXJ0eTtpPWZ1bmN0aW9uKGUpe3IodCxlKTtmdW5jdGlvbiB0KGUsdCxuKXt0aGlzLm1lc3NhZ2U9ZTt0aGlzLnBhcnNlZExpbmU9dDt0aGlzLnNuaXBwZXQ9bn10LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe2lmKHRoaXMucGFyc2VkTGluZSE9bnVsbCYmdGhpcy5zbmlwcGV0IT1udWxsKXtyZXR1cm5cIjxQYXJzZU1vcmU+IFwiK3RoaXMubWVzc2FnZStcIiAobGluZSBcIit0aGlzLnBhcnNlZExpbmUrXCI6ICdcIit0aGlzLnNuaXBwZXQrXCInKVwifWVsc2V7cmV0dXJuXCI8UGFyc2VNb3JlPiBcIit0aGlzLm1lc3NhZ2V9fTtyZXR1cm4gdH0oRXJyb3IpO3QuZXhwb3J0cz1pfSx7fV0sNjpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHIscyxsLHUsYSxvLGYsYz1bXS5pbmRleE9mfHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MCxuPXRoaXMubGVuZ3RoO3Q8bjt0Kyspe2lmKHQgaW4gdGhpcyYmdGhpc1t0XT09PWUpcmV0dXJuIHR9cmV0dXJuLTF9O2E9ZShcIi4vUGF0dGVyblwiKTtvPWUoXCIuL1VuZXNjYXBlclwiKTtyPWUoXCIuL0VzY2FwZXJcIik7Zj1lKFwiLi9VdGlsc1wiKTtsPWUoXCIuL0V4Y2VwdGlvbi9QYXJzZUV4Y2VwdGlvblwiKTt1PWUoXCIuL0V4Y2VwdGlvbi9QYXJzZU1vcmVcIik7aT1lKFwiLi9FeGNlcHRpb24vRHVtcEV4Y2VwdGlvblwiKTtzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31lLlJFR0VYX1FVT1RFRF9TVFJJTkc9XCIoPzpcXFwiKD86W15cXFwiXFxcXFxcXFxdKig/OlxcXFxcXFxcLlteXFxcIlxcXFxcXFxcXSopKilcXFwifCcoPzpbXiddKig/OicnW14nXSopKiknKVwiO2UuUEFUVEVSTl9UUkFJTElOR19DT01NRU5UUz1uZXcgYShcIl5cXFxccyojLiokXCIpO2UuUEFUVEVSTl9RVU9URURfU0NBTEFSPW5ldyBhKFwiXlwiK2UuUkVHRVhfUVVPVEVEX1NUUklORyk7ZS5QQVRURVJOX1RIT1VTQU5EX05VTUVSSUNfU0NBTEFSPW5ldyBhKFwiXigtfFxcXFwrKT9bMC05LF0rKFxcXFwuWzAtOV0rKT8kXCIpO2UuUEFUVEVSTl9TQ0FMQVJfQllfREVMSU1JVEVSUz17fTtlLnNldHRpbmdzPXt9O2UuY29uZmlndXJlPWZ1bmN0aW9uKGUsdCl7aWYoZT09bnVsbCl7ZT1udWxsfWlmKHQ9PW51bGwpe3Q9bnVsbH10aGlzLnNldHRpbmdzLmV4Y2VwdGlvbk9uSW52YWxpZFR5cGU9ZTt0aGlzLnNldHRpbmdzLm9iamVjdERlY29kZXI9dH07ZS5wYXJzZT1mdW5jdGlvbihlLHQsbil7dmFyIGkscjtpZih0PT1udWxsKXt0PWZhbHNlfWlmKG49PW51bGwpe249bnVsbH10aGlzLnNldHRpbmdzLmV4Y2VwdGlvbk9uSW52YWxpZFR5cGU9dDt0aGlzLnNldHRpbmdzLm9iamVjdERlY29kZXI9bjtpZihlPT1udWxsKXtyZXR1cm5cIlwifWU9Zi50cmltKGUpO2lmKDA9PT1lLmxlbmd0aCl7cmV0dXJuXCJcIn1pPXtleGNlcHRpb25PbkludmFsaWRUeXBlOnQsb2JqZWN0RGVjb2RlcjpuLGk6MH07c3dpdGNoKGUuY2hhckF0KDApKXtjYXNlXCJbXCI6cj10aGlzLnBhcnNlU2VxdWVuY2UoZSxpKTsrK2kuaTticmVhaztjYXNlXCJ7XCI6cj10aGlzLnBhcnNlTWFwcGluZyhlLGkpOysraS5pO2JyZWFrO2RlZmF1bHQ6cj10aGlzLnBhcnNlU2NhbGFyKGUsbnVsbCxbJ1wiJyxcIidcIl0saSl9aWYodGhpcy5QQVRURVJOX1RSQUlMSU5HX0NPTU1FTlRTLnJlcGxhY2UoZS5zbGljZShpLmkpLFwiXCIpIT09XCJcIil7dGhyb3cgbmV3IGwoJ1VuZXhwZWN0ZWQgY2hhcmFjdGVycyBuZWFyIFwiJytlLnNsaWNlKGkuaSkrJ1wiLicpfXJldHVybiByfTtlLmR1bXA9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHMsbDtpZih0PT1udWxsKXt0PWZhbHNlfWlmKG49PW51bGwpe249bnVsbH1pZihlPT1udWxsKXtyZXR1cm5cIm51bGxcIn1sPXR5cGVvZiBlO2lmKGw9PT1cIm9iamVjdFwiKXtpZihlIGluc3RhbmNlb2YgRGF0ZSl7cmV0dXJuIGUudG9JU09TdHJpbmcoKX1lbHNlIGlmKG4hPW51bGwpe3M9bihlKTtpZih0eXBlb2Ygcz09PVwic3RyaW5nXCJ8fHMhPW51bGwpe3JldHVybiBzfX1yZXR1cm4gdGhpcy5kdW1wT2JqZWN0KGUpfWlmKGw9PT1cImJvb2xlYW5cIil7cmV0dXJuIGU/XCJ0cnVlXCI6XCJmYWxzZVwifWlmKGYuaXNEaWdpdHMoZSkpe3JldHVybiBsPT09XCJzdHJpbmdcIj9cIidcIitlK1wiJ1wiOlN0cmluZyhwYXJzZUludChlKSl9aWYoZi5pc051bWVyaWMoZSkpe3JldHVybiBsPT09XCJzdHJpbmdcIj9cIidcIitlK1wiJ1wiOlN0cmluZyhwYXJzZUZsb2F0KGUpKX1pZihsPT09XCJudW1iZXJcIil7cmV0dXJuIGU9PT1JbmZpbml0eT9cIi5JbmZcIjplPT09LUluZmluaXR5P1wiLS5JbmZcIjppc05hTihlKT9cIi5OYU5cIjplfWlmKHIucmVxdWlyZXNEb3VibGVRdW90aW5nKGUpKXtyZXR1cm4gci5lc2NhcGVXaXRoRG91YmxlUXVvdGVzKGUpfWlmKHIucmVxdWlyZXNTaW5nbGVRdW90aW5nKGUpKXtyZXR1cm4gci5lc2NhcGVXaXRoU2luZ2xlUXVvdGVzKGUpfWlmKFwiXCI9PT1lKXtyZXR1cm4nXCJcIid9aWYoZi5QQVRURVJOX0RBVEUudGVzdChlKSl7cmV0dXJuXCInXCIrZStcIidcIn1pZigoaT1lLnRvTG93ZXJDYXNlKCkpPT09XCJudWxsXCJ8fGk9PT1cIn5cInx8aT09PVwidHJ1ZVwifHxpPT09XCJmYWxzZVwiKXtyZXR1cm5cIidcIitlK1wiJ1wifXJldHVybiBlfTtlLmR1bXBPYmplY3Q9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHIscyxsLHU7aWYobj09bnVsbCl7bj1udWxsfWlmKGUgaW5zdGFuY2VvZiBBcnJheSl7bD1bXTtmb3IoaT0wLHM9ZS5sZW5ndGg7aTxzO2krKyl7dT1lW2ldO2wucHVzaCh0aGlzLmR1bXAodSkpfXJldHVyblwiW1wiK2wuam9pbihcIiwgXCIpK1wiXVwifWVsc2V7bD1bXTtmb3IociBpbiBlKXt1PWVbcl07bC5wdXNoKHRoaXMuZHVtcChyKStcIjogXCIrdGhpcy5kdW1wKHUpKX1yZXR1cm5cIntcIitsLmpvaW4oXCIsIFwiKStcIn1cIn19O2UucGFyc2VTY2FsYXI9ZnVuY3Rpb24oZSx0LG4saSxyKXt2YXIgcyx1LG8saCxwLEUsVCxfLEE7aWYodD09bnVsbCl7dD1udWxsfWlmKG49PW51bGwpe249WydcIicsXCInXCJdfWlmKGk9PW51bGwpe2k9bnVsbH1pZihyPT1udWxsKXtyPXRydWV9aWYoaT09bnVsbCl7aT17ZXhjZXB0aW9uT25JbnZhbGlkVHlwZTp0aGlzLnNldHRpbmdzLmV4Y2VwdGlvbk9uSW52YWxpZFR5cGUsb2JqZWN0RGVjb2Rlcjp0aGlzLnNldHRpbmdzLm9iamVjdERlY29kZXIsaTowfX1zPWkuaTtpZihFPWUuY2hhckF0KHMpLGMuY2FsbChuLEUpPj0wKXtoPXRoaXMucGFyc2VRdW90ZWRTY2FsYXIoZSxpKTtzPWkuaTtpZih0IT1udWxsKXtBPWYubHRyaW0oZS5zbGljZShzKSxcIiBcIik7aWYoIShUPUEuY2hhckF0KDApLGMuY2FsbCh0LFQpPj0wKSl7dGhyb3cgbmV3IGwoXCJVbmV4cGVjdGVkIGNoYXJhY3RlcnMgKFwiK2Uuc2xpY2UocykrXCIpLlwiKX19fWVsc2V7aWYoIXQpe2g9ZS5zbGljZShzKTtzKz1oLmxlbmd0aDtfPWguaW5kZXhPZihcIiAjXCIpO2lmKF8hPT0tMSl7aD1mLnJ0cmltKGguc2xpY2UoMCxfKSl9fWVsc2V7dT10LmpvaW4oXCJ8XCIpO3A9dGhpcy5QQVRURVJOX1NDQUxBUl9CWV9ERUxJTUlURVJTW3VdO2lmKHA9PW51bGwpe3A9bmV3IGEoXCJeKC4rPykoXCIrdStcIilcIik7dGhpcy5QQVRURVJOX1NDQUxBUl9CWV9ERUxJTUlURVJTW3VdPXB9aWYobz1wLmV4ZWMoZS5zbGljZShzKSkpe2g9b1sxXTtzKz1oLmxlbmd0aH1lbHNle3Rocm93IG5ldyBsKFwiTWFsZm9ybWVkIGlubGluZSBZQU1MIHN0cmluZyAoXCIrZStcIikuXCIpfX1pZihyKXtoPXRoaXMuZXZhbHVhdGVTY2FsYXIoaCxpKX19aS5pPXM7cmV0dXJuIGh9O2UucGFyc2VRdW90ZWRTY2FsYXI9ZnVuY3Rpb24oZSx0KXt2YXIgbixpLHI7bj10Lmk7aWYoIShpPXRoaXMuUEFUVEVSTl9RVU9URURfU0NBTEFSLmV4ZWMoZS5zbGljZShuKSkpKXt0aHJvdyBuZXcgdShcIk1hbGZvcm1lZCBpbmxpbmUgWUFNTCBzdHJpbmcgKFwiK2Uuc2xpY2UobikrXCIpLlwiKX1yPWlbMF0uc3Vic3RyKDEsaVswXS5sZW5ndGgtMik7aWYoJ1wiJz09PWUuY2hhckF0KG4pKXtyPW8udW5lc2NhcGVEb3VibGVRdW90ZWRTdHJpbmcocil9ZWxzZXtyPW8udW5lc2NhcGVTaW5nbGVRdW90ZWRTdHJpbmcocil9bis9aVswXS5sZW5ndGg7dC5pPW47cmV0dXJuIHJ9O2UucGFyc2VTZXF1ZW5jZT1mdW5jdGlvbihlLHQpe3ZhciBuLGkscixzLGwsYSxvLGY7YT1bXTtsPWUubGVuZ3RoO3I9dC5pO3IrPTE7d2hpbGUocjxsKXt0Lmk9cjtzd2l0Y2goZS5jaGFyQXQocikpe2Nhc2VcIltcIjphLnB1c2godGhpcy5wYXJzZVNlcXVlbmNlKGUsdCkpO3I9dC5pO2JyZWFrO2Nhc2VcIntcIjphLnB1c2godGhpcy5wYXJzZU1hcHBpbmcoZSx0KSk7cj10Lmk7YnJlYWs7Y2FzZVwiXVwiOnJldHVybiBhO2Nhc2VcIixcIjpjYXNlXCIgXCI6Y2FzZVwiXFxuXCI6YnJlYWs7ZGVmYXVsdDpzPShvPWUuY2hhckF0KHIpKT09PSdcIid8fG89PT1cIidcIjtmPXRoaXMucGFyc2VTY2FsYXIoZSxbXCIsXCIsXCJdXCJdLFsnXCInLFwiJ1wiXSx0KTtyPXQuaTtpZighcyYmdHlwZW9mIGY9PT1cInN0cmluZ1wiJiYoZi5pbmRleE9mKFwiOiBcIikhPT0tMXx8Zi5pbmRleE9mKFwiOlxcblwiKSE9PS0xKSl7dHJ5e2Y9dGhpcy5wYXJzZU1hcHBpbmcoXCJ7XCIrZitcIn1cIil9Y2F0Y2goaSl7bj1pfX1hLnB1c2goZik7LS1yfSsrcn10aHJvdyBuZXcgdShcIk1hbGZvcm1lZCBpbmxpbmUgWUFNTCBzdHJpbmcgXCIrZSl9O2UucGFyc2VNYXBwaW5nPWZ1bmN0aW9uKGUsdCl7dmFyIG4saSxyLHMsbCxhLG87bD17fTtzPWUubGVuZ3RoO2k9dC5pO2krPTE7YT1mYWxzZTt3aGlsZShpPHMpe3QuaT1pO3N3aXRjaChlLmNoYXJBdChpKSl7Y2FzZVwiIFwiOmNhc2VcIixcIjpjYXNlXCJcXG5cIjorK2k7dC5pPWk7YT10cnVlO2JyZWFrO2Nhc2VcIn1cIjpyZXR1cm4gbH1pZihhKXthPWZhbHNlO2NvbnRpbnVlfXI9dGhpcy5wYXJzZVNjYWxhcihlLFtcIjpcIixcIiBcIixcIlxcblwiXSxbJ1wiJyxcIidcIl0sdCxmYWxzZSk7aT10Lmk7bj1mYWxzZTt3aGlsZShpPHMpe3QuaT1pO3N3aXRjaChlLmNoYXJBdChpKSl7Y2FzZVwiW1wiOm89dGhpcy5wYXJzZVNlcXVlbmNlKGUsdCk7aT10Lmk7aWYobFtyXT09PXZvaWQgMCl7bFtyXT1vfW49dHJ1ZTticmVhaztjYXNlXCJ7XCI6bz10aGlzLnBhcnNlTWFwcGluZyhlLHQpO2k9dC5pO2lmKGxbcl09PT12b2lkIDApe2xbcl09b31uPXRydWU7YnJlYWs7Y2FzZVwiOlwiOmNhc2VcIiBcIjpjYXNlXCJcXG5cIjpicmVhaztkZWZhdWx0Om89dGhpcy5wYXJzZVNjYWxhcihlLFtcIixcIixcIn1cIl0sWydcIicsXCInXCJdLHQpO2k9dC5pO2lmKGxbcl09PT12b2lkIDApe2xbcl09b31uPXRydWU7LS1pfSsraTtpZihuKXticmVha319fXRocm93IG5ldyB1KFwiTWFsZm9ybWVkIGlubGluZSBZQU1MIHN0cmluZyBcIitlKX07ZS5ldmFsdWF0ZVNjYWxhcj1mdW5jdGlvbihlLHQpe3ZhciBuLGkscixzLHUsYSxvLGMsaCxwLEU7ZT1mLnRyaW0oZSk7aD1lLnRvTG93ZXJDYXNlKCk7c3dpdGNoKGgpe2Nhc2VcIm51bGxcIjpjYXNlXCJcIjpjYXNlXCJ+XCI6cmV0dXJuIG51bGw7Y2FzZVwidHJ1ZVwiOnJldHVybiB0cnVlO2Nhc2VcImZhbHNlXCI6cmV0dXJuIGZhbHNlO2Nhc2VcIi5pbmZcIjpyZXR1cm4gSW5maW5pdHk7Y2FzZVwiLm5hblwiOnJldHVybiBOYU47Y2FzZVwiLS5pbmZcIjpyZXR1cm4gSW5maW5pdHk7ZGVmYXVsdDpzPWguY2hhckF0KDApO3N3aXRjaChzKXtjYXNlXCIhXCI6dT1lLmluZGV4T2YoXCIgXCIpO2lmKHU9PT0tMSl7YT1ofWVsc2V7YT1oLnNsaWNlKDAsdSl9c3dpdGNoKGEpe2Nhc2VcIiFcIjppZih1IT09LTEpe3JldHVybiBwYXJzZUludCh0aGlzLnBhcnNlU2NhbGFyKGUuc2xpY2UoMikpKX1yZXR1cm4gbnVsbDtjYXNlXCIhc3RyXCI6cmV0dXJuIGYubHRyaW0oZS5zbGljZSg0KSk7Y2FzZVwiISFzdHJcIjpyZXR1cm4gZi5sdHJpbShlLnNsaWNlKDUpKTtjYXNlXCIhIWludFwiOnJldHVybiBwYXJzZUludCh0aGlzLnBhcnNlU2NhbGFyKGUuc2xpY2UoNSkpKTtjYXNlXCIhIWJvb2xcIjpyZXR1cm4gZi5wYXJzZUJvb2xlYW4odGhpcy5wYXJzZVNjYWxhcihlLnNsaWNlKDYpKSxmYWxzZSk7Y2FzZVwiISFmbG9hdFwiOnJldHVybiBwYXJzZUZsb2F0KHRoaXMucGFyc2VTY2FsYXIoZS5zbGljZSg3KSkpO2Nhc2VcIiEhdGltZXN0YW1wXCI6cmV0dXJuIGYuc3RyaW5nVG9EYXRlKGYubHRyaW0oZS5zbGljZSgxMSkpKTtkZWZhdWx0OmlmKHQ9PW51bGwpe3Q9e2V4Y2VwdGlvbk9uSW52YWxpZFR5cGU6dGhpcy5zZXR0aW5ncy5leGNlcHRpb25PbkludmFsaWRUeXBlLG9iamVjdERlY29kZXI6dGhpcy5zZXR0aW5ncy5vYmplY3REZWNvZGVyLGk6MH19bz10Lm9iamVjdERlY29kZXIscj10LmV4Y2VwdGlvbk9uSW52YWxpZFR5cGU7aWYobyl7RT1mLnJ0cmltKGUpO3U9RS5pbmRleE9mKFwiIFwiKTtpZih1PT09LTEpe3JldHVybiBvKEUsbnVsbCl9ZWxzZXtwPWYubHRyaW0oRS5zbGljZSh1KzEpKTtpZighKHAubGVuZ3RoPjApKXtwPW51bGx9cmV0dXJuIG8oRS5zbGljZSgwLHUpLHApfX1pZihyKXt0aHJvdyBuZXcgbChcIkN1c3RvbSBvYmplY3Qgc3VwcG9ydCB3aGVuIHBhcnNpbmcgYSBZQU1MIGZpbGUgaGFzIGJlZW4gZGlzYWJsZWQuXCIpfXJldHVybiBudWxsfWJyZWFrO2Nhc2VcIjBcIjppZihcIjB4XCI9PT1lLnNsaWNlKDAsMikpe3JldHVybiBmLmhleERlYyhlKX1lbHNlIGlmKGYuaXNEaWdpdHMoZSkpe3JldHVybiBmLm9jdERlYyhlKX1lbHNlIGlmKGYuaXNOdW1lcmljKGUpKXtyZXR1cm4gcGFyc2VGbG9hdChlKX1lbHNle3JldHVybiBlfWJyZWFrO2Nhc2VcIitcIjppZihmLmlzRGlnaXRzKGUpKXtjPWU7bj1wYXJzZUludChjKTtpZihjPT09U3RyaW5nKG4pKXtyZXR1cm4gbn1lbHNle3JldHVybiBjfX1lbHNlIGlmKGYuaXNOdW1lcmljKGUpKXtyZXR1cm4gcGFyc2VGbG9hdChlKX1lbHNlIGlmKHRoaXMuUEFUVEVSTl9USE9VU0FORF9OVU1FUklDX1NDQUxBUi50ZXN0KGUpKXtyZXR1cm4gcGFyc2VGbG9hdChlLnJlcGxhY2UoXCIsXCIsXCJcIikpfXJldHVybiBlO2Nhc2VcIi1cIjppZihmLmlzRGlnaXRzKGUuc2xpY2UoMSkpKXtpZihcIjBcIj09PWUuY2hhckF0KDEpKXtyZXR1cm4tZi5vY3REZWMoZS5zbGljZSgxKSl9ZWxzZXtjPWUuc2xpY2UoMSk7bj1wYXJzZUludChjKTtpZihjPT09U3RyaW5nKG4pKXtyZXR1cm4tbn1lbHNle3JldHVybi1jfX19ZWxzZSBpZihmLmlzTnVtZXJpYyhlKSl7cmV0dXJuIHBhcnNlRmxvYXQoZSl9ZWxzZSBpZih0aGlzLlBBVFRFUk5fVEhPVVNBTkRfTlVNRVJJQ19TQ0FMQVIudGVzdChlKSl7cmV0dXJuIHBhcnNlRmxvYXQoZS5yZXBsYWNlKFwiLFwiLFwiXCIpKX1yZXR1cm4gZTtkZWZhdWx0OmlmKGk9Zi5zdHJpbmdUb0RhdGUoZSkpe3JldHVybiBpfWVsc2UgaWYoZi5pc051bWVyaWMoZSkpe3JldHVybiBwYXJzZUZsb2F0KGUpfWVsc2UgaWYodGhpcy5QQVRURVJOX1RIT1VTQU5EX05VTUVSSUNfU0NBTEFSLnRlc3QoZSkpe3JldHVybiBwYXJzZUZsb2F0KGUucmVwbGFjZShcIixcIixcIlwiKSl9cmV0dXJuIGV9fX07cmV0dXJuIGV9KCk7dC5leHBvcnRzPXN9LHtcIi4vRXNjYXBlclwiOjIsXCIuL0V4Y2VwdGlvbi9EdW1wRXhjZXB0aW9uXCI6MyxcIi4vRXhjZXB0aW9uL1BhcnNlRXhjZXB0aW9uXCI6NCxcIi4vRXhjZXB0aW9uL1BhcnNlTW9yZVwiOjUsXCIuL1BhdHRlcm5cIjo4LFwiLi9VbmVzY2FwZXJcIjo5LFwiLi9VdGlsc1wiOjEwfV0sNzpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHIscyxsLHUsYTtpPWUoXCIuL0lubGluZVwiKTt1PWUoXCIuL1BhdHRlcm5cIik7YT1lKFwiLi9VdGlsc1wiKTtyPWUoXCIuL0V4Y2VwdGlvbi9QYXJzZUV4Y2VwdGlvblwiKTtzPWUoXCIuL0V4Y2VwdGlvbi9QYXJzZU1vcmVcIik7bD1mdW5jdGlvbigpe2UucHJvdG90eXBlLlBBVFRFUk5fRk9MREVEX1NDQUxBUl9BTEw9bmV3IHUoXCJeKD86KD88dHlwZT4hW15cXFxcfD5dKilcXFxccyspPyg/PHNlcGFyYXRvcj5cXFxcfHw+KSg/PG1vZGlmaWVycz5cXFxcK3xcXFxcLXxcXFxcZCt8XFxcXCtcXFxcZCt8XFxcXC1cXFxcZCt8XFxcXGQrXFxcXCt8XFxcXGQrXFxcXC0pPyg/PGNvbW1lbnRzPiArIy4qKT8kXCIpO2UucHJvdG90eXBlLlBBVFRFUk5fRk9MREVEX1NDQUxBUl9FTkQ9bmV3IHUoXCIoPzxzZXBhcmF0b3I+XFxcXHx8PikoPzxtb2RpZmllcnM+XFxcXCt8XFxcXC18XFxcXGQrfFxcXFwrXFxcXGQrfFxcXFwtXFxcXGQrfFxcXFxkK1xcXFwrfFxcXFxkK1xcXFwtKT8oPzxjb21tZW50cz4gKyMuKik/JFwiKTtlLnByb3RvdHlwZS5QQVRURVJOX1NFUVVFTkNFX0lURU09bmV3IHUoXCJeXFxcXC0oKD88bGVhZHNwYWNlcz5cXFxccyspKD88dmFsdWU+Lis/KSk/XFxcXHMqJFwiKTtlLnByb3RvdHlwZS5QQVRURVJOX0FOQ0hPUl9WQUxVRT1uZXcgdShcIl4mKD88cmVmPlteIF0rKSAqKD88dmFsdWU+LiopXCIpO2UucHJvdG90eXBlLlBBVFRFUk5fQ09NUEFDVF9OT1RBVElPTj1uZXcgdShcIl4oPzxrZXk+XCIraS5SRUdFWF9RVU9URURfU1RSSU5HK1wifFteICdcXFwiXFxcXHtcXFxcW10uKj8pICpcXFxcOihcXFxccysoPzx2YWx1ZT4uKz8pKT9cXFxccyokXCIpO2UucHJvdG90eXBlLlBBVFRFUk5fTUFQUElOR19JVEVNPW5ldyB1KFwiXig/PGtleT5cIitpLlJFR0VYX1FVT1RFRF9TVFJJTkcrXCJ8W14gJ1xcXCJcXFxcW1xcXFx7XS4qPykgKlxcXFw6KFxcXFxzKyg/PHZhbHVlPi4rPykpP1xcXFxzKiRcIik7ZS5wcm90b3R5cGUuUEFUVEVSTl9ERUNJTUFMPW5ldyB1KFwiXFxcXGQrXCIpO2UucHJvdG90eXBlLlBBVFRFUk5fSU5ERU5UX1NQQUNFUz1uZXcgdShcIl4gK1wiKTtlLnByb3RvdHlwZS5QQVRURVJOX1RSQUlMSU5HX0xJTkVTPW5ldyB1KFwiKFxcbiopJFwiKTtlLnByb3RvdHlwZS5QQVRURVJOX1lBTUxfSEVBREVSPW5ldyB1KFwiXlxcXFwlWUFNTFs6IF1bXFxcXGRcXFxcLl0rLipcXG5cIixcIm1cIik7ZS5wcm90b3R5cGUuUEFUVEVSTl9MRUFESU5HX0NPTU1FTlRTPW5ldyB1KFwiXihcXFxcIy4qP1xcbikrXCIsXCJtXCIpO2UucHJvdG90eXBlLlBBVFRFUk5fRE9DVU1FTlRfTUFSS0VSX1NUQVJUPW5ldyB1KFwiXlxcXFwtXFxcXC1cXFxcLS4qP1xcblwiLFwibVwiKTtlLnByb3RvdHlwZS5QQVRURVJOX0RPQ1VNRU5UX01BUktFUl9FTkQ9bmV3IHUoXCJeXFxcXC5cXFxcLlxcXFwuXFxcXHMqJFwiLFwibVwiKTtlLnByb3RvdHlwZS5QQVRURVJOX0ZPTERFRF9TQ0FMQVJfQllfSU5ERU5UQVRJT049e307ZS5wcm90b3R5cGUuQ09OVEVYVF9OT05FPTA7ZS5wcm90b3R5cGUuQ09OVEVYVF9TRVFVRU5DRT0xO2UucHJvdG90eXBlLkNPTlRFWFRfTUFQUElORz0yO2Z1bmN0aW9uIGUoZSl7dGhpcy5vZmZzZXQ9ZSE9bnVsbD9lOjA7dGhpcy5saW5lcz1bXTt0aGlzLmN1cnJlbnRMaW5lTmI9LTE7dGhpcy5jdXJyZW50TGluZT1cIlwiO3RoaXMucmVmcz17fX1lLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih0LG4scyl7dmFyIGwsdSxvLGYsYyxoLHAsRSxULF8sQSxMLGQsTixnLFIseCxDLEksbSxTLHcsdix5LFAsYixELE8sTSxHLFUsWCxGLGssSCxqLFksQixRO2lmKG49PW51bGwpe249ZmFsc2V9aWYocz09bnVsbCl7cz1udWxsfXRoaXMuY3VycmVudExpbmVOYj0tMTt0aGlzLmN1cnJlbnRMaW5lPVwiXCI7dGhpcy5saW5lcz10aGlzLmNsZWFudXAodCkuc3BsaXQoXCJcXG5cIik7aD1udWxsO2M9dGhpcy5DT05URVhUX05PTkU7dT1mYWxzZTt3aGlsZSh0aGlzLm1vdmVUb05leHRMaW5lKCkpe2lmKHRoaXMuaXNDdXJyZW50TGluZUVtcHR5KCkpe2NvbnRpbnVlfWlmKFwiXFx0XCI9PT10aGlzLmN1cnJlbnRMaW5lWzBdKXt0aHJvdyBuZXcgcihcIkEgWUFNTCBmaWxlIGNhbm5vdCBjb250YWluIHRhYnMgYXMgaW5kZW50YXRpb24uXCIsdGhpcy5nZXRSZWFsQ3VycmVudExpbmVOYigpKzEsdGhpcy5jdXJyZW50TGluZSl9Tj1EPWZhbHNlO2lmKFE9dGhpcy5QQVRURVJOX1NFUVVFTkNFX0lURU0uZXhlYyh0aGlzLmN1cnJlbnRMaW5lKSl7aWYodGhpcy5DT05URVhUX01BUFBJTkc9PT1jKXt0aHJvdyBuZXcgcihcIllvdSBjYW5ub3QgZGVmaW5lIGEgc2VxdWVuY2UgaXRlbSB3aGVuIGluIGEgbWFwcGluZ1wiKX1jPXRoaXMuQ09OVEVYVF9TRVFVRU5DRTtpZihoPT1udWxsKXtoPVtdfWlmKFEudmFsdWUhPW51bGwmJihiPXRoaXMuUEFUVEVSTl9BTkNIT1JfVkFMVUUuZXhlYyhRLnZhbHVlKSkpe049Yi5yZWY7US52YWx1ZT1iLnZhbHVlfWlmKCEoUS52YWx1ZSE9bnVsbCl8fFwiXCI9PT1hLnRyaW0oUS52YWx1ZSxcIiBcIil8fGEubHRyaW0oUS52YWx1ZSxcIiBcIikuaW5kZXhPZihcIiNcIik9PT0wKXtpZih0aGlzLmN1cnJlbnRMaW5lTmI8dGhpcy5saW5lcy5sZW5ndGgtMSYmIXRoaXMuaXNOZXh0TGluZVVuSW5kZW50ZWRDb2xsZWN0aW9uKCkpe2Y9dGhpcy5nZXRSZWFsQ3VycmVudExpbmVOYigpKzE7WD1uZXcgZShmKTtYLnJlZnM9dGhpcy5yZWZzO2gucHVzaChYLnBhcnNlKHRoaXMuZ2V0TmV4dEVtYmVkQmxvY2sobnVsbCx0cnVlKSxuLHMpKX1lbHNle2gucHVzaChudWxsKX19ZWxzZXtpZigoKEY9US5sZWFkc3BhY2VzKSE9bnVsbD9GLmxlbmd0aDp2b2lkIDApJiYoYj10aGlzLlBBVFRFUk5fQ09NUEFDVF9OT1RBVElPTi5leGVjKFEudmFsdWUpKSl7Zj10aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCk7WD1uZXcgZShmKTtYLnJlZnM9dGhpcy5yZWZzO289US52YWx1ZTtkPXRoaXMuZ2V0Q3VycmVudExpbmVJbmRlbnRhdGlvbigpO2lmKHRoaXMuaXNOZXh0TGluZUluZGVudGVkKGZhbHNlKSl7bys9XCJcXG5cIit0aGlzLmdldE5leHRFbWJlZEJsb2NrKGQrUS5sZWFkc3BhY2VzLmxlbmd0aCsxLHRydWUpfWgucHVzaChYLnBhcnNlKG8sbixzKSl9ZWxzZXtoLnB1c2godGhpcy5wYXJzZVZhbHVlKFEudmFsdWUsbixzKSl9fX1lbHNlIGlmKChRPXRoaXMuUEFUVEVSTl9NQVBQSU5HX0lURU0uZXhlYyh0aGlzLmN1cnJlbnRMaW5lKSkmJlEua2V5LmluZGV4T2YoXCIgI1wiKT09PS0xKXtpZih0aGlzLkNPTlRFWFRfU0VRVUVOQ0U9PT1jKXt0aHJvdyBuZXcgcihcIllvdSBjYW5ub3QgZGVmaW5lIGEgbWFwcGluZyBpdGVtIHdoZW4gaW4gYSBzZXF1ZW5jZVwiKX1jPXRoaXMuQ09OVEVYVF9NQVBQSU5HO2lmKGg9PW51bGwpe2g9e319aS5jb25maWd1cmUobixzKTt0cnl7eD1pLnBhcnNlU2NhbGFyKFEua2V5KX1jYXRjaChFKXtwPUU7cC5wYXJzZWRMaW5lPXRoaXMuZ2V0UmVhbEN1cnJlbnRMaW5lTmIoKSsxO3Auc25pcHBldD10aGlzLmN1cnJlbnRMaW5lO3Rocm93IHB9aWYoXCI8PFwiPT09eCl7RD10cnVlO3U9dHJ1ZTtpZigoKGs9US52YWx1ZSkhPW51bGw/ay5pbmRleE9mKFwiKlwiKTp2b2lkIDApPT09MCl7aj1RLnZhbHVlLnNsaWNlKDEpO2lmKHRoaXMucmVmc1tqXT09bnVsbCl7dGhyb3cgbmV3IHIoJ1JlZmVyZW5jZSBcIicraisnXCIgZG9lcyBub3QgZXhpc3QuJyx0aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMSx0aGlzLmN1cnJlbnRMaW5lKX1ZPXRoaXMucmVmc1tqXTtpZih0eXBlb2YgWSE9PVwib2JqZWN0XCIpe3Rocm93IG5ldyByKFwiWUFNTCBtZXJnZSBrZXlzIHVzZWQgd2l0aCBhIHNjYWxhciB2YWx1ZSBpbnN0ZWFkIG9mIGFuIG9iamVjdC5cIix0aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMSx0aGlzLmN1cnJlbnRMaW5lKX1pZihZIGluc3RhbmNlb2YgQXJyYXkpe2ZvcihMPWc9MCxtPVkubGVuZ3RoO2c8bTtMPSsrZyl7dD1ZW0xdO2lmKGhbTT1TdHJpbmcoTCldPT1udWxsKXtoW01dPXR9fX1lbHNle2Zvcih4IGluIFkpe3Q9WVt4XTtpZihoW3hdPT1udWxsKXtoW3hdPXR9fX19ZWxzZXtpZihRLnZhbHVlIT1udWxsJiZRLnZhbHVlIT09XCJcIil7dD1RLnZhbHVlfWVsc2V7dD10aGlzLmdldE5leHRFbWJlZEJsb2NrKCl9Zj10aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMTtYPW5ldyBlKGYpO1gucmVmcz10aGlzLnJlZnM7Rz1YLnBhcnNlKHQsbik7aWYodHlwZW9mIEchPT1cIm9iamVjdFwiKXt0aHJvdyBuZXcgcihcIllBTUwgbWVyZ2Uga2V5cyB1c2VkIHdpdGggYSBzY2FsYXIgdmFsdWUgaW5zdGVhZCBvZiBhbiBvYmplY3QuXCIsdGhpcy5nZXRSZWFsQ3VycmVudExpbmVOYigpKzEsdGhpcy5jdXJyZW50TGluZSl9aWYoRyBpbnN0YW5jZW9mIEFycmF5KXtmb3IoQz0wLFM9Ry5sZW5ndGg7QzxTO0MrKyl7VT1HW0NdO2lmKHR5cGVvZiBVIT09XCJvYmplY3RcIil7dGhyb3cgbmV3IHIoXCJNZXJnZSBpdGVtcyBtdXN0IGJlIG9iamVjdHMuXCIsdGhpcy5nZXRSZWFsQ3VycmVudExpbmVOYigpKzEsVSl9aWYoVSBpbnN0YW5jZW9mIEFycmF5KXtmb3IoTD1QPTAsdz1VLmxlbmd0aDtQPHc7TD0rK1Ape3Q9VVtMXTtSPVN0cmluZyhMKTtpZighaC5oYXNPd25Qcm9wZXJ0eShSKSl7aFtSXT10fX19ZWxzZXtmb3IoeCBpbiBVKXt0PVVbeF07aWYoIWguaGFzT3duUHJvcGVydHkoeCkpe2hbeF09dH19fX19ZWxzZXtmb3IoeCBpbiBHKXt0PUdbeF07aWYoIWguaGFzT3duUHJvcGVydHkoeCkpe2hbeF09dH19fX19ZWxzZSBpZihRLnZhbHVlIT1udWxsJiYoYj10aGlzLlBBVFRFUk5fQU5DSE9SX1ZBTFVFLmV4ZWMoUS52YWx1ZSkpKXtOPWIucmVmO1EudmFsdWU9Yi52YWx1ZX1pZihEKXt9ZWxzZSBpZighKFEudmFsdWUhPW51bGwpfHxcIlwiPT09YS50cmltKFEudmFsdWUsXCIgXCIpfHxhLmx0cmltKFEudmFsdWUsXCIgXCIpLmluZGV4T2YoXCIjXCIpPT09MCl7aWYoIXRoaXMuaXNOZXh0TGluZUluZGVudGVkKCkmJiF0aGlzLmlzTmV4dExpbmVVbkluZGVudGVkQ29sbGVjdGlvbigpKXtpZih1fHxoW3hdPT09dm9pZCAwKXtoW3hdPW51bGx9fWVsc2V7Zj10aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMTtYPW5ldyBlKGYpO1gucmVmcz10aGlzLnJlZnM7Qj1YLnBhcnNlKHRoaXMuZ2V0TmV4dEVtYmVkQmxvY2soKSxuLHMpO2lmKHV8fGhbeF09PT12b2lkIDApe2hbeF09Qn19fWVsc2V7Qj10aGlzLnBhcnNlVmFsdWUoUS52YWx1ZSxuLHMpO2lmKHV8fGhbeF09PT12b2lkIDApe2hbeF09Qn19fWVsc2V7eT10aGlzLmxpbmVzLmxlbmd0aDtpZigxPT09eXx8Mj09PXkmJmEuaXNFbXB0eSh0aGlzLmxpbmVzWzFdKSl7dHJ5e3Q9aS5wYXJzZSh0aGlzLmxpbmVzWzBdLG4scyl9Y2F0Y2goVCl7cD1UO3AucGFyc2VkTGluZT10aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMTtwLnNuaXBwZXQ9dGhpcy5jdXJyZW50TGluZTt0aHJvdyBwfWlmKHR5cGVvZiB0PT09XCJvYmplY3RcIil7aWYodCBpbnN0YW5jZW9mIEFycmF5KXtBPXRbMF19ZWxzZXtmb3IoeCBpbiB0KXtBPXRbeF07YnJlYWt9fWlmKHR5cGVvZiBBPT09XCJzdHJpbmdcIiYmQS5pbmRleE9mKFwiKlwiKT09PTApe2g9W107Zm9yKE89MCx2PXQubGVuZ3RoO088djtPKyspe2w9dFtPXTtoLnB1c2godGhpcy5yZWZzW2wuc2xpY2UoMSldKX10PWh9fXJldHVybiB0fWVsc2UgaWYoKEg9YS5sdHJpbSh0KS5jaGFyQXQoMCkpPT09XCJbXCJ8fEg9PT1cIntcIil7dHJ5e3JldHVybiBpLnBhcnNlKHQsbixzKX1jYXRjaChfKXtwPV87cC5wYXJzZWRMaW5lPXRoaXMuZ2V0UmVhbEN1cnJlbnRMaW5lTmIoKSsxO3Auc25pcHBldD10aGlzLmN1cnJlbnRMaW5lO3Rocm93IHB9fXRocm93IG5ldyByKFwiVW5hYmxlIHRvIHBhcnNlLlwiLHRoaXMuZ2V0UmVhbEN1cnJlbnRMaW5lTmIoKSsxLHRoaXMuY3VycmVudExpbmUpfWlmKE4pe2lmKGggaW5zdGFuY2VvZiBBcnJheSl7dGhpcy5yZWZzW05dPWhbaC5sZW5ndGgtMV19ZWxzZXtJPW51bGw7Zm9yKHggaW4gaCl7ST14fXRoaXMucmVmc1tOXT1oW0ldfX19aWYoYS5pc0VtcHR5KGgpKXtyZXR1cm4gbnVsbH1lbHNle3JldHVybiBofX07ZS5wcm90b3R5cGUuZ2V0UmVhbEN1cnJlbnRMaW5lTmI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJyZW50TGluZU5iK3RoaXMub2Zmc2V0fTtlLnByb3RvdHlwZS5nZXRDdXJyZW50TGluZUluZGVudGF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3VycmVudExpbmUubGVuZ3RoLWEubHRyaW0odGhpcy5jdXJyZW50TGluZSxcIiBcIikubGVuZ3RofTtlLnByb3RvdHlwZS5nZXROZXh0RW1iZWRCbG9jaz1mdW5jdGlvbihlLHQpe3ZhciBuLGkscyxsLHUsbyxmO2lmKGU9PW51bGwpe2U9bnVsbH1pZih0PT1udWxsKXt0PWZhbHNlfXRoaXMubW92ZVRvTmV4dExpbmUoKTtpZihlPT1udWxsKXtsPXRoaXMuZ2V0Q3VycmVudExpbmVJbmRlbnRhdGlvbigpO2Y9dGhpcy5pc1N0cmluZ1VuSW5kZW50ZWRDb2xsZWN0aW9uSXRlbSh0aGlzLmN1cnJlbnRMaW5lKTtpZighdGhpcy5pc0N1cnJlbnRMaW5lRW1wdHkoKSYmMD09PWwmJiFmKXt0aHJvdyBuZXcgcihcIkluZGVudGF0aW9uIHByb2JsZW0uXCIsdGhpcy5nZXRSZWFsQ3VycmVudExpbmVOYigpKzEsdGhpcy5jdXJyZW50TGluZSl9fWVsc2V7bD1lfW49W3RoaXMuY3VycmVudExpbmUuc2xpY2UobCldO2lmKCF0KXtzPXRoaXMuaXNTdHJpbmdVbkluZGVudGVkQ29sbGVjdGlvbkl0ZW0odGhpcy5jdXJyZW50TGluZSl9bz10aGlzLlBBVFRFUk5fRk9MREVEX1NDQUxBUl9FTkQ7dT0hby50ZXN0KHRoaXMuY3VycmVudExpbmUpO3doaWxlKHRoaXMubW92ZVRvTmV4dExpbmUoKSl7aT10aGlzLmdldEN1cnJlbnRMaW5lSW5kZW50YXRpb24oKTtpZihpPT09bCl7dT0hby50ZXN0KHRoaXMuY3VycmVudExpbmUpfWlmKHUmJnRoaXMuaXNDdXJyZW50TGluZUNvbW1lbnQoKSl7Y29udGludWV9aWYodGhpcy5pc0N1cnJlbnRMaW5lQmxhbmsoKSl7bi5wdXNoKHRoaXMuY3VycmVudExpbmUuc2xpY2UobCkpO2NvbnRpbnVlfWlmKHMmJiF0aGlzLmlzU3RyaW5nVW5JbmRlbnRlZENvbGxlY3Rpb25JdGVtKHRoaXMuY3VycmVudExpbmUpJiZpPT09bCl7dGhpcy5tb3ZlVG9QcmV2aW91c0xpbmUoKTticmVha31pZihpPj1sKXtuLnB1c2godGhpcy5jdXJyZW50TGluZS5zbGljZShsKSl9ZWxzZSBpZihhLmx0cmltKHRoaXMuY3VycmVudExpbmUpLmNoYXJBdCgwKT09PVwiI1wiKXt9ZWxzZSBpZigwPT09aSl7dGhpcy5tb3ZlVG9QcmV2aW91c0xpbmUoKTticmVha31lbHNle3Rocm93IG5ldyByKFwiSW5kZW50YXRpb24gcHJvYmxlbS5cIix0aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMSx0aGlzLmN1cnJlbnRMaW5lKX19cmV0dXJuIG4uam9pbihcIlxcblwiKX07ZS5wcm90b3R5cGUubW92ZVRvTmV4dExpbmU9ZnVuY3Rpb24oKXtpZih0aGlzLmN1cnJlbnRMaW5lTmI+PXRoaXMubGluZXMubGVuZ3RoLTEpe3JldHVybiBmYWxzZX10aGlzLmN1cnJlbnRMaW5lPXRoaXMubGluZXNbKyt0aGlzLmN1cnJlbnRMaW5lTmJdO3JldHVybiB0cnVlfTtlLnByb3RvdHlwZS5tb3ZlVG9QcmV2aW91c0xpbmU9ZnVuY3Rpb24oKXt0aGlzLmN1cnJlbnRMaW5lPXRoaXMubGluZXNbLS10aGlzLmN1cnJlbnRMaW5lTmJdfTtlLnByb3RvdHlwZS5wYXJzZVZhbHVlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbCx1LG8sZixjLGgscCxFLFQ7aWYoMD09PWUuaW5kZXhPZihcIipcIikpe2g9ZS5pbmRleE9mKFwiI1wiKTtpZihoIT09LTEpe2U9ZS5zdWJzdHIoMSxoLTIpfWVsc2V7ZT1lLnNsaWNlKDEpfWlmKHRoaXMucmVmc1tlXT09PXZvaWQgMCl7dGhyb3cgbmV3IHIoJ1JlZmVyZW5jZSBcIicrZSsnXCIgZG9lcyBub3QgZXhpc3QuJyx0aGlzLmN1cnJlbnRMaW5lKX1yZXR1cm4gdGhpcy5yZWZzW2VdfWlmKGY9dGhpcy5QQVRURVJOX0ZPTERFRF9TQ0FMQVJfQUxMLmV4ZWMoZSkpe2M9KHA9Zi5tb2RpZmllcnMpIT1udWxsP3A6XCJcIjtvPU1hdGguYWJzKHBhcnNlSW50KGMpKTtpZihpc05hTihvKSl7bz0wfVQ9dGhpcy5wYXJzZUZvbGRlZFNjYWxhcihmLnNlcGFyYXRvcix0aGlzLlBBVFRFUk5fREVDSU1BTC5yZXBsYWNlKGMsXCJcIiksbyk7aWYoZi50eXBlIT1udWxsKXtpLmNvbmZpZ3VyZSh0LG4pO3JldHVybiBpLnBhcnNlU2NhbGFyKGYudHlwZStcIiBcIitUKX1lbHNle3JldHVybiBUfX1pZigoRT1lLmNoYXJBdCgwKSk9PT1cIltcInx8RT09PVwie1wifHxFPT09J1wiJ3x8RT09PVwiJ1wiKXt3aGlsZSh0cnVlKXt0cnl7cmV0dXJuIGkucGFyc2UoZSx0LG4pfWNhdGNoKHUpe2w9dTtpZihsIGluc3RhbmNlb2YgcyYmdGhpcy5tb3ZlVG9OZXh0TGluZSgpKXtlKz1cIlxcblwiK2EudHJpbSh0aGlzLmN1cnJlbnRMaW5lLFwiIFwiKX1lbHNle2wucGFyc2VkTGluZT10aGlzLmdldFJlYWxDdXJyZW50TGluZU5iKCkrMTtsLnNuaXBwZXQ9dGhpcy5jdXJyZW50TGluZTt0aHJvdyBsfX19fWVsc2V7aWYodGhpcy5pc05leHRMaW5lSW5kZW50ZWQoKSl7ZSs9XCJcXG5cIit0aGlzLmdldE5leHRFbWJlZEJsb2NrKCl9cmV0dXJuIGkucGFyc2UoZSx0LG4pfX07ZS5wcm90b3R5cGUucGFyc2VGb2xkZWRTY2FsYXI9ZnVuY3Rpb24odCxuLGkpe3ZhciByLHMsbCxvLGYsYyxoLHAsRSxUO2lmKG49PW51bGwpe249XCJcIn1pZihpPT1udWxsKXtpPTB9aD10aGlzLm1vdmVUb05leHRMaW5lKCk7aWYoIWgpe3JldHVyblwiXCJ9cj10aGlzLmlzQ3VycmVudExpbmVCbGFuaygpO1Q9XCJcIjt3aGlsZShoJiZyKXtpZihoPXRoaXMubW92ZVRvTmV4dExpbmUoKSl7VCs9XCJcXG5cIjtyPXRoaXMuaXNDdXJyZW50TGluZUJsYW5rKCl9fWlmKDA9PT1pKXtpZihmPXRoaXMuUEFUVEVSTl9JTkRFTlRfU1BBQ0VTLmV4ZWModGhpcy5jdXJyZW50TGluZSkpe2k9ZlswXS5sZW5ndGh9fWlmKGk+MCl7cD10aGlzLlBBVFRFUk5fRk9MREVEX1NDQUxBUl9CWV9JTkRFTlRBVElPTltpXTtpZihwPT1udWxsKXtwPW5ldyB1KFwiXiB7XCIraStcIn0oLiopJFwiKTtlLnByb3RvdHlwZS5QQVRURVJOX0ZPTERFRF9TQ0FMQVJfQllfSU5ERU5UQVRJT05baV09cH13aGlsZShoJiYocnx8KGY9cC5leGVjKHRoaXMuY3VycmVudExpbmUpKSkpe2lmKHIpe1QrPXRoaXMuY3VycmVudExpbmUuc2xpY2UoaSl9ZWxzZXtUKz1mWzFdfWlmKGg9dGhpcy5tb3ZlVG9OZXh0TGluZSgpKXtUKz1cIlxcblwiO3I9dGhpcy5pc0N1cnJlbnRMaW5lQmxhbmsoKX19fWVsc2UgaWYoaCl7VCs9XCJcXG5cIn1pZihoKXt0aGlzLm1vdmVUb1ByZXZpb3VzTGluZSgpfWlmKFwiPlwiPT09dCl7Yz1cIlwiO0U9VC5zcGxpdChcIlxcblwiKTtmb3Iocz0wLGw9RS5sZW5ndGg7czxsO3MrKyl7bz1FW3NdO2lmKG8ubGVuZ3RoPT09MHx8by5jaGFyQXQoMCk9PT1cIiBcIil7Yz1hLnJ0cmltKGMsXCIgXCIpK28rXCJcXG5cIn1lbHNle2MrPW8rXCIgXCJ9fVQ9Y31pZihcIitcIiE9PW4pe1Q9YS5ydHJpbShUKX1pZihcIlwiPT09bil7VD10aGlzLlBBVFRFUk5fVFJBSUxJTkdfTElORVMucmVwbGFjZShULFwiXFxuXCIpfWVsc2UgaWYoXCItXCI9PT1uKXtUPXRoaXMuUEFUVEVSTl9UUkFJTElOR19MSU5FUy5yZXBsYWNlKFQsXCJcIil9cmV0dXJuIFR9O2UucHJvdG90eXBlLmlzTmV4dExpbmVJbmRlbnRlZD1mdW5jdGlvbihlKXt2YXIgdCxuLGk7aWYoZT09bnVsbCl7ZT10cnVlfW49dGhpcy5nZXRDdXJyZW50TGluZUluZGVudGF0aW9uKCk7dD0hdGhpcy5tb3ZlVG9OZXh0TGluZSgpO2lmKGUpe3doaWxlKCF0JiZ0aGlzLmlzQ3VycmVudExpbmVFbXB0eSgpKXt0PSF0aGlzLm1vdmVUb05leHRMaW5lKCl9fWVsc2V7d2hpbGUoIXQmJnRoaXMuaXNDdXJyZW50TGluZUJsYW5rKCkpe3Q9IXRoaXMubW92ZVRvTmV4dExpbmUoKX19aWYodCl7cmV0dXJuIGZhbHNlfWk9ZmFsc2U7aWYodGhpcy5nZXRDdXJyZW50TGluZUluZGVudGF0aW9uKCk+bil7aT10cnVlfXRoaXMubW92ZVRvUHJldmlvdXNMaW5lKCk7cmV0dXJuIGl9O2UucHJvdG90eXBlLmlzQ3VycmVudExpbmVFbXB0eT1mdW5jdGlvbigpe3ZhciBlO2U9YS50cmltKHRoaXMuY3VycmVudExpbmUsXCIgXCIpO3JldHVybiBlLmxlbmd0aD09PTB8fGUuY2hhckF0KDApPT09XCIjXCJ9O2UucHJvdG90eXBlLmlzQ3VycmVudExpbmVCbGFuaz1mdW5jdGlvbigpe3JldHVyblwiXCI9PT1hLnRyaW0odGhpcy5jdXJyZW50TGluZSxcIiBcIil9O2UucHJvdG90eXBlLmlzQ3VycmVudExpbmVDb21tZW50PWZ1bmN0aW9uKCl7dmFyIGU7ZT1hLmx0cmltKHRoaXMuY3VycmVudExpbmUsXCIgXCIpO3JldHVybiBlLmNoYXJBdCgwKT09PVwiI1wifTtlLnByb3RvdHlwZS5jbGVhbnVwPWZ1bmN0aW9uKGUpe3ZhciB0LG4saSxyLHMsbCx1LG8sZixjLGgscCxFLFQ7aWYoZS5pbmRleE9mKFwiXFxyXCIpIT09LTEpe2U9ZS5zcGxpdChcIlxcclxcblwiKS5qb2luKFwiXFxuXCIpLnNwbGl0KFwiXFxyXCIpLmpvaW4oXCJcXG5cIil9dD0wO2M9dGhpcy5QQVRURVJOX1lBTUxfSEVBREVSLnJlcGxhY2VBbGwoZSxcIlwiKSxlPWNbMF0sdD1jWzFdO3RoaXMub2Zmc2V0Kz10O2g9dGhpcy5QQVRURVJOX0xFQURJTkdfQ09NTUVOVFMucmVwbGFjZUFsbChlLFwiXCIsMSksVD1oWzBdLHQ9aFsxXTtpZih0PT09MSl7dGhpcy5vZmZzZXQrPWEuc3ViU3RyQ291bnQoZSxcIlxcblwiKS1hLnN1YlN0ckNvdW50KFQsXCJcXG5cIik7ZT1UfXA9dGhpcy5QQVRURVJOX0RPQ1VNRU5UX01BUktFUl9TVEFSVC5yZXBsYWNlQWxsKGUsXCJcIiwxKSxUPXBbMF0sdD1wWzFdO2lmKHQ9PT0xKXt0aGlzLm9mZnNldCs9YS5zdWJTdHJDb3VudChlLFwiXFxuXCIpLWEuc3ViU3RyQ291bnQoVCxcIlxcblwiKTtlPVQ7ZT10aGlzLlBBVFRFUk5fRE9DVU1FTlRfTUFSS0VSX0VORC5yZXBsYWNlKGUsXCJcIil9Zj1lLnNwbGl0KFwiXFxuXCIpO0U9LTE7Zm9yKHI9MCxsPWYubGVuZ3RoO3I8bDtyKyspe289ZltyXTtpZihhLnRyaW0obyxcIiBcIikubGVuZ3RoPT09MCl7Y29udGludWV9aT1vLmxlbmd0aC1hLmx0cmltKG8pLmxlbmd0aDtpZihFPT09LTF8fGk8RSl7RT1pfX1pZihFPjApe2ZvcihuPXM9MCx1PWYubGVuZ3RoO3M8dTtuPSsrcyl7bz1mW25dO2Zbbl09by5zbGljZShFKX1lPWYuam9pbihcIlxcblwiKX1yZXR1cm4gZX07ZS5wcm90b3R5cGUuaXNOZXh0TGluZVVuSW5kZW50ZWRDb2xsZWN0aW9uPWZ1bmN0aW9uKGUpe3ZhciB0LG47aWYoZT09bnVsbCl7ZT1udWxsfWlmKGU9PW51bGwpe2U9dGhpcy5nZXRDdXJyZW50TGluZUluZGVudGF0aW9uKCl9dD10aGlzLm1vdmVUb05leHRMaW5lKCk7d2hpbGUodCYmdGhpcy5pc0N1cnJlbnRMaW5lRW1wdHkoKSl7dD10aGlzLm1vdmVUb05leHRMaW5lKCl9aWYoZmFsc2U9PT10KXtyZXR1cm4gZmFsc2V9bj1mYWxzZTtpZih0aGlzLmdldEN1cnJlbnRMaW5lSW5kZW50YXRpb24oKT09PWUmJnRoaXMuaXNTdHJpbmdVbkluZGVudGVkQ29sbGVjdGlvbkl0ZW0odGhpcy5jdXJyZW50TGluZSkpe249dHJ1ZX10aGlzLm1vdmVUb1ByZXZpb3VzTGluZSgpO3JldHVybiBufTtlLnByb3RvdHlwZS5pc1N0cmluZ1VuSW5kZW50ZWRDb2xsZWN0aW9uSXRlbT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN1cnJlbnRMaW5lPT09XCItXCJ8fHRoaXMuY3VycmVudExpbmUuc2xpY2UoMCwyKT09PVwiLSBcIn07cmV0dXJuIGV9KCk7dC5leHBvcnRzPWx9LHtcIi4vRXhjZXB0aW9uL1BhcnNlRXhjZXB0aW9uXCI6NCxcIi4vRXhjZXB0aW9uL1BhcnNlTW9yZVwiOjUsXCIuL0lubGluZVwiOjYsXCIuL1BhdHRlcm5cIjo4LFwiLi9VdGlsc1wiOjEwfV0sODpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpO2k9ZnVuY3Rpb24oKXtlLnByb3RvdHlwZS5yZWdleD1udWxsO2UucHJvdG90eXBlLnJhd1JlZ2V4PW51bGw7ZS5wcm90b3R5cGUuY2xlYW5lZFJlZ2V4PW51bGw7ZS5wcm90b3R5cGUubWFwcGluZz1udWxsO2Z1bmN0aW9uIGUoZSx0KXt2YXIgbixpLHIscyxsLHUsYSxvLGY7aWYodD09bnVsbCl7dD1cIlwifXI9XCJcIjtsPWUubGVuZ3RoO3U9bnVsbDtpPTA7cz0wO3doaWxlKHM8bCl7bj1lLmNoYXJBdChzKTtpZihuPT09XCJcXFxcXCIpe3IrPWUuc2xpY2UocywrKHMrMSkrMXx8OWU5KTtzKyt9ZWxzZSBpZihuPT09XCIoXCIpe2lmKHM8bC0yKXtvPWUuc2xpY2UocywrKHMrMikrMXx8OWU5KTtpZihvPT09XCIoPzpcIil7cys9MjtyKz1vfWVsc2UgaWYobz09PVwiKD88XCIpe2krKztzKz0yO2E9XCJcIjt3aGlsZShzKzE8bCl7Zj1lLmNoYXJBdChzKzEpO2lmKGY9PT1cIj5cIil7cis9XCIoXCI7cysrO2lmKGEubGVuZ3RoPjApe2lmKHU9PW51bGwpe3U9e319dVthXT1pfWJyZWFrfWVsc2V7YSs9Zn1zKyt9fWVsc2V7cis9bjtpKyt9fWVsc2V7cis9bn19ZWxzZXtyKz1ufXMrK310aGlzLnJhd1JlZ2V4PWU7dGhpcy5jbGVhbmVkUmVnZXg9cjt0aGlzLnJlZ2V4PW5ldyBSZWdFeHAodGhpcy5jbGVhbmVkUmVnZXgsXCJnXCIrdC5yZXBsYWNlKFwiZ1wiLFwiXCIpKTt0aGlzLm1hcHBpbmc9dX1lLnByb3RvdHlwZS5leGVjPWZ1bmN0aW9uKGUpe3ZhciB0LG4saSxyO3RoaXMucmVnZXgubGFzdEluZGV4PTA7bj10aGlzLnJlZ2V4LmV4ZWMoZSk7aWYobj09bnVsbCl7cmV0dXJuIG51bGx9aWYodGhpcy5tYXBwaW5nIT1udWxsKXtyPXRoaXMubWFwcGluZztmb3IoaSBpbiByKXt0PXJbaV07bltpXT1uW3RdfX1yZXR1cm4gbn07ZS5wcm90b3R5cGUudGVzdD1mdW5jdGlvbihlKXt0aGlzLnJlZ2V4Lmxhc3RJbmRleD0wO3JldHVybiB0aGlzLnJlZ2V4LnRlc3QoZSl9O2UucHJvdG90eXBlLnJlcGxhY2U9ZnVuY3Rpb24oZSx0KXt0aGlzLnJlZ2V4Lmxhc3RJbmRleD0wO3JldHVybiBlLnJlcGxhY2UodGhpcy5yZWdleCx0KX07ZS5wcm90b3R5cGUucmVwbGFjZUFsbD1mdW5jdGlvbihlLHQsbil7dmFyIGk7aWYobj09bnVsbCl7bj0wfXRoaXMucmVnZXgubGFzdEluZGV4PTA7aT0wO3doaWxlKHRoaXMucmVnZXgudGVzdChlKSYmKG49PT0wfHxpPG4pKXt0aGlzLnJlZ2V4Lmxhc3RJbmRleD0wO2U9ZS5yZXBsYWNlKHRoaXMucmVnZXgsdCk7aSsrfXJldHVybltlLGldfTtyZXR1cm4gZX0oKTt0LmV4cG9ydHM9aX0se31dLDk6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxyLHM7cz1lKFwiLi9VdGlsc1wiKTtpPWUoXCIuL1BhdHRlcm5cIik7cj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9ZS5QQVRURVJOX0VTQ0FQRURfQ0hBUkFDVEVSPW5ldyBpKCdcXFxcXFxcXChbMGFidFxcdG52ZnJlIFwiXFxcXC9cXFxcXFxcXE5fTFBdfHhbMC05YS1mQS1GXXsyfXx1WzAtOWEtZkEtRl17NH18VVswLTlhLWZBLUZdezh9KScpO2UudW5lc2NhcGVTaW5nbGVRdW90ZWRTdHJpbmc9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvXFwnXFwnL2csXCInXCIpfTtlLnVuZXNjYXBlRG91YmxlUXVvdGVkU3RyaW5nPWZ1bmN0aW9uKGUpe2lmKHRoaXMuX3VuZXNjYXBlQ2FsbGJhY2s9PW51bGwpe3RoaXMuX3VuZXNjYXBlQ2FsbGJhY2s9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBlLnVuZXNjYXBlQ2hhcmFjdGVyKHQpfX0odGhpcyl9cmV0dXJuIHRoaXMuUEFUVEVSTl9FU0NBUEVEX0NIQVJBQ1RFUi5yZXBsYWNlKGUsdGhpcy5fdW5lc2NhcGVDYWxsYmFjayl9O2UudW5lc2NhcGVDaGFyYWN0ZXI9ZnVuY3Rpb24oZSl7dmFyIHQ7dD1TdHJpbmcuZnJvbUNoYXJDb2RlO3N3aXRjaChlLmNoYXJBdCgxKSl7Y2FzZVwiMFwiOnJldHVybiB0KDApO2Nhc2VcImFcIjpyZXR1cm4gdCg3KTtjYXNlXCJiXCI6cmV0dXJuIHQoOCk7Y2FzZVwidFwiOnJldHVyblwiXFx0XCI7Y2FzZVwiXFx0XCI6cmV0dXJuXCJcXHRcIjtjYXNlXCJuXCI6cmV0dXJuXCJcXG5cIjtjYXNlXCJ2XCI6cmV0dXJuIHQoMTEpO2Nhc2VcImZcIjpyZXR1cm4gdCgxMik7Y2FzZVwiclwiOnJldHVybiB0KDEzKTtjYXNlXCJlXCI6cmV0dXJuIHQoMjcpO2Nhc2VcIiBcIjpyZXR1cm5cIiBcIjtjYXNlJ1wiJzpyZXR1cm4nXCInO2Nhc2VcIi9cIjpyZXR1cm5cIi9cIjtjYXNlXCJcXFxcXCI6cmV0dXJuXCJcXFxcXCI7Y2FzZVwiTlwiOnJldHVybiB0KDEzMyk7Y2FzZVwiX1wiOnJldHVybiB0KDE2MCk7Y2FzZVwiTFwiOnJldHVybiB0KDgyMzIpO2Nhc2VcIlBcIjpyZXR1cm4gdCg4MjMzKTtjYXNlXCJ4XCI6cmV0dXJuIHMudXRmOGNocihzLmhleERlYyhlLnN1YnN0cigyLDIpKSk7Y2FzZVwidVwiOnJldHVybiBzLnV0ZjhjaHIocy5oZXhEZWMoZS5zdWJzdHIoMiw0KSkpO2Nhc2VcIlVcIjpyZXR1cm4gcy51dGY4Y2hyKHMuaGV4RGVjKGUuc3Vic3RyKDIsOCkpKTtkZWZhdWx0OnJldHVyblwiXCJ9fTtyZXR1cm4gZX0oKTt0LmV4cG9ydHM9cn0se1wiLi9QYXR0ZXJuXCI6OCxcIi4vVXRpbHNcIjoxMH1dLDEwOltmdW5jdGlvbihlLHQsbil7dmFyIGkscixzPXt9Lmhhc093blByb3BlcnR5O2k9ZShcIi4vUGF0dGVyblwiKTtyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe310LlJFR0VYX0xFRlRfVFJJTV9CWV9DSEFSPXt9O3QuUkVHRVhfUklHSFRfVFJJTV9CWV9DSEFSPXt9O3QuUkVHRVhfU1BBQ0VTPS9cXHMrL2c7dC5SRUdFWF9ESUdJVFM9L15cXGQrJC87dC5SRUdFWF9PQ1RBTD0vW14wLTddL2dpO3QuUkVHRVhfSEVYQURFQ0lNQUw9L1teYS1mMC05XS9naTt0LlBBVFRFUk5fREFURT1uZXcgaShcIl5cIitcIig/PHllYXI+WzAtOV1bMC05XVswLTldWzAtOV0pXCIrXCItKD88bW9udGg+WzAtOV1bMC05XT8pXCIrXCItKD88ZGF5PlswLTldWzAtOV0/KVwiK1wiKD86KD86W1R0XXxbIFxcdF0rKVwiK1wiKD88aG91cj5bMC05XVswLTldPylcIitcIjooPzxtaW51dGU+WzAtOV1bMC05XSlcIitcIjooPzxzZWNvbmQ+WzAtOV1bMC05XSlcIitcIig/Oi4oPzxmcmFjdGlvbj5bMC05XSopKT9cIitcIig/OlsgXFx0XSooPzx0ej5afCg/PHR6X3NpZ24+Wy0rXSkoPzx0el9ob3VyPlswLTldWzAtOV0/KVwiK1wiKD86Oig/PHR6X21pbnV0ZT5bMC05XVswLTldKSk/KSk/KT9cIitcIiRcIixcImlcIik7dC5MT0NBTF9USU1FWk9ORV9PRkZTRVQ9KG5ldyBEYXRlKS5nZXRUaW1lem9uZU9mZnNldCgpKjYwKjFlMzt0LnRyaW09ZnVuY3Rpb24oZSx0KXt2YXIgbixpO2lmKHQ9PW51bGwpe3Q9XCJcXFxcc1wifW49dGhpcy5SRUdFWF9MRUZUX1RSSU1fQllfQ0hBUlt0XTtpZihuPT1udWxsKXt0aGlzLlJFR0VYX0xFRlRfVFJJTV9CWV9DSEFSW3RdPW49bmV3IFJlZ0V4cChcIl5cIit0K1wiXCIrdCtcIipcIil9bi5sYXN0SW5kZXg9MDtpPXRoaXMuUkVHRVhfUklHSFRfVFJJTV9CWV9DSEFSW3RdO2lmKGk9PW51bGwpe3RoaXMuUkVHRVhfUklHSFRfVFJJTV9CWV9DSEFSW3RdPWk9bmV3IFJlZ0V4cCh0K1wiXCIrdCtcIiokXCIpfWkubGFzdEluZGV4PTA7cmV0dXJuIGUucmVwbGFjZShuLFwiXCIpLnJlcGxhY2UoaSxcIlwiKX07dC5sdHJpbT1mdW5jdGlvbihlLHQpe3ZhciBuO2lmKHQ9PW51bGwpe3Q9XCJcXFxcc1wifW49dGhpcy5SRUdFWF9MRUZUX1RSSU1fQllfQ0hBUlt0XTtpZihuPT1udWxsKXt0aGlzLlJFR0VYX0xFRlRfVFJJTV9CWV9DSEFSW3RdPW49bmV3IFJlZ0V4cChcIl5cIit0K1wiXCIrdCtcIipcIil9bi5sYXN0SW5kZXg9MDtyZXR1cm4gZS5yZXBsYWNlKG4sXCJcIil9O3QucnRyaW09ZnVuY3Rpb24oZSx0KXt2YXIgbjtpZih0PT1udWxsKXt0PVwiXFxcXHNcIn1uPXRoaXMuUkVHRVhfUklHSFRfVFJJTV9CWV9DSEFSW3RdO2lmKG49PW51bGwpe3RoaXMuUkVHRVhfUklHSFRfVFJJTV9CWV9DSEFSW3RdPW49bmV3IFJlZ0V4cCh0K1wiXCIrdCtcIiokXCIpfW4ubGFzdEluZGV4PTA7cmV0dXJuIGUucmVwbGFjZShuLFwiXCIpfTt0LmlzRW1wdHk9ZnVuY3Rpb24oZSl7cmV0dXJuIWV8fGU9PT1cIlwifHxlPT09XCIwXCJ8fGUgaW5zdGFuY2VvZiBBcnJheSYmZS5sZW5ndGg9PT0wfHx0aGlzLmlzRW1wdHlPYmplY3QoZSl9O3QuaXNFbXB0eU9iamVjdD1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gZSBpbnN0YW5jZW9mIE9iamVjdCYmZnVuY3Rpb24oKXt2YXIgbjtuPVtdO2Zvcih0IGluIGUpe2lmKCFzLmNhbGwoZSx0KSljb250aW51ZTtuLnB1c2godCl9cmV0dXJuIG59KCkubGVuZ3RoPT09MH07dC5zdWJTdHJDb3VudD1mdW5jdGlvbihlLHQsbixpKXt2YXIgcixzLGwsdSxhLG87cj0wO2U9XCJcIitlO3Q9XCJcIit0O2lmKG4hPW51bGwpe2U9ZS5zbGljZShuKX1pZihpIT1udWxsKXtlPWUuc2xpY2UoMCxpKX11PWUubGVuZ3RoO289dC5sZW5ndGg7Zm9yKHM9bD0wLGE9dTswPD1hP2w8YTpsPmE7cz0wPD1hPysrbDotLWwpe2lmKHQ9PT1lLnNsaWNlKHMsbykpe3IrKztzKz1vLTF9fXJldHVybiByfTt0LmlzRGlnaXRzPWZ1bmN0aW9uKGUpe3RoaXMuUkVHRVhfRElHSVRTLmxhc3RJbmRleD0wO3JldHVybiB0aGlzLlJFR0VYX0RJR0lUUy50ZXN0KGUpfTt0Lm9jdERlYz1mdW5jdGlvbihlKXt0aGlzLlJFR0VYX09DVEFMLmxhc3RJbmRleD0wO3JldHVybiBwYXJzZUludCgoZStcIlwiKS5yZXBsYWNlKHRoaXMuUkVHRVhfT0NUQUwsXCJcIiksOCl9O3QuaGV4RGVjPWZ1bmN0aW9uKGUpe3RoaXMuUkVHRVhfSEVYQURFQ0lNQUwubGFzdEluZGV4PTA7ZT10aGlzLnRyaW0oZSk7aWYoKGUrXCJcIikuc2xpY2UoMCwyKT09PVwiMHhcIil7ZT0oZStcIlwiKS5zbGljZSgyKX1yZXR1cm4gcGFyc2VJbnQoKGUrXCJcIikucmVwbGFjZSh0aGlzLlJFR0VYX0hFWEFERUNJTUFMLFwiXCIpLDE2KX07dC51dGY4Y2hyPWZ1bmN0aW9uKGUpe3ZhciB0O3Q9U3RyaW5nLmZyb21DaGFyQ29kZTtpZigxMjg+KGUlPTIwOTcxNTIpKXtyZXR1cm4gdChlKX1pZigyMDQ4PmUpe3JldHVybiB0KDE5MnxlPj42KSt0KDEyOHxlJjYzKX1pZig2NTUzNj5lKXtyZXR1cm4gdCgyMjR8ZT4+MTIpK3QoMTI4fGU+PjYmNjMpK3QoMTI4fGUmNjMpfXJldHVybiB0KDI0MHxlPj4xOCkrdCgxMjh8ZT4+MTImNjMpK3QoMTI4fGU+PjYmNjMpK3QoMTI4fGUmNjMpfTt0LnBhcnNlQm9vbGVhbj1mdW5jdGlvbihlLHQpe3ZhciBuO2lmKHQ9PW51bGwpe3Q9dHJ1ZX1pZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe249ZS50b0xvd2VyQ2FzZSgpO2lmKCF0KXtpZihuPT09XCJub1wiKXtyZXR1cm4gZmFsc2V9fWlmKG49PT1cIjBcIil7cmV0dXJuIGZhbHNlfWlmKG49PT1cImZhbHNlXCIpe3JldHVybiBmYWxzZX1pZihuPT09XCJcIil7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfXJldHVybiEhZX07dC5pc051bWVyaWM9ZnVuY3Rpb24oZSl7dGhpcy5SRUdFWF9TUEFDRVMubGFzdEluZGV4PTA7cmV0dXJuIHR5cGVvZiBlPT09XCJudW1iZXJcInx8dHlwZW9mIGU9PT1cInN0cmluZ1wiJiYhaXNOYU4oZSkmJmUucmVwbGFjZSh0aGlzLlJFR0VYX1NQQUNFUyxcIlwiKSE9PVwiXCJ9O3Quc3RyaW5nVG9EYXRlPWZ1bmN0aW9uKGUpe3ZhciB0LG4saSxyLHMsbCx1LGEsbyxmLGMsaDtpZighKGUhPW51bGw/ZS5sZW5ndGg6dm9pZCAwKSl7cmV0dXJuIG51bGx9cz10aGlzLlBBVFRFUk5fREFURS5leGVjKGUpO2lmKCFzKXtyZXR1cm4gbnVsbH1oPXBhcnNlSW50KHMueWVhciwxMCk7dT1wYXJzZUludChzLm1vbnRoLDEwKS0xO249cGFyc2VJbnQocy5kYXksMTApO2lmKHMuaG91cj09bnVsbCl7dD1uZXcgRGF0ZShEYXRlLlVUQyhoLHUsbikpO3JldHVybiB0fXI9cGFyc2VJbnQocy5ob3VyLDEwKTtsPXBhcnNlSW50KHMubWludXRlLDEwKTthPXBhcnNlSW50KHMuc2Vjb25kLDEwKTtpZihzLmZyYWN0aW9uIT1udWxsKXtpPXMuZnJhY3Rpb24uc2xpY2UoMCwzKTt3aGlsZShpLmxlbmd0aDwzKXtpKz1cIjBcIn1pPXBhcnNlSW50KGksMTApfWVsc2V7aT0wfWlmKHMudHohPW51bGwpe289cGFyc2VJbnQocy50el9ob3VyLDEwKTtpZihzLnR6X21pbnV0ZSE9bnVsbCl7Zj1wYXJzZUludChzLnR6X21pbnV0ZSwxMCl9ZWxzZXtmPTB9Yz0obyo2MCtmKSo2ZTQ7aWYoXCItXCI9PT1zLnR6X3NpZ24pe2MqPS0xfX10PW5ldyBEYXRlKERhdGUuVVRDKGgsdSxuLHIsbCxhLGkpKTtpZihjKXt0LnNldFRpbWUodC5nZXRUaW1lKCktYyl9cmV0dXJuIHR9O3Quc3RyUmVwZWF0PWZ1bmN0aW9uKGUsdCl7dmFyIG4saTtpPVwiXCI7bj0wO3doaWxlKG48dCl7aSs9ZTtuKyt9cmV0dXJuIGl9O3QuZ2V0U3RyaW5nRnJvbUZpbGU9ZnVuY3Rpb24odCxuKXt2YXIgaSxyLHMsbCx1LGEsbyxmO2lmKG49PW51bGwpe249bnVsbH1mPW51bGw7aWYodHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCImJndpbmRvdyE9PW51bGwpe2lmKHdpbmRvdy5YTUxIdHRwUmVxdWVzdCl7Zj1uZXcgWE1MSHR0cFJlcXVlc3R9ZWxzZSBpZih3aW5kb3cuQWN0aXZlWE9iamVjdCl7YT1bXCJNc3htbDIuWE1MSFRUUC42LjBcIixcIk1zeG1sMi5YTUxIVFRQLjMuMFwiLFwiTXN4bWwyLlhNTEhUVFBcIixcIk1pY3Jvc29mdC5YTUxIVFRQXCJdO2ZvcihzPTAsbD1hLmxlbmd0aDtzPGw7cysrKXt1PWFbc107dHJ5e2Y9bmV3IEFjdGl2ZVhPYmplY3QodSl9Y2F0Y2goZSl7fX19fWlmKGYhPW51bGwpe2lmKG4hPW51bGwpe2Yub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYoZi5yZWFkeVN0YXRlPT09NCl7aWYoZi5zdGF0dXM9PT0yMDB8fGYuc3RhdHVzPT09MCl7cmV0dXJuIG4oZi5yZXNwb25zZVRleHQpfWVsc2V7cmV0dXJuIG4obnVsbCl9fX07Zi5vcGVuKFwiR0VUXCIsdCx0cnVlKTtyZXR1cm4gZi5zZW5kKG51bGwpfWVsc2V7Zi5vcGVuKFwiR0VUXCIsdCxmYWxzZSk7Zi5zZW5kKG51bGwpO2lmKGYuc3RhdHVzPT09MjAwfHxmLnN0YXR1cz09PTApe3JldHVybiBmLnJlc3BvbnNlVGV4dH1yZXR1cm4gbnVsbH19ZWxzZXtvPWU7cj1vKFwiZnNcIik7aWYobiE9bnVsbCl7cmV0dXJuIHIucmVhZEZpbGUodCxmdW5jdGlvbihlLHQpe2lmKGUpe3JldHVybiBuKG51bGwpfWVsc2V7cmV0dXJuIG4oU3RyaW5nKHQpKX19KX1lbHNle2k9ci5yZWFkRmlsZVN5bmModCk7aWYoaSE9bnVsbCl7cmV0dXJuIFN0cmluZyhpKX1yZXR1cm4gbnVsbH19fTtyZXR1cm4gdH0oKTt0LmV4cG9ydHM9cn0se1wiLi9QYXR0ZXJuXCI6OH1dLDExOltmdW5jdGlvbihlLHQsbil7dmFyIGkscixzLGw7cj1lKFwiLi9QYXJzZXJcIik7aT1lKFwiLi9EdW1wZXJcIik7cz1lKFwiLi9VdGlsc1wiKTtsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31lLnBhcnNlPWZ1bmN0aW9uKGUsdCxuKXtpZih0PT1udWxsKXt0PWZhbHNlfWlmKG49PW51bGwpe249bnVsbH1yZXR1cm4obmV3IHIpLnBhcnNlKGUsdCxuKX07ZS5wYXJzZUZpbGU9ZnVuY3Rpb24oZSx0LG4saSl7dmFyIHI7aWYodD09bnVsbCl7dD1udWxsfWlmKG49PW51bGwpe249ZmFsc2V9aWYoaT09bnVsbCl7aT1udWxsfWlmKHQhPW51bGwpe3JldHVybiBzLmdldFN0cmluZ0Zyb21GaWxlKGUsZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHIpe3ZhciBzO3M9bnVsbDtpZihyIT1udWxsKXtzPWUucGFyc2UocixuLGkpfXQocyl9fSh0aGlzKSl9ZWxzZXtyPXMuZ2V0U3RyaW5nRnJvbUZpbGUoZSk7aWYociE9bnVsbCl7cmV0dXJuIHRoaXMucGFyc2UocixuLGkpfXJldHVybiBudWxsfX07ZS5kdW1wPWZ1bmN0aW9uKGUsdCxuLHIscyl7dmFyIGw7aWYodD09bnVsbCl7dD0yfWlmKG49PW51bGwpe249NH1pZihyPT1udWxsKXtyPWZhbHNlfWlmKHM9PW51bGwpe3M9bnVsbH1sPW5ldyBpO2wuaW5kZW50YXRpb249bjtyZXR1cm4gbC5kdW1wKGUsdCwwLHIscyl9O2Uuc3RyaW5naWZ5PWZ1bmN0aW9uKGUsdCxuLGkscil7cmV0dXJuIHRoaXMuZHVtcChlLHQsbixpLHIpfTtlLmxvYWQ9ZnVuY3Rpb24oZSx0LG4saSl7cmV0dXJuIHRoaXMucGFyc2VGaWxlKGUsdCxuLGkpfTtyZXR1cm4gZX0oKTtpZih0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIiYmd2luZG93IT09bnVsbCl7d2luZG93LllBTUw9bH1pZih0eXBlb2Ygd2luZG93PT09XCJ1bmRlZmluZWRcInx8d2luZG93PT09bnVsbCl7dGhpcy5ZQU1MPWx9dC5leHBvcnRzPWx9LHtcIi4vRHVtcGVyXCI6MSxcIi4vUGFyc2VyXCI6NyxcIi4vVXRpbHNcIjoxMH1dfSx7fSxbMTFdKTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IERhdGFQYXJzZXIgZnJvbSAnLi4vZGF0YS9EYXRhUGFyc2VyJztcbmltcG9ydCBNZXNzYWdlIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9tZXNzYWdlJztcbmltcG9ydCBTd2l0Y2ggZnJvbSAnQGFsaWZlL25leHQvbGliL3N3aXRjaCc7XG5pbXBvcnQgRmllbGQgZnJvbSAnQGFsaWZlL25leHQvbGliL2ZpZWxkJztcbmltcG9ydCBCdXR0b24gZnJvbSAnQGFsaWZlL25leHQvbGliL2J1dHRvbic7XG5pbXBvcnQgRGlhbG9nIGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9kaWFsb2cnO1xuaW1wb3J0IEZvcm0gZnJvbSAnQGFsaWZlL25leHQvbGliL2Zvcm0nO1xuaW1wb3J0IElucHV0IGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9pbnB1dCc7XG5pbXBvcnQgU2VsZWN0IGZyb20gJ0BhbGlmZS9uZXh0L2xpYi9zZWxlY3QnO1xuaW1wb3J0IHV0aWxzIGZyb20gJ3V0aWxzJztcbmltcG9ydCBBUEkgZnJvbSAnYXBpJztcblxubGV0IEhFTFBfVVJMID0gJ2h0dHBzOi8vY290YS5jYWluaWFvLWluYy5jb20vP3NvdXJjZT1hc2ltIy9wYWNraW5nJztcbmlmIChsb2NhdGlvbi5ob3N0LmluZGV4T2YoJ3ByZS0nKSA+IC0xKSB7XG4gIEhFTFBfVVJMID0gJ2h0dHBzOi8vcHJlLWNvdGEuY2Fpbmlhby1pbmMuY29tLz9zb3VyY2U9YXNpbSMvcGFja2luZyc7XG59IGVsc2UgaWYgKGxvY2F0aW9uLmhvc3QuaW5kZXhPZignLnRlc3QnKSA+IC0xKSB7XG4gIEhFTFBfVVJMID0gJ2h0dHBzOi8vY290YS5jYWluaWFvLWluYy50ZXN0Lz9zb3VyY2U9YXNpbSMvcGFja2luZyc7XG59XG5cbmNvbnN0IHRlc3ROYXNhID0gKHN0cikgPT4ge1xuICBsZXQgYXV0b2dvTGlzdCA9IFsnYXV0b2dvX2Z1bGxfdHJhZmZpY19kb2NrZXInLFxuICAgICdhdXRvZ29fZnVsbF9zY2VuYXJpb19kb2NrZXJfbmUnLFxuICAgICdhdXRvZ29fZnVsbF9zY2VuYXJpb19kb2NrZXInXVxuICByZXR1cm4gc3RyICYmIHN0ci5pbmRleE9mKCduYXNhJykgPiAtMSB8fCBhdXRvZ29MaXN0LmluZGV4T2Yoc3RyKSA+IC0xXG59XG5cbmNvbnN0IEZvcm1JdGVtID0gRm9ybS5JdGVtO1xuaW1wb3J0IHtOYXYsIE1lbnV9IGZyb20gJ0BhbGlmZS9uZXh0JztcblxuY29uc3Qge0l0ZW0sIFBvcHVwSXRlbX0gPSBOYXY7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENlbnRlcmJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGZpZWxkID0gbmV3IEZpZWxkKHRoaXMpO1xuICBmaWVsZE1hcCA9IG5ldyBGaWVsZCh0aGlzKTtcbiAgc3RhdGUgPSB7XG4gICAgdGhpbmdzOiBbXSxcbiAgICBlcnJvclZpc2libGU6IGZhbHNlLFxuICAgIGVycm9yTWVzc2FnZTogJycsXG4gICAgY29uZmlnVmlzaWJsZTogZmFsc2UsXG4gICAgbWFwVmlzaWJsZTogZmFsc2UsXG4gICAgYXV0b1NlbGVjdDogdHJ1ZSxcbiAgICBudW1iZXJzOiAxLFxuICAgIGFsZ29UeXBlOiB0cnVlLFxuICAgIG5hc2FUcnVlOiBmYWxzZSxcbiAgICBtYXBTY2VuZXM6IFtdLFxuICAgIHJ1blR5cGVzOiBbXSxcbiAgICBuYXNhRGV2aWNlczogW10sXG4gICAgdXNlckRlZmluZWRWYWx1ZTogZmFsc2UsXG4gICAgbWFwU2NlbmVWYWx1ZTogJycsXG4gICAgYXNpbURvY2tlck5hbWVWYWx1ZTogJycsXG4gICAgZG9ja2Vyc0RlZmF1bHRWYWx1ZTogJycsXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7ZGF0YX0gPSB0aGlzLnByb3BzLmluaXREYXRhO1xuICAgIGxldCB7XG4gICAgICBtYXBTY2VuZSxcbiAgICAgIG1hcElkLFxuICAgICAgZG9ja2VyVmVyc2lvbixcbiAgICAgIGRvY2tlck5hbWVBc2ltLFxuICAgICAgcnVuVHlwZSxcbiAgICAgIG5hc2FFbnYsXG4gICAgICBuYXNhRGV2aWNlLFxuICAgICAgZG9ja2VyTmFtZUlwYyxcbiAgICAgIGRvY2tlck5hbWVQYXIsXG4gICAgfSA9IGRhdGEgfHwge307XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtYXBTY2VuZSxcbiAgICAgIG1hcFNjZW5lVmFsdWU6ICFtYXBTY2VuZSAmJiBtYXBJZCA/ICcwJyA6ICdtYXBTY2VuZScsXG4gICAgICBtYXBJZCxcbiAgICAgIGRvY2tlclZlcnNpb24sXG4gICAgICBhc2ltRG9ja2VyTmFtZVZhbHVlOiBkb2NrZXJOYW1lQXNpbSxcbiAgICAgIHJ1blR5cGUsXG4gICAgICBuYXNhRW52LFxuICAgICAgbmFzYURldmljZSxcbiAgICAgIGRvY2tlck5hbWVJcGMsXG4gICAgICBkb2NrZXJOYW1lUGFyLFxuICAgICAgbmFzYVRydWU6IHRlc3ROYXNhKHJ1blR5cGUpXG4gICAgfSlcbiAgICBpZiAoIW1hcFNjZW5lICYmIG1hcElkKSB7XG4gICAgICB0aGlzLmZpZWxkTWFwLnNldFZhbHVlKCdtYXBJZCcsIGRhdGEubWFwSWQpO1xuICAgIH1cbiAgICAvLyBpZiAoIW1hcFNjZW5lICYmIG1hcElkKSB7XG4gICAgLy8gICB0aGlzLnNldFN0YXRlKHtcbiAgICAvLyAgICAgbWFwSWQ6IG1hcElkLFxuICAgIC8vICAgICBydW5UeXBlOiAnYXV0b2dvX2FkYXNfZG9ja2VyJyxcbiAgICAvLyAgICAgbmFzYURldmljZTogJ05BU0EtQVNJTS0wMDInLFxuICAgIC8vICAgICBtYXBTY2VuZVZhbHVlOiAnMCcsXG4gICAgLy8gICAgIGRvY2tlclZlcnNpb246IGRvY2tlclZlcnNpb24sXG4gICAgLy8gICAgIGFzaW1Eb2NrZXJOYW1lVmFsdWU6IGRvY2tlck5hbWVBc2ltLFxuICAgIC8vICAgICBuYXNhU2VydmVyRW52OiAnZGFpbHknXG4gICAgLy8gICB9KTtcbiAgICAvLyAgIHRoaXMuZmllbGRNYXAuc2V0VmFsdWUoJ21hcElkJywgZGF0YS5tYXBJZCk7XG4gICAgLy8gfSBlbHNlIHtcbiAgICAvLyAgIHRoaXMuc2V0U3RhdGUoe1xuICAgIC8vICAgICBydW5UeXBlOiAnYXV0b2dvX2FkYXNfZG9ja2VyJyxcbiAgICAvLyAgICAgbWFwU2NlbmVWYWx1ZTogbWFwU2NlbmUsXG4gICAgLy8gICAgIGRvY2tlclZlcnNpb246IGRvY2tlclZlcnNpb24sXG4gICAgLy8gICAgIG5hc2FEZXZpY2U6ICdOQVNBLUFTSU0tMDAxJyxcbiAgICAvLyAgICAgYXNpbURvY2tlck5hbWVWYWx1ZTogZG9ja2VyTmFtZUFzaW0sXG4gICAgLy8gICAgIG5hc2FTZXJ2ZXJFbnY6ICdkYWlseSdcbiAgICAvLyAgIH0pO1xuICAgIC8vIH1cbiAgICB0aGlzLmdldERvY2tlck5hbWVJcGNTb3VyY2UoKTtcbiAgICB0aGlzLmdldE1hcFNjZW5lcygpO1xuICB9XG5cbiAgZ2V0UnVuVHlwZXMoKSB7XG4gICAgY29uc3Qge3VybCwgZGF0YX0gPSBBUEkuZ2V0TmV3UnVuVHlwZTtcbiAgICBpZiAodGhpcy5zdGF0ZS5ydW5UeXBlcy5sZW5ndGggIT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdXRpbHMuZ2V0RGF0YSh1cmwsIGRhdGEsIChyZXMpID0+IHtcbiAgICAgIGNvbnN0IGxpc3QgPSBbXTtcbiAgICAgIGNvbnN0IGl0ZW1zID0gcmVzO1xuICAgICAgZm9yIChjb25zdCBrZXkgaW4gaXRlbXMpIHtcbiAgICAgICAgbGlzdC5wdXNoKHtcbiAgICAgICAgICBsYWJlbDogaXRlbXNba2V5XSwgdmFsdWU6IGtleVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBydW5UeXBlczogbGlzdFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBnZXROYXNhRGV2aWNlKCkge1xuICAgIGNvbnN0IHt1cmwsIGRhdGF9ID0gQVBJLmdldE5hc2FEZXZpY2U7XG4gICAgdXRpbHMuZ2V0RGF0YSh1cmwsIGRhdGEsIChyZXMpID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBuYXNhRGV2aWNlczogcmVzLm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBsYWJlbDogaXRlbSwgdmFsdWU6IGl0ZW1cbiAgICAgICAgICB9O1xuICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLnNldFN0YXRlID0gKHN0YXRlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gIH1cblxuICBzYXZlKCkge1xuICAgIGNvbnN0IHlhbWxKc29uID0gRGF0YVBhcnNlci5jb252ZXJ0MnlhbWwoKTtcbiAgICBsZXQgeWFtbCA9IHdpbmRvdy5ZQU1MLnN0cmluZ2lmeSh5YW1sSnNvbiwgNCk7XG4gICAgaWYgKHlhbWwgPT09ICdbXScpIHlhbWwgPSAnJztcbiAgICBjb25zdCB7c2NoZW1hfSA9IHdpbmRvdy5nbG9iYWxTdGF0ZSB8fCB7fVxuICAgIGNvbnN0IHtjYXNlSWQsIG5hbWUsIGFsZ29WZXJzaW9uLCBtYXBWZXJzaW9ufSA9IHNjaGVtYTtcbiAgICBjb25zdCBtYXBJZCA9IG1hcFZlcnNpb247XG4gICAgbGV0IHt1cmwsIGRhdGEsIG1ldGhvZH0gPSBBUEkuY3JlYXRlV29ya3NwYWNlO1xuICAgIE9iamVjdC5hc3NpZ24oZGF0YSwge25hbWUsIG1hcElkLCBjYXNlSWQsIGFsZ29WZXJzaW9ufSk7XG4gICAgZGF0YS5zY2VuYXJpbyA9IHlhbWw7XG4gICAgdXRpbHMuZ2V0RGF0YSh1cmwsIGRhdGEsIChyZXMpID0+IHtcbiAgICAgIGxldCB7Y2FzZUNoZWNrU3VjY2VzcywgY2FzZUNoZWNrTWVzc2FnZX0gPSByZXMgfHwge31cbiAgICAgIGlmIChjYXNlQ2hlY2tTdWNjZXNzKSB7XG4gICAgICAgIE1lc3NhZ2Uuc3VjY2Vzcygn5L+d5a2Y5oiQ5YqfJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBlcnJvck1lc3NhZ2U6ICflpLHotKXvvJonICsgY2FzZUNoZWNrTWVzc2FnZSB8fCAn5L+d5a2Y5aSx6LSlJyxcbiAgICAgICAgICBlcnJvclZpc2libGU6IHRydWVcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9LCAoKSA9PiB7XG4gICAgfSwgbWV0aG9kKVxuICB9XG5cbiAgcGxheSgpIHtcbiAgICBjb25zdCB7d29ya1NwYWNlSWQsIGNhc2VJZH0gPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hO1xuICAgIGlmICghd29ya1NwYWNlSWQpIHtcbiAgICAgIE1lc3NhZ2Uud2FybmluZygn6K+35YWI5pON5L2c5L+d5a2Y77yM5YaN6aKE6KeIJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCB7dXJsLCBkYXRhfSA9IEFQSS5yZWFkO1xuICAgIGRhdGEuY2FzZUlkID0gY2FzZUlkO1xuICAgIHV0aWxzLmdldERhdGEodXJsLCBkYXRhLCAocmVzKSA9PiB7XG4gICAgICB0aGlzLnNldFBsYXlVcmwoT2JqZWN0LmFzc2lnbihyZXMsIHtjYXNlSWQsIHdvcmtTcGFjZUlkfSkpO1xuICAgIH0pXG4gIH1cblxuICBzZXRQbGF5VXJsKGluZm8pIHtcbiAgICBsZXQge1xuICAgICAgd29ya1NwYWNlSWQsXG4gICAgICBjYXNlSWQsXG4gICAgICBydW5UeXBlLFxuICAgICAgbmFzYUVudixcbiAgICAgIG5hc2FEZXZpY2UsXG4gICAgICBkb2NrZXJOYW1lSXBjLFxuICAgICAgZG9ja2VyTmFtZVBhcixcbiAgICAgIGRvY2tlck5hbWVBc2ltLFxuICAgICAgbWFwSWQsXG4gICAgICBwcmV2aWV3TnVtXG4gICAgfSA9IGluZm87XG4gICAgbGV0IHRlYW1JZCA9IHBhcmVudC53aW5kb3cgJiZcbiAgICAgIHBhcmVudC53aW5kb3cuZ2xvYmFsRGF0YSAmJlxuICAgICAgcGFyZW50LndpbmRvdy5nbG9iYWxEYXRhLnRlYW1JZDtcbiAgICAvLyB0ZWFtSWQgPSAxO1xuICAgIGlmICghdGVhbUlkKSB7XG4gICAgICBNZXNzYWdlLmVycm9yKCd0ZWFtSWTkuI3lrZjlnKjvvIzor7fkvb/nlKjmraPnoa7mlrnlvI/ojrflj5Z0ZWFtSWQnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFkb2NrZXJOYW1lQXNpbSkge1xuICAgICAgdGhpcy5jb25maWdWaXNpYmxlID0gdHJ1ZTtcbiAgICAgIC8vIHRoaXMuc2V0U3RhdGUoe2NvbmZpZ1Zpc2libGU6IHRydWV9KTtcbiAgICAgIHRoaXMuY29uZmlnKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIG1hcElkID0gZW5jb2RlVVJJQ29tcG9uZW50KG1hcElkKTtcbiAgICBjb25zdCB3aW4gPSB3aW5kb3cub3BlbignL21hbmFnZS9za3lleWUvc2tpcCcpO1xuICAgIGxldCB7dXJsLCBkYXRhfSA9IEFQSS5wbGF5O1xuICAgIHByZXZpZXdOdW0gPSBwcmV2aWV3TnVtIHx8IDE7XG4gICAgT2JqZWN0LmFzc2lnbihkYXRhLCB7XG4gICAgICB3b3JrU3BhY2VJZCxcbiAgICAgIGNhc2VJZCxcbiAgICAgIGRvY2tlck5hbWVBc2ltLFxuICAgICAgbWFwSWQsXG4gICAgICBwcmV2aWV3TnVtLFxuICAgICAgdGVhbUlkLFxuICAgICAgcnVuVHlwZSxcbiAgICAgIG5hc2FFbnYsXG4gICAgICBuYXNhRGV2aWNlLFxuICAgICAgZG9ja2VyTmFtZUlwYyxcbiAgICAgIGRvY2tlck5hbWVQYXIsXG4gICAgfSk7XG4gICAgdXRpbHMuZ2V0RGF0YSh1cmwsIGRhdGEsIChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMubGVuZ3RoIDwgMSkge1xuICAgICAgICB3aW4uY2xvc2UoKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgY29uc3QgaXBzID0gW10sIHBvcnRzID0gW107XG4gICAgICAvLyDogIPomZHlpJrkuKroioLngrlcbiAgICAgIHJlcy5tYXAoaXRlbSA9PiB7XG4gICAgICAgIGNvbnN0IHtzZXJ2ZXJJbmZvfSA9IGl0ZW07XG4gICAgICAgIGNvbnN0IHNlcnZlckluZm9Gb3JtYXQgPSBzZXJ2ZXJJbmZvICYmIEpTT04ucGFyc2Uoc2VydmVySW5mby5yZXBsYWNlKC8mcXVvdDsvZywgJ1wiJykpO1xuICAgICAgICBjb25zdCB7aXAsIGRvY2tlclBvcnR9ID0gc2VydmVySW5mb0Zvcm1hdCB8fCB7fTtcbiAgICAgICAgaXBzLnB1c2goaXApO1xuICAgICAgICBwb3J0cy5wdXNoKGRvY2tlclBvcnQpO1xuICAgICAgfSlcblxuICAgICAgY29uc3QgaXRlbSA9IHJlc1swXTtcbiAgICAgIGNvbnN0IHt0b2tlbiwgdXRtZElkLCB0YXNrSWQsIG9mZnNldH0gPSBpdGVtIHx8IHt9O1xuICAgICAgY29uc3QgW3gsIHksIHpdID0gb2Zmc2V0O1xuXG4gICAgICBjb25zdCBpbml0U2tpcCA9ICgpID0+IHtcbiAgICAgICAgd2luLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdxdWVyeURhdGEnLCB7XG4gICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICB0b2tlbiwgeCwgeSwgeiwgdGFza0lkLCB1dG1kSWQsXG4gICAgICAgICAgICBpcDogaXBzLmpvaW4oJywnKSxcbiAgICAgICAgICAgIHBvcnQ6IHBvcnRzLmpvaW4oJywnKSxcbiAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICAgIGlmICghd2luLnRhc2tJZCkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBpbml0U2tpcCgpO1xuICAgICAgICB9LCA1MDApO1xuICAgICAgfVxuICAgICAgaW5pdFNraXAoKTtcbiAgICB9LCAoKSA9PiB7XG4gICAgICB3aW4uY2xvc2UoKTtcbiAgICB9LCAnUFVUJylcbiAgfVxuXG4gIHJ1blR5cGVzQ2hhbmdlKGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtuYXNhVHJ1ZTogdGVzdE5hc2EoZSl9KVxuICB9XG5cbiAgc3RhdGljIGRlbGV0ZShlKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLmRpc3BhdGNoRXZlbnQoe1xuICAgICAgdHlwZTogJ2RlbGV0ZVRoaW5nJyxcbiAgICAgIGRhdGE6IGVcbiAgICB9KTtcbiAgfVxuXG4gIHN1Ym1pdENvbmZpZ0RhdGEoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY2FzZUlkLFxuICAgICAgbWFwVmVyc2lvbixcbiAgICAgIG5hbWUsXG4gICAgICBhbGdvVmVyc2lvblxuICAgIH0gPSB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hO1xuICAgIGNvbnN0IG1hcElkID0gbWFwVmVyc2lvbjtcbiAgICB0aGlzLmZpZWxkLnZhbGlkYXRlKChlcnIsIHZhbHVlcykgPT4ge1xuICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgdmFsdWVzLnByZXZpZXdOdW0gPSAxO1xuICAgICAgICBjb25zdCBkb2NrZXJJdGVtcyA9IHZhbHVlcy5kb2NrZXJzLnNwbGl0KCd8LXwnKTtcbiAgICAgICAgdmFsdWVzLmRvY2tlck5hbWVJcGMgPSB2YWx1ZXMuZG9ja2VyTmFtZUlwYyB8fCBkb2NrZXJJdGVtc1sxXTtcbiAgICAgICAgdmFsdWVzLmRvY2tlck5hbWVQYXIgPSB2YWx1ZXMuZG9ja2VyTmFtZVBhciB8fCBkb2NrZXJJdGVtc1syXTtcbiAgICAgICAgdmFsdWVzLmRvY2tlck5hbWVBc2ltID0gdmFsdWVzLmRvY2tlck5hbWVBc2ltIHx8IHZhbHVlcy5kb2NrZXJOYW1lSXBjO1xuICAgICAgICB2YWx1ZXMuZG9ja2VyVmVyc2lvbiA9IGRvY2tlckl0ZW1zWzBdO1xuICAgICAgICBsZXQge3VybCwgZGF0YSwgbWV0aG9kfSA9IEFQSS5jcmVhdGVXb3Jrc3BhY2U7XG4gICAgICAgIGlmICghdGhpcy5zdGF0ZS5uYXNhVHJ1ZSkge1xuICAgICAgICAgIHZhbHVlcy5uYXNhRGV2aWNlID0gJyc7XG4gICAgICAgICAgdmFsdWVzLm5hc2FFbnYgPSAnJztcbiAgICAgICAgfVxuICAgICAgICBPYmplY3QuYXNzaWduKGRhdGEsIHtjYXNlSWQsIG1hcElkLCBuYW1lLCBhbGdvVmVyc2lvbn0sIHZhbHVlcyk7XG4gICAgICAgIHV0aWxzLmdldERhdGEodXJsLCBkYXRhLCAocmVzKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuY29uZmlnVmlzaWJsZSkge1xuICAgICAgICAgICAgdGhpcy5wbGF5KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgY29uZmlnVmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICBhc2ltRG9ja2VyTmFtZVZhbHVlOiB2YWx1ZXMuZG9ja2VyTmFtZUFzaW0sXG4gICAgICAgICAgICBydW5UeXBlOiB2YWx1ZXMucnVuVHlwZSxcbiAgICAgICAgICAgIGRvY2tlck5hbWVJcGM6IHZhbHVlcy5kb2NrZXJOYW1lSXBjLFxuICAgICAgICAgICAgZG9ja2VyTmFtZVBhcjogdmFsdWVzLmRvY2tlck5hbWVQYXIsXG4gICAgICAgICAgICBuYXNhRW52OiB2YWx1ZXMubmFzYUVudixcbiAgICAgICAgICAgIG5hc2FEZXZpY2U6IHZhbHVlcy5uYXNhRGV2aWNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgfSwgbWV0aG9kKVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc3VibWl0TWFwRGF0YSgpIHtcbiAgICBjb25zdCB7Y2FzZUlkLCBuYW1lLCBtYXBWZXJzaW9ufSA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWE7XG4gICAgbGV0IG1hcElkID0gbWFwVmVyc2lvbjtcbiAgICB0aGlzLmZpZWxkTWFwLnZhbGlkYXRlKChlcnIsIHZhbHVlcykgPT4ge1xuICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgaWYgKHZhbHVlcy5tYXBTY2VuZSA9PT0gJzAnKSB7XG4gICAgICAgICAgdmFsdWVzLm1hcFNjZW5lID0gJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbWFwSWQgPSAnJztcbiAgICAgICAgfVxuICAgICAgICBsZXQge3VybCwgZGF0YSwgbWV0aG9kfSA9IEFQSS5hZGRDYXNlO1xuICAgICAgICBPYmplY3QuYXNzaWduKGRhdGEsIHtpZDogY2FzZUlkLCBtYXBJZCwgbmFtZX0sIHZhbHVlcyk7XG4gICAgICAgIHV0aWxzLmdldERhdGEodXJsLCBkYXRhLCAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bWFwVmlzaWJsZTogZmFsc2V9LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmZpZWxkTWFwLnNldFZhbHVlKCdtYXBJZCcsIHZhbHVlcy5tYXBJZCk7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmdldFNjZW5hcmlvKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgfSwgbWV0aG9kKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNvbmZpZygpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGNvbmZpZ1Zpc2libGU6IHRydWVcbiAgICB9KTtcbiAgICB0aGlzLmdldFJ1blR5cGVzKCk7XG4gICAgdGhpcy5nZXROYXNhRGV2aWNlKCk7XG4gIH1cblxuICBjaGFuZ2VUeXBlKGMpIHtcbiAgICBjb25zdCB0eXBlID0gYyA/ICd0cmFuc2xhdGUnIDogJ3JvdGF0ZSc7XG4gICAgY29uc3Qge3RoaW5nQ29udHJvbCwgdGFyZ2V0UG9pbnRDb250b3JsfSA9IHdpbmRvdy5nbG9iYWxTdGF0ZS5jb250cm9scztcbiAgICB0aGluZ0NvbnRyb2wuc2V0TW9kZSh0eXBlKTtcbiAgICB0YXJnZXRQb2ludENvbnRvcmwuc2V0TW9kZSh0eXBlKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHRyYW5zZm9ybUNvbnRyb2xNb2RlOiB0eXBlXG4gICAgfSk7XG4gIH1cblxuICAvLyBjaGFuZ2VMb2NhbChjKSB7XG4gIC8vICAgY29uc3QgdHlwZSA9ICFjID8gJ3dvcmxkJyA6ICdsb2NhbCc7XG4gIC8vICAgd2luZG93Lmdsb2JhbFN0YXRlLmNvbnRyb2xzLnRoaW5nQ29udHJvbC5zZXRTcGFjZSh0eXBlKTtcbiAgLy8gfVxuXG4gIHNldE1hcENvbmZpZ1Zpc2libGUoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBtYXBWaXNpYmxlOiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICBnZXREb2NrZXJOYW1lSXBjU291cmNlKCkge1xuICAgIGNvbnN0IHt1cmwsIGRhdGF9ID0gQVBJLmdldERvY2tlcjtcbiAgICB1dGlscy5nZXREYXRhKHVybCwgZGF0YSwgKHJlcykgPT4ge1xuICAgICAgY29uc3QgbGlzdCA9IFtdO1xuICAgICAgcmVzLm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICBjb25zdCBvYmogPSB7fTtcbiAgICAgICAgb2JqWyd2ZXJzaW9uJ10gPSBpdGVtLnZlcnNpb247XG4gICAgICAgIGl0ZW0uYWdCdWlsZExpc3QubWFwKG9uZSA9PiB7XG4gICAgICAgICAgb2JqW29uZS5wbGF0Zm9ybV0gPSBvbmUuYnVpbGREb2NrZXJWZXJzaW9uO1xuICAgICAgICB9KTtcbiAgICAgICAgbGlzdC5wdXNoKG9iaik7XG4gICAgICB9KTtcbiAgICAgIGxldCBkb2NrZXJzRGVmYXVsdFZhbHVlID0gJydcbiAgICAgIGNvbnN0IGRvY2tlcnMgPSBsaXN0Lm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgbGV0IHZhbHVlID0gaXRlbS52ZXJzaW9uICsgJ3wtfCcgKyBpdGVtWyd4ODYnXSArXG4gICAgICAgICAgJ3wtfCcgKyBpdGVtWydhcm0nXSArICd8LXwnICsgaW5kZXhcbiAgICAgICAgaWYgKGl0ZW0udmVyc2lvbiA9PT0gdGhpcy5zdGF0ZS5kb2NrZXJWZXJzaW9uKSB7XG4gICAgICAgICAgZG9ja2Vyc0RlZmF1bHRWYWx1ZSA9IHZhbHVlXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBsYWJlbDogaXRlbS52ZXJzaW9uLFxuICAgICAgICAgIHZhbHVlXG4gICAgICAgIH07XG4gICAgICB9KSB8fCBbXTtcbiAgICAgIGRvY2tlcnMudW5zaGlmdCh7bGFiZWw6ICfoh6rlrprkuYnplZzlg48nLCB2YWx1ZTogJzAnfSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZG9ja2VycyxcbiAgICAgICAgZG9ja2Vyc0RlZmF1bHRWYWx1ZTogZG9ja2Vyc0RlZmF1bHRWYWx1ZSB8fCAnMCcsXG4gICAgICAgIHNob3dEZWZpbmVEb2NrZXI6ICFkb2NrZXJzRGVmYXVsdFZhbHVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHNlbGVjdERvY2tlckNoYW5nZShlKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaG93RGVmaW5lRG9ja2VyOiBlID09PSAnMCcsXG4gICAgICBkb2NrZXJzRGVmYXVsdFZhbHVlOiBlLFxuICAgICAgZG9ja2VyTmFtZUlwYzonJ1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0TWFwU2NlbmVzKGlkKSB7XG4gICAgbGV0IHt1cmwsIGRhdGF9ID0gQVBJLmdldE1hcFNjZW5lO1xuICAgIHV0aWxzLmdldERhdGEodXJsLCBkYXRhLCAocmVzKSA9PiB7XG4gICAgICBjb25zdCBsaXN0ID0gcmVzLm1hcChpdGVtID0+IHtcbiAgICAgICAgcmV0dXJuIHtsYWJlbDogaXRlbS5tYXBOYW1lLCB2YWx1ZTogaXRlbS5pZH07XG4gICAgICB9KTtcbiAgICAgIGxpc3QucHVzaCh7bGFiZWw6ICfmjIflrprlnLDlm77niYjmnKwnLCB2YWx1ZTogJzAnfSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbWFwU2NlbmVzOiBsaXN0XG4gICAgICB9KTtcbiAgICB9KVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNlbnRlcmJhclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNlbnRlcmJhci1idXR0b25zXCI+XG4gICAgICAgICAgPE5hdiBkaXJlY3Rpb249XCJob3pcIiBhY3RpdmVEaXJlY3Rpb249XCJyaWdodFwiIHR5cGU9XCJwcmltYXJ5XCI+XG4gICAgICAgICAgICA8SXRlbSBrZXk9XCIwXCIgb25DbGljaz17dGhpcy5zZXRNYXBDb25maWdWaXNpYmxlLmJpbmQodGhpcyl9PjxpXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImV0LWljb24gaWNvbi1tYXBcIi8+PHNwYW4+5Zyw5Zu+PC9zcGFuPjwvSXRlbT5cbiAgICAgICAgICAgIDxJdGVtIGtleT1cIjFcIiBvbkNsaWNrPXtDZW50ZXJiYXIuZGVsZXRlLmJpbmQodGhpcyl9PjxpXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5leHQtaWNvbiBuZXh0LWljb24tYXNoYmluIFwiLz48c3Bhbj7liKDpmaQ8L3NwYW4+PC9JdGVtPlxuICAgICAgICAgICAgPEl0ZW0ga2V5PVwiMlwiIG9uQ2xpY2s9e3RoaXMuc2F2ZS5iaW5kKHRoaXMpfT48aSBjbGFzc05hbWU9XCJldC1pY29uIGljb24taWNvbnNldDAyMzdcIi8+XG4gICAgICAgICAgICAgIDxzcGFuPuS/neWtmDwvc3Bhbj48L0l0ZW0+XG4gICAgICAgICAgICA8UG9wdXBJdGVtIGtleT1cIjVcIiBpY29uPVwiZXQtaWNvblwiIGxhYmVsPVwi6L+Q6KGMXCI+XG4gICAgICAgICAgICAgIDxNZW51PlxuICAgICAgICAgICAgICAgIDxNZW51Lkl0ZW0ga2V5PVwiNTFcIiBvbkNsaWNrPXt0aGlzLnBsYXkuYmluZCh0aGlzKX0+5aSp55y85pKt5pS+PC9NZW51Lkl0ZW0+XG4gICAgICAgICAgICAgICAgPE1lbnUuSXRlbSBrZXk9XCI1M1wiIG9uQ2xpY2s9e3RoaXMuY29uZmlnLmJpbmQodGhpcyl9PumFjee9rjwvTWVudS5JdGVtPlxuICAgICAgICAgICAgICA8L01lbnU+XG4gICAgICAgICAgICA8L1BvcHVwSXRlbT5cbiAgICAgICAgICA8L05hdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FzZS1uYW1lXCI+e3dpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEgJiYgd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5uYW1lfTwvZGl2PlxuICAgICAgICA8U3dpdGNoIGNsYXNzTmFtZT1cInN3aXRjaC1jb250cm9sXCIgZGVmYXVsdENoZWNrZWQ9e3RydWV9IGNoZWNrZWRDaGlsZHJlbj1cIuS9jeenu1wiIG9uQ2hhbmdlPXsoYykgPT4ge1xuICAgICAgICAgIHRoaXMuY2hhbmdlVHlwZShjKTtcbiAgICAgICAgfX0gdW5DaGVja2VkQ2hpbGRyZW49XCLml4vovaxcIi8+XG4gICAgICAgIDxEaWFsb2dcbiAgICAgICAgICB0aXRsZT1cIuaSreaUvumFjee9rlwiXG4gICAgICAgICAgc3R5bGU9e3t3aWR0aDogJzQwMHB4J319XG4gICAgICAgICAgdmlzaWJsZT17dGhpcy5zdGF0ZS5jb25maWdWaXNpYmxlfVxuICAgICAgICAgIG9uT2s9e3YgPT4ge1xuICAgICAgICAgICAgdGhpcy5zdWJtaXRDb25maWdEYXRhKCk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkNhbmNlbD17diA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtjb25maWdWaXNpYmxlOiBmYWxzZX0pO1xuICAgICAgICAgIH19XG4gICAgICAgICAgb25DbG9zZT17diA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtjb25maWdWaXNpYmxlOiBmYWxzZX0pO1xuICAgICAgICAgIH19PlxuICAgICAgICAgIDxGb3JtIGxhYmVsQ29sPXt7c3BhbjogNn19IHdyYXBwZXJDb2w9e3tmaXhlZFNwYW46IDEwfX0gZmllbGQ9e3RoaXMuZmllbGR9PlxuICAgICAgICAgICAgPEZvcm1JdGVtXG4gICAgICAgICAgICAgIGxhYmVsPVwi6L+Q6KGM57G75Z6LXCJcbiAgICAgICAgICAgICAgcmVxdWlyZWQ9e3RydWV9XG4gICAgICAgICAgICAgIHJlcXVpcmVkTWVzc2FnZT17J+ivt+mAieaLqei/kOihjOexu+Weiyd9PlxuICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgc3R5bGU9e3t3aWR0aDogJzIxMHB4J319XG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXt0aGlzLnN0YXRlLnJ1blR5cGV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucnVuVHlwZXNDaGFuZ2UuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICBkYXRhU291cmNlPXt0aGlzLnN0YXRlLnJ1blR5cGVzfSBuYW1lPVwicnVuVHlwZVwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgPEZvcm1JdGVtXG4gICAgICAgICAgICAgIGxhYmVsPVwi6ZWc5YOP6YCJ5oupXCJcbiAgICAgICAgICAgICAgcmVxdWlyZWQ9e3RydWV9XG4gICAgICAgICAgICAgIHJlcXVpcmVkTWVzc2FnZT17J+ivt+mAieaLqemVnOWDj+mAieaLqSd9PlxuICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgc3R5bGU9e3t3aWR0aDogJzIxMHB4J319XG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXt0aGlzLnN0YXRlLmRvY2tlcnNEZWZhdWx0VmFsdWV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuc2VsZWN0RG9ja2VyQ2hhbmdlLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgZGF0YVNvdXJjZT17dGhpcy5zdGF0ZS5kb2NrZXJzfSBuYW1lPVwiZG9ja2Vyc1wiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxhIHN0eWxlPXt7bWFyZ2luVG9wOiAxMCwgZGlzcGxheTogJ2Jsb2NrJ319XG4gICAgICAgICAgICAgICAgIGhyZWY9e0hFTFBfVVJMfVxuICAgICAgICAgICAgICAgICB0YXJnZXQ9eydfYmxhbmsnfT7miJHopoHmnoTlu7pkb2NrZXI8L2E+XG4gICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0aGlzLnN0YXRlLnNob3dEZWZpbmVEb2NrZXIgJiZcbiAgICAgICAgICAgICAgPEZvcm1JdGVtXG4gICAgICAgICAgICAgICAgbGFiZWw9XCLku7/nnJ/plZzlg486XCJcbiAgICAgICAgICAgICAgICByZXF1aXJlZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICByZXF1aXJlZE1lc3NhZ2U9eyfku7/nnJ/plZzlg4/kuI3og73kuLrnqbonfT5cbiAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7d2lkdGg6ICcyMDBweCd9fVxuICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXt0aGlzLnN0YXRlLmRvY2tlck5hbWVJcGN9XG4gICAgICAgICAgICAgICAgICBuYW1lPVwiZG9ja2VyTmFtZUlwY1wiLz5cbiAgICAgICAgICAgICAgPC9Gb3JtSXRlbT5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5zaG93RGVmaW5lRG9ja2VyICYmIHRoaXMuc3RhdGUubmFzYVRydWUgJiZcbiAgICAgICAgICAgICAgPEZvcm1JdGVtXG4gICAgICAgICAgICAgICAgbGFiZWw9XCLlubPooYzpqb7pqbbplZzlg49cIlxuICAgICAgICAgICAgICAgIHJlcXVpcmVkPXt0cnVlfVxuICAgICAgICAgICAgICAgIHJlcXVpcmVkTWVzc2FnZT17J+ivt+mAieaLqeW5s+ihjOmpvumptumVnOWDjyd9PlxuICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3t3aWR0aDogJzIxMHB4J319XG4gICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9e3RoaXMuc3RhdGUuZG9ja2VyTmFtZVBhcn1cbiAgICAgICAgICAgICAgICAgIG5hbWU9XCJkb2NrZXJOYW1lUGFyXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0aGlzLnN0YXRlLm5hc2FUcnVlICYmIDxGb3JtSXRlbVxuICAgICAgICAgICAgICAgIGxhYmVsPVwi6L2m6L6G5YiX6KGoXCJcbiAgICAgICAgICAgICAgICByZXF1aXJlZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICByZXF1aXJlZE1lc3NhZ2U9eyfor7fpgInmi6novabovobliJfooagnfT5cbiAgICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiAnMjEwcHgnfX1cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17dGhpcy5zdGF0ZS5uYXNhRGV2aWNlfVxuICAgICAgICAgICAgICAgICAgZGF0YVNvdXJjZT17dGhpcy5zdGF0ZS5uYXNhRGV2aWNlc30gbmFtZT1cIm5hc2FEZXZpY2VcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvRm9ybUl0ZW0+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHRoaXMuc3RhdGUubmFzYVRydWUgJiYgPEZvcm0uSXRlbVxuICAgICAgICAgICAgICAgIGxhYmVsPVwiTkFTQeeOr+Wig1wiIHJlcXVpcmVkPXt0cnVlfVxuICAgICAgICAgICAgICAgIHJlcXVpcmVkTWVzc2FnZT1cIk5BU0Hnjq/looPkuLrlv4XpgInpoblcIj5cbiAgICAgICAgICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiAnMjEwcHgnfX1cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17dGhpcy5zdGF0ZS5uYXNhRW52fVxuICAgICAgICAgICAgICAgICAgbmFtZT1cIm5hc2FFbnZcIiBkYXRhU291cmNlPXtbXG4gICAgICAgICAgICAgICAgICB7bGFiZWw6ICdkYWlseScsIHZhbHVlOiAnZGFpbHknfSxcbiAgICAgICAgICAgICAgICAgIHtsYWJlbDogJ3ByZScsIHZhbHVlOiAncHJlJ30sXG4gICAgICAgICAgICAgICAgICB7bGFiZWw6ICdvbmxpbmUnLCB2YWx1ZTogJ29ubGluZSd9XG4gICAgICAgICAgICAgICAgXX0vPlxuICAgICAgICAgICAgICA8L0Zvcm0uSXRlbT5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L0Zvcm0+XG4gICAgICAgIDwvRGlhbG9nPlxuICAgICAgICA8RGlhbG9nXG4gICAgICAgICAgdGl0bGU9XCLlnLDlm77phY3nva5cIlxuICAgICAgICAgIHN0eWxlPXt7d2lkdGg6ICc0MDBweCd9fVxuICAgICAgICAgIHZpc2libGU9e3RoaXMuc3RhdGUubWFwVmlzaWJsZX1cbiAgICAgICAgICBvbk9rPXt2ID0+IHtcbiAgICAgICAgICAgIHRoaXMuc3VibWl0TWFwRGF0YSgpO1xuICAgICAgICAgIH19XG4gICAgICAgICAgb25DYW5jZWw9e3YgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bWFwVmlzaWJsZTogZmFsc2V9KTtcbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uQ2xvc2U9e3YgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7bWFwVmlzaWJsZTogZmFsc2V9KTtcbiAgICAgICAgICB9fT5cbiAgICAgICAgICA8Rm9ybSBsYWJlbENvbD17e3NwYW46IDZ9fSB3cmFwcGVyQ29sPXt7Zml4ZWRTcGFuOiAxMH19IGZpZWxkPXt0aGlzLmZpZWxkTWFwfT5cbiAgICAgICAgICAgIDxGb3JtSXRlbSBsYWJlbD1cIuWcsOWbvuWQjeensDpcIiByZXF1aXJlZD17dHJ1ZX0gcmVxdWlyZWRNZXNzYWdlPXsn5Zyw5Zu+5ZCN56ewJ30+XG4gICAgICAgICAgICAgIDxTZWxlY3QgbmFtZT1cIm1hcFNjZW5lXCIgZGVmYXVsdFZhbHVlPXt0aGlzLnN0YXRlLm1hcFNjZW5lVmFsdWV9IG9uQ2hhbmdlPXtlID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHttYXBTY2VuZVZhbHVlOiBlfSk7XG4gICAgICAgICAgICAgIH19IGRhdGFTb3VyY2U9e3RoaXMuc3RhdGUubWFwU2NlbmVzfSBzdHlsZT17e3dpZHRoOiAnMjAwcHgnfX0gYXV0b1dpZHRoPXt0cnVlfS8+XG4gICAgICAgICAgICA8L0Zvcm1JdGVtPlxuICAgICAgICAgICAge3RoaXMuc3RhdGUubWFwU2NlbmVWYWx1ZSA9PT0gJzAnID9cbiAgICAgICAgICAgICAgPEZvcm1JdGVtIGxhYmVsPVwi5Zyw5Zu+54mI5pysOlwiIHJlcXVpcmVkPXt0cnVlfSByZXF1aXJlZE1lc3NhZ2U9eyflnLDlm77niYjmnKzkuLrlv4XloavpobknfT5cbiAgICAgICAgICAgICAgICA8SW5wdXQgc3R5bGU9e3t3aWR0aDogJzIwMHB4J319IGRlZmF1bHRWYWx1ZT17dGhpcy5zdGF0ZS5tYXBJZH0gbmFtZT1cIm1hcElkXCIvPlxuICAgICAgICAgICAgICA8L0Zvcm1JdGVtPiA6ICcnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9Gb3JtPlxuICAgICAgICA8L0RpYWxvZz5cbiAgICAgICAgPERpYWxvZ1xuICAgICAgICAgIHRpdGxlPVwi5o+Q56S6XCJcbiAgICAgICAgICBzdHlsZT17e3dpZHRoOiA0MDB9fVxuICAgICAgICAgIHZpc2libGU9e3RoaXMuc3RhdGUuZXJyb3JWaXNpYmxlfVxuICAgICAgICAgIGZvb3Rlcj17PEJ1dHRvbiB0eXBlPVwicHJpbWFyeVwiIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2Vycm9yVmlzaWJsZTogZmFsc2V9KVxuICAgICAgICAgIH19PuaIkeefpemBk+S6hjwvQnV0dG9uPn1cbiAgICAgICAgICBvbkNsb3NlPXsoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtlcnJvclZpc2libGU6IGZhbHNlfSlcbiAgICAgICAgICB9fT5cbiAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvck1lc3NhZ2V9XG4gICAgICAgIDwvRGlhbG9nPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiY29uc3QgVEhSRUUgPSB3aW5kb3cuVEhSRUU7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIaXN0b3J5IGV4dGVuZHMgVEhSRUUuRXZlbnREaXNwYXRjaGVyIHtcbiAgY29uc3RydWN0b3Iod2F0Y2hNYXApIHtcbiAgICBzdXBlcih3YXRjaE1hcCk7XG4gICAgdGhpcy5hZ2VudHMgPSB7fTtcbiAgICB0aGlzLmdvYWxzID0ge307XG4gICAgdGhpcy5yb2xlcyA9IHt9O1xuICAgIHRoaXMubW92ZW1lbnRzID0ge307XG4gICAgdGhpcy5hcHBlcmFuY2VzID0ge307XG4gICAgdGhpcy5wb2ludHMgPSBbXTtcbiAgfVxuXG4gIC8v5re75Yqg54mp5L2TXG4gIGFkZE9iamVjdChkYXRhKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5vYmplY3RzW2RhdGEubmFtZV0gPSBkYXRhO1xuICB9XG5cbiAgLy/liKDpmaTniankvZNcbiAgcmVtb3ZlT2JqZWN0KG5hbWUpIHtcbiAgICBkZWxldGUgd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5vYmplY3RzW25hbWVdO1xuICB9XG5cbiAgbW9kaWZ5T2JqZWN0KGRhdGEpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLm9iamVjdHNbZGF0YS5uYW1lXSA9IGRhdGE7XG4gIH1cblxuICBtb2RpZnlUcmlnZ2VyKGRhdGEpIHtcbiAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLnRyaWdnZXJzW2RhdGEubmFtZV0gPSBkYXRhO1xuICB9XG5cbiAgcmVtb3ZlVHJpZ2dlcihkYXRhKSB7XG4gICAgZGVsZXRlIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEudHJpZ2dlcnNbZGF0YS5uYW1lXTtcbiAgfVxuXG4gIG1vZGlmeUFnZW50U291cmNlKGRhdGEpIHtcbiAgICBpZiAoIXdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEuYWdlbnRTb3VyY2VzKXdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEuYWdlbnRTb3VyY2VzID0ge307XG4gICAgZm9yIChjb25zdCB4IGluIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEuYWdlbnRTb3VyY2VzKSB7XG4gICAgICBpZiAod2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5hZ2VudFNvdXJjZXNbeF0ubmFtZSA9PT0gZGF0YS5uYW1lKSB7XG4gICAgICAgIHdpbmRvdy5nbG9iYWxTdGF0ZS5zY2hlbWEuYWdlbnRTb3VyY2VzW3hdID0gZGF0YTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZW1vdmVBZ2VudFNvdXJjZShkYXRhKSB7XG4gICAgd2luZG93Lmdsb2JhbFN0YXRlLnNjaGVtYS5hZ2VudFNvdXJjZXMgPSBcbiAgICAgICB3aW5kb3cuZ2xvYmFsU3RhdGUuc2NoZW1hLmFnZW50U291cmNlcy5maWx0ZXIoaXRlbSA9PiBpdGVtLm5hbWUgIT09IGRhdGEubmFtZSk7XG4gIH1cblxufSIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9fbGVzcy1sb2FkZXJANC4xLjBAbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5sZXNzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvX3N0eWxlLWxvYWRlckAwLjIwLjNAc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9fbGVzcy1sb2FkZXJANC4xLjBAbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDAuMjguMTFAY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvX2xlc3MtbG9hZGVyQDQuMS4wQGxlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUubGVzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjY3toZWlnaHQ6MTAwJTtmb250LXdlaWdodDpsaWdodGVyO3dpZHRoOjEwMCV9I3dpbmRvdzF7ZGlzcGxheTpub25lfSN3YXRjaEluZm97ZGlzcGxheTpub25lIWltcG9ydGFudH0uY3Jvc3NoYWlye2N1cnNvcjpjcm9zc2hhaXJ9LmNvbnRyb2x7ZGlzcGxheTpub25lIWltcG9ydGFudH0ubS1zdHVkaW97cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjEwMCV9Lm0tc3R1ZGlvIC50b3BiYXJ7d2lkdGg6MTAwJTtoZWlnaHQ6ODBweDtiYWNrZ3JvdW5kOiMxNDFhMjF9Lm0tc3R1ZGlvIC50b3BiYXIgLnRvcGJhci10aXRsZXtjb2xvcjojMDAwO2ZvbnQtd2VpZ2h0OjcwMDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjAgMjRweDtsaW5lLWhlaWdodDo4MHB4O2NvbG9yOiNmZmY7Zm9udC1zdHlsZTppdGFsaWM7Zm9udC1mYW1pbHk6RElOLUJsYWNrSXRhbGljO2ZvbnQtc2l6ZTozNHB4O2JhY2tncm91bmQtY29sb3I6IzI0NjZmZn0ubS1zdHVkaW8gLnRvcGJhciAubWVudXN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDo0MDBweH0ubS1zdHVkaW8gLnRvcGJhciAubWVudXMgLm1lbnUtaXRlbXtjb2xvcjojZmZmO2xpbmUtaGVpZ2h0OjgwcHg7aGVpZ2h0Ojc5cHg7Zm9udC1zaXplOjIwcHg7cGFkZGluZzowIDIwcHg7Zm9udC13ZWlnaHQ6bGlnaHRlcjtkaXNwbGF5OmlubGluZS1ibG9ja30ubS1zdHVkaW8gLnRvcGJhciAubWVudXMgLm1lbnUtaXRlbS5hY3RpdmV7Ym9yZGVyLWJvdHRvbTo0cHggc29saWQ7Ym9yZGVyLWJvdHRvbS1jb2xvcjojMjQ2NmZmO2NvbG9yOiMyNDY2ZmZ9Lm0tc3R1ZGlvIC50b3BiYXIgLm1lbnVzIC5tZW51LWl0ZW0tc3BsaXR7aGVpZ2h0OjIwcHg7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCBoc2xhKDAsMCUsMTAwJSwuMik7ZGlzcGxheTppbmxpbmUtYmxvY2s7bGluZS1oZWlnaHQ6ODBweH0ubS1zdHVkaW8gLm0tc3R1ZGlvLWxheW91dHtkaXNwbGF5OmZsZXg7ZmxleC13cmFwOm5vd3JhcDtoZWlnaHQ6MTAwJX0ubS1zdHVkaW8gLmNlbnRlcmJhcntiYWNrZ3JvdW5kOiMxYTIyMmI7d2lkdGg6MTAwJTtoZWlnaHQ6NDBweDtsaW5lLWhlaWdodDo0MHB4O3otaW5kZXg6MTAyfS5tLXN0dWRpbyAuY2VudGVyYmFyIC5jYXNlLW5hbWV7ZGlzcGxheTppbmxpbmUtYmxvY2s7Y29sb3I6I2ZmZjttYXJnaW46MCBhdXRvO21hcmdpbi1yaWdodDo1MHB4O2Zsb2F0OnJpZ2h0fS5tLXN0dWRpbyAuY2VudGVyYmFyIC5jZW50ZXJiYXItYnV0dG9uc3tmbG9hdDpyaWdodDtsaW5lLWhlaWdodDozOHB4O21hcmdpbi1yaWdodDo0MHB4O2NvbG9yOiNmZmZ9Lm0tc3R1ZGlvIC5jZW50ZXJiYXIgLmNlbnRlcmJhci1idXR0b25zIGJ1dHRvbntjb2xvcjojZmZmO2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjIwcHg7bWFyZ2luLXJpZ2h0OjQwcHh9Lm0tc3R1ZGlvIC5jZW50ZXJiYXIgLmNlbnRlcmJhci1idXR0b25zIGJ1dHRvbiBpe21hcmdpbi1yaWdodDo4cHg7Zm9udC1zaXplOjE3cHh9Lm0tc3R1ZGlvIC5jZW50ZXJiYXIgLmNlbnRlcmJhci1idXR0b25zIGJ1dHRvbjpob3Zlcntjb2xvcjojMjQ2NmZmfS5tLXN0dWRpbyAuY2VudGVyYmFyIC5zd2l0Y2gtY29udHJvbHt3aWR0aDoxMDBweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7bWFyZ2luLWxlZnQ6MjBweDtiYWNrZ3JvdW5kOm5vbmU7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDU1LDU1LDU1LC4yKTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjMpfS5tLXN0dWRpbyAuY2VudGVyYmFyIC5zd2l0Y2gtY29udHJvbDpob3ZlcntiYWNrZ3JvdW5kOm5vbmV9Lm0tc3R1ZGlvIC5sZWZ0YmFye2JhY2tncm91bmQ6IzE0MWEyMTtoZWlnaHQ6MTAwJTt6LWluZGV4OjEwMztkaXNwbGF5OmZsZXh9Lm0tc3R1ZGlvIC5yaWdodGJhcntwb3NpdGlvbjpyZWxhdGl2ZTtmbGV4LXNocmluazowO3dpZHRoOjI0MHB4O2hlaWdodDoxMDAlO2JhY2tncm91bmQ6IzFhMjIyYjt6LWluZGV4OjEwMjt0cmFuc2l0aW9uOndpZHRoIC4zcyBlYXNlO3doaXRlLXNwYWNlOm5vd3JhcH0ubS1zdHVkaW8gLnJpZ2h0YmFyIC5tb3ZlUGFuZWwsLm0tc3R1ZGlvIC5yaWdodGJhciAubmV4dC10YWJzLC5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy1jb250ZW50LC5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy10YWJwYW5le2hlaWdodDoxMDAlfS5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy1idG4tbmV4dCwubS1zdHVkaW8gLnJpZ2h0YmFyIC5uZXh0LXRhYnMtYnRuLXByZXZ7ZGlzcGxheTpub25lfS5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy1uYXYtY29udGFpbmVye3BhZGRpbmctcmlnaHQ6MH0ubS1zdHVkaW8gLnJpZ2h0YmFyIC5uZXh0LXRhYnMtbmF2LWNvbnRhaW5lci1zY3JvbGxpbmd7cGFkZGluZy1yaWdodDpub25lfS5tLXN0dWRpbyAucmlnaHRiYXIgLnRhYmxpc3QgYnV0dG9ue2Rpc3BsYXk6bm9uZX0ubS1zdHVkaW8gLnJpZ2h0YmFyIC5yaWdodC1iYXItaWNvbntwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0zMHB4O3RvcDoxMHB4O2N1cnNvcjpwb2ludGVyO2NvbG9yOiNmZmY7dHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpO3RyYW5zaXRpb246dHJhbnNmb3JtIC41c30ubS1zdHVkaW8gLnJpZ2h0YmFyIC5yaWdodC1iYXItaWNvbjpob3Zlcntjb2xvcjojMjQ2NmZmfS5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy1iYXJ7Y29sb3I6I2ZmZjtib3JkZXI6bm9uZX0ubS1zdHVkaW8gLnJpZ2h0YmFyIC5uZXh0LXRhYnMtYmFyIC5uZXh0LXRhYnMtdGFiLWlubmVye2NvbG9yOiM4YThlOTI7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjMDAwfS5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy1iYXIgLmFjdGl2ZSAubmV4dC10YWJzLXRhYi1pbm5lcntiYWNrZ3JvdW5kOiMzNjNjNDM7Y29sb3I6I2ZmZn0ubS1zdHVkaW8gLnJpZ2h0YmFyIC5uZXh0LXRhYnMtYmFyIC5hY3RpdmUgLm5leHQtdGFicy10YWItaW5uZXI6YmVmb3Jle2JvcmRlcjpub25lfS5tLXN0dWRpbyAucmlnaHRiYXIgLm5leHQtdGFicy1iYXIgLm5leHQtdGFicy1uYXYtd3JhcHtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMDAwfS5tLXN0dWRpbyAucmlnaHRiYXIuc2hyaW5re3dpZHRoOjB9Lm0tc3R1ZGlvIC5yaWdodGJhci5zaHJpbmsgLnJpZ2h0LWJhci1pY29ue3RyYW5zZm9ybTpyb3RhdGUoMGRlZyl9Lm0tc3R1ZGlvIC52aWV3ZXJ7cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZDojZjBmfS5tLXN0dWRpbyAucGFuZWx7aGVpZ2h0OjUwJTt3aWR0aDoxMDAlfS5tLXN0dWRpbyAucGFuZWwgLnBhbmVsLXRpdGxlLWJhcntoZWlnaHQ6MzBweDtiYWNrZ3JvdW5kOiNlYWViZWY7Ym94LXNoYWRvdzowIDEgNXB4IDFweCByZ2JhKDAsMCwwLC4zKX0ubS1zdHVkaW8gLnBhbmVsIC5wYW5lbC10aXRsZS1iYXIgLnBhbmVsLXRpdGxle2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMwMDA7cGFkZGluZy1sZWZ0OjEwcHg7bGluZS1oZWlnaHQ6MzBweDttYXJnaW46MH0ubS1zdHVkaW8gLnBhbmVsIC5wYW5lbC1jb250ZW50e2JhY2tncm91bmQ6I2ZmZjtoZWlnaHQ6MTAwJTtwYWRkaW5nOjEwcHggMDtvdmVyZmxvdy15OmF1dG99Lm0tc3R1ZGlvIC5wYW5lbCAucGFuZWwtY29udGVudCAuc3BsaXRMaW5le3dpZHRoOjEwMCU7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2VmZWZlZn0ubS1zdHVkaW8gLmZ1bmN0aW9uUGFuZWx7d2lkdGg6NjBweDtoZWlnaHQ6MTAwJTtkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kOiMwOTBlMTN9Lm0tc3R1ZGlvIC5mdW5jdGlvblBhbmVsPmRpdntib3JkZXI6bm9uZTtwYWRkaW5nOjE3cHggMjBweDtjb2xvcjojZmZmO2JvcmRlci1ib3R0b206M3B4IHNvbGlkIHRyYW5zcGFyZW50O2N1cnNvcjpwb2ludGVyfS5tLXN0dWRpbyAuZnVuY3Rpb25QYW5lbD5kaXYgaXtmb250LXNpemU6MThweH0ubS1zdHVkaW8gLmZ1bmN0aW9uUGFuZWwgLmFjdGl2ZSwubS1zdHVkaW8gLmZ1bmN0aW9uUGFuZWw+ZGl2OmhvdmVye2JhY2tncm91bmQ6IzE3MWUyNjtjb2xvcjojMjQ2NmZmO2JvcmRlci1ib3R0b206M3B4IHNvbGlkICMyNDY2ZmZ9Lm0tc3R1ZGlvIC5mdW5jdGlvblBhbmVsIC5hY3RpdmUgc3BhbntkaXNwbGF5Om5vbmV9Lm0tc3R1ZGlvIC5zaWRlUGFuZWx7YmFja2dyb3VuZDojMTcxZTI2O2Rpc3BsYXk6ZmxleDt3aWR0aDoyMDBweDtoZWlnaHQ6MTAwJTtvdmVyZmxvdzpoaWRkZW47dHJhbnNpdGlvbjp3aWR0aCAuNXMgZWFzZTtjb2xvcjojZmZmO3BhZGRpbmctYm90dG9tOjc5cHg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO3doaXRlLXNwYWNlOm5vd3JhcH0ubS1zdHVkaW8gLnNpZGVQYW5lbCAuc2lkZS1wYW5lbC10aXRsZXt3aGl0ZS1zcGFjZTpub3dyYXA7Zm9udC1zaXplOjE2cHg7bGluZS1oZWlnaHQ6NjBweDtwYWRkaW5nLWxlZnQ6MTZweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMDAwfS5tLXN0dWRpbyAuc2lkZVBhbmVsIC5zaWRlLWl0ZW17cGFkZGluZzoxMHB4O21hcmdpbjoxMHB4O2JhY2tncm91bmQ6IzJhMzQ0MDt0cmFuc2l0aW9uOmJhY2tncm91bmQgLjJzIGVhc2Utb3V0O2N1cnNvcjpwb2ludGVyO2ZvbnQtc2l6ZToxNnB4O2NvbG9yOmhzbGEoMCwwJSwxMDAlLC4zKTtib3JkZXItcmFkaXVzOjNweH0ubS1zdHVkaW8gLnNpZGVQYW5lbCAuc2lkZS1pdGVtLmFjdGl2ZXtiYWNrZ3JvdW5kOiMzOGY7Y29sb3I6I2ZmZn0ubS1zdHVkaW8gLnJvbGVzUGFuZWx7ZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2V9Lm0tc3R1ZGlvIC5yb2xlc1BhbmVsIC5kcmFnZ2FibGVJdGVte21hcmdpbjo1cHggMjBweDtjdXJzb3I6cG9pbnRlcjtjb2xvcjpoc2xhKDAsMCUsMTAwJSwuMyk7YmFja2dyb3VuZDojMmEzNDQwO2hlaWdodDoxMDBweDtib3JkZXItcmFkaXVzOjVweDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmNlbnRlcn0ubS1zdHVkaW8gLnJvbGVzUGFuZWwgLmRyYWdnYWJsZUl0ZW0gaW1ne3dpZHRoOjEzMHB4O2hlaWdodDo2MHB4O21hcmdpbi10b3A6MTJweDtib3JkZXItcmFkaXVzOjVweDtkaXNwbGF5OmJsb2NrfS5tLXN0dWRpbyAucm9sZXNQYW5lbCAuZHJhZ2dhYmxlSXRlbSBzcGFue21hcmdpbi10b3A6NHB4O2ZvbnQtc2l6ZToxOHB4O2xpbmUtaGVpZ2h0OjIwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9Lm0tc3R1ZGlvIC5yb2xlc1BhbmVsIC5zbGlkZUl0ZW17d2lkdGg6MTAwJTtoZWlnaHQ6NjBweDt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQ6IzFhMjIyYjt0cmFuc2l0aW9uOmhlaWdodCAuNXMgZWFzZTtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMDAwfS5tLXN0dWRpbyAucm9sZXNQYW5lbCAuc2xpZGVJdGVtIC5pdGVtVGl0bGV7Y29sb3I6I2ZmZjtoZWlnaHQ6NTlweDtkaXNwbGF5OmZsZXg7d2hpdGUtc3BhY2U6bm93cmFwO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcn0ubS1zdHVkaW8gLnJvbGVzUGFuZWwgLnNsaWRlSXRlbSAuaXRlbVRpdGxlIHNwYW57d2hpdGUtc3BhY2U6bm93cmFwO2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjYwcHg7cGFkZGluZy1sZWZ0OjE2cHh9Lm0tc3R1ZGlvIC5yb2xlc1BhbmVsIC5zbGlkZUl0ZW0gLml0ZW1UaXRsZSBpe3RyYW5zaXRpb246dHJhbnNmb3JtIC41cyBlYXNlLWluO3RyYW5zZm9ybTpyb3RhdGUoLTkwZGVnKTttYXJnaW4tcmlnaHQ6MjBweDtjb2xvcjojNWY2NDZiO2ZvbnQtc2l6ZToxNHB4fS5tLXN0dWRpbyAucm9sZXNQYW5lbCAuc2xpZGVJdGVtIC5pdGVtQ29udGVudHtvdmVyZmxvdzphdXRvO2hlaWdodDpjYWxjKDEwMCUgLSA2MHB4KTtwYWRkaW5nLXRvcDoyMHB4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0ubS1zdHVkaW8gLnJvbGVzUGFuZWwgLnNsaWRlSXRlbS5hY3RpdmV7Ym9yZGVyLXRvcDpub25lO2hlaWdodDpjYWxjKDEwMCUgLSAxODBweCl9Lm0tc3R1ZGlvIC5yb2xlc1BhbmVsIC5zbGlkZUl0ZW0uYWN0aXZlIC5pdGVtVGl0bGUgaXt0cmFuc2Zvcm06cm90YXRlKDApfS5tLXN0dWRpbyAucm9sZXNQYW5lbCAuc2xpZGVJdGVtLmFjdGl2ZSAuaXRlbUNvbnRlbnR7Ym9yZGVyLXRvcDoxcHggc29saWQgIzAwMH0ubS1zdHVkaW8gLmF0dHJpYnV0ZVBhbmVse3BhZGRpbmc6MjBweDtoZWlnaHQ6Y2FsYygxMDAlIC0gMTIwcHgpO292ZXJmbG93LXk6YXV0b30ubS1zdHVkaW8gLmF0dHJpYnV0ZVBhbmVsPmRpdntwYWRkaW5nOjAgMTBweDttYXJnaW4tYm90dG9tOjEwcHg7Y29sb3I6I2ZmZjtmb250LXNpemU6MTRweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9Lm0tc3R1ZGlvIC5hdHRyaWJ1dGVQYW5lbCBsYWJlbHtjb2xvcjojZmZmfS5tLXN0dWRpbyAuYXR0cmlidXRlUGFuZWwgLnNwZWVkLWl0ZW17cGFkZGluZzowO21hcmdpbjowfS5tLXN0dWRpbyAudHJpZ2dlci1hdHRye3BhZGRpbmc6MjBweH0ubS1zdHVkaW8gLnRyaWdnZXItYXR0ciAudHJpZ2dlci1uYW1le2ZvbnQtc2l6ZToxNnB4O2ZvbnQtd2VpZ2h0OjcwMDtjb2xvcjojZmZmO3BhZGRpbmctYm90dG9tOjEwcHh9Lm0tc3R1ZGlvIC50cmlnZ2VyLWF0dHIgLnRyaWdnZXItYWdlbnRze21hcmdpbi10b3A6MjBweH0ubS1zdHVkaW8gLnRyaWdnZXItYXR0ciAudHJpZ2dlci1hZ2VudHMgZGl2e3BhZGRpbmc6M3B4IDEwcHg7Ym9yZGVyOjFweCBzb2xpZCAjY2NjO2NvbG9yOiNmZmY7bWFyZ2luLXRvcDoxMHB4O2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjthbGlnbi1pdGVtczpjZW50ZXJ9Lm0tc3R1ZGlvIC50cmlnZ2VyLWF0dHIgLnRyaWdnZXItYWdlbnRzIGRpdiAuZGVsZXRlLXRyaWdnZXItYWdlbnR7Zm9udC1zaXplOjE2cHg7Y29sb3I6I2ZmZjtjdXJzb3I6cG9pbnRlcjtwYWRkaW5nOjAgMTBweH0ubS1zdHVkaW8gLnRyaWdnZXItYXR0ciAudHJpZ2dlci10eXBle2NvbG9yOiNlZWV9Lm0tc3R1ZGlvIC50cmlnZ2VyLWF0dHIgLmJpbmRpbmctdHJpZ2dlcnttYXJnaW4tdG9wOjEwcHh9Lm0tc3R1ZGlvIC50cmlnZ2VyLWF0dHIgLmJpbmRpbmctYnV0dG9ue21hcmdpbi1sZWZ0OjEwcHg7YmFja2dyb3VuZC1jb2xvcjojMjQ2NmZmfS5tLXN0dWRpbyAudHJpZ2dlci1hdHRyIC5iaW5kaW5nLmJpbmRpbmctYnV0dG9ue2JhY2tncm91bmQtY29sb3I6IzlhZn0ubS1zdHVkaW8gLnRyaWdnZXJzLWxpc3R7b3ZlcmZsb3cteTphdXRvO3BhZGRpbmc6MTBweDtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2hlaWdodDpjYWxjKDEwMCUgLSAxMjBweCl9Lm0tc3R1ZGlvIC50cmlnZ2Vycy1saXN0IGRpdntwYWRkaW5nOjJweCAxMHB4O2NvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czoycHg7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kIC4ycyBlYXNlLWluO2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjo0cHggNnB4O2JhY2tncm91bmQ6IzE4OTBmZjtjdXJzb3I6cG9pbnRlcn0ubS1zdHVkaW8gLnRyaWdnZXJzLWxpc3QgZGl2LmFjdGl2ZXtiYWNrZ3JvdW5kOiM3Y2ZjMDB9Lm0tc3R1ZGlvIC50cmFmZmljLWF0dHJ7cGFkZGluZzoyMHB4O2hlaWdodDpjYWxjKDEwMCUgLSAxMjBweCk7b3ZlcmZsb3cteTphdXRvfS5tLXN0dWRpbyAubW92ZVBhbmVse21hcmdpbi10b3A6MTJweH0ubS1zdHVkaW8gLm1vdmVQYW5lbCAuc3RhcnRHb2FsQ29uZmlne2hlaWdodDpjYWxjKDEwMCUgLSAzNjBweCl9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtY29udGVudHtoZWlnaHQ6Y2FsYygxMDAlIC0gMzBweCl9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtcG9pbnRze2hlaWdodDpjYWxjKDEwMCUgLSAxNTBweCk7b3ZlcmZsb3c6YXV0b30ubS1zdHVkaW8gLm1vdmVQYW5lbCAuZ29hbC1hbmdsZSBzcGFue2NvbG9yOmhzbGEoMCwwJSwxMDAlLC41KTtwYWRkaW5nLXJpZ2h0OjEwcHh9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLnRvcEJhcntoZWlnaHQ6MTBweH0ubS1zdHVkaW8gLm1vdmVQYW5lbCAuZ29hbC1saXN0e2hlaWdodDoyMjBweDtwYWRkaW5nLWJvdHRvbTozMHB4O292ZXJmbG93LXk6YXV0bztwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICMwMDB9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtbGlzdCB1bHt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEwMCUgLSAzMHB4KTtvdmVyZmxvdy15OmF1dG87cGFkZGluZzowIDEwcHh9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtbGlzdCBsaXt3aWR0aDoxMDAlO2hlaWdodDozMHB4O2JhY2tncm91bmQ6IzRhNTM1ZTtmb250LXNpemU6MTNweDtsaW5lLWhlaWdodDozMHB4O3BhZGRpbmctcmlnaHQ6MTBweDtwYWRkaW5nLWxlZnQ6MTBweDtjdXJzb3I6cG9pbnRlcjttYXJnaW4tYm90dG9tOjEwcHg7Ym9yZGVyLXJhZGl1czo1cHg7ZGlzcGxheTpmbGV4O2NvbG9yOiNmZmY7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kIC4zcyBlYXNlO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS5tLXN0dWRpbyAubW92ZVBhbmVsIC5nb2FsLWxpc3QgbGkgaTpiZWZvcmV7Zm9udC1zaXplOjE0cHh9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtbGlzdCBsaS5hY3RpdmV7YmFja2dyb3VuZDojMjQ2NmZmfS5tLXN0dWRpbyAubW92ZVBhbmVsIC5nb2FsLWNvbnRlbnR7cGFkZGluZzoyMHB4O2NvbG9yOiNmZmY7Zm9udC1zaXplOjE0cHh9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtY29udGVudD5kaXZ7bWFyZ2luLWJvdHRvbToyMHB4fS5tLXN0dWRpbyAubW92ZVBhbmVsIC5nb2FsLWNvbnRlbnQgLnBvc2l0aW9uLWluZm97d2lkdGg6MTAwJX0ubS1zdHVkaW8gLm1vdmVQYW5lbCAuZ29hbC1jb250ZW50IC5wb3NpdGlvbi1pbmZvPmRpdnt3aWR0aDoxMDAlO2JhY2tncm91bmQ6IzE3MWUyNjtjb2xvcjpoc2xhKDAsMCUsMTAwJSwuNSk7Ym9yZGVyOjFweCBzb2xpZCAjMmUzNDNjO3BhZGRpbmc6M3B4IDVweDttYXJnaW4tYm90dG9tOjVweH0ubS1zdHVkaW8gLm1vdmVQYW5lbCAuZ29hbC1jb250ZW50IC5wb3NpdGlvbi1pbmZvPmRpdj5zcGFue2NvbG9yOmhzbGEoMCwwJSwxMDAlLC4zKTtwYWRkaW5nLXJpZ2h0OjEwcHh9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtY29udGVudCAuY2hvb3NlLXBvc2l0aW9ue2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O21hcmdpbi10b3A6MTBweH0ubS1zdHVkaW8gLm1vdmVQYW5lbCAuZ29hbC1jb250ZW50IC5jaG9vc2UtcG9zaXRpb24gaXttYXJnaW4tcmlnaHQ6MTBweH0ubS1zdHVkaW8gLm1vdmVQYW5lbCAuZ29hbC1jb250ZW50IC5mdXp6aW5nLWJ1dHRvbiBidXR0b257d2lkdGg6MTAwJTtoZWlnaHQ6MzZweDtmb250LXNpemU6MTRweDtiYWNrZ3JvdW5kOiMyNDY2ZmZ9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtY29udGVudCAudHlwZS1zZWxlY3R7bWFyZ2luLWJvdHRvbToxMHB4fS5tLXN0dWRpbyAubW92ZVBhbmVsIC5nb2FsLWNvbnRlbnQgLmljb24tYmFyIGl7Y3Vyc29yOnBvaW50ZXJ9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmdvYWwtY29udGVudCAuYWN0aXZlIGJ1dHRvbntiYWNrZ3JvdW5kOiMxYTIyMmI7Y29sb3I6I2ZmZjtib3JkZXItY29sb3I6aHNsYSgwLDAlLDEwMCUsLjEpfS5tLXN0dWRpbyAubW92ZVBhbmVsIC5hZGQtZ29hbC1idXR0b257cG9zaXRpb246YWJzb2x1dGU7Ym90dG9tOjEwcHg7cGFkZGluZzoyMHB4O3dpZHRoOjEwMCV9Lm0tc3R1ZGlvIC5tb3ZlUGFuZWwgLmFkZC1nb2FsLWJ1dHRvbiBidXR0b257d2lkdGg6MTAwJTtiYWNrZ3JvdW5kOiMyNDY2ZmY7aGVpZ2h0OjM1cHg7Zm9udC1zaXplOjE0cHh9Lm0tc3R1ZGlvIC5zcGVlZC1zZWxlY3R7cGFkZGluZzoyMHB4O2hlaWdodDpjYWxjKDEwMCUgLSAyMHB4KTtvdmVyZmxvdy15OmF1dG99Lm0tc3R1ZGlvIC5uZXh0LXJhZGlvLWdyb3VwIC5uZXh0LXJhZGlvLWxhYmVse2NvbG9yOiNmZmZ9Lm5ldy1zY2VuZXt3aWR0aDoxMDAlO2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtiYWNrZ3JvdW5kOiMwMDA7aGVpZ2h0OjEwMCU7ei1pbmRleDoxO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2p1c3RpZnktY29udGVudDpjZW50ZXI7Y29sb3I6I2ZmZn0ubmV3LXNjZW5lIC5zY2VuZS1kZXN7Zm9udC1zaXplOjE4cHg7bWFyZ2luOjIwcHg7Zm9udC13ZWlnaHQ6bGlnaHRlcn0ubmV3LXNjZW5lIC5mb3JtLWFyZWF7aGVpZ2h0OjIwcHg7ZGlzcGxheTpmbGV4O21hcmdpbjowIGF1dG87bWFyZ2luLXRvcDoyMHB4O3RleHQtYWxpZ246Y2VudGVyfS5uZXctc2NlbmUgLmZvcm0tYXJlYSBidXR0b257bWFyZ2luOjEwcHg7cGFkZGluZzowIDMwcHh9LnRoaW5ncy1wYW5lbHtwYWRkaW5nOjIwcHg7aGVpZ2h0OmNhbGMoMTAwJSAtIDExMHB4KX0udGhpbmdzLXBhbmVsIC50aGluZ3MtbGlzdHtvdmVyZmxvdy15OmF1dG87ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtoZWlnaHQ6MTAwJX0udGhpbmdzLXBhbmVsIGxpe3BhZGRpbmc6MnB4IDEwcHg7Y29sb3I6I2ZmZjtib3JkZXItcmFkaXVzOjJweDt0cmFuc2l0aW9uOmJhY2tncm91bmQgLjJzIGVhc2UtaW47ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luOjRweCA2cHg7YmFja2dyb3VuZDojMTg5MGZmO2N1cnNvcjpwb2ludGVyfS50aGluZ3MtcGFuZWwgbGkuYWN0aXZle2JhY2tncm91bmQ6IzdjZmMwMH0uaXRlbS14Z3ttYXJnaW46MjBweDtjdXJzb3I6cG9pbnRlcjtjb2xvcjpoc2xhKDAsMCUsMTAwJSwuMyk7YmFja2dyb3VuZDojMmEzNDQwO2JvcmRlci1yYWRpdXM6NXB4O2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6MTBweH0uaXRlbS14ZyBpbWd7d2lkdGg6YXV0bztoZWlnaHQ6NjBweDtib3JkZXItcmFkaXVzOjVweDtkaXNwbGF5OmJsb2NrfS5pdGVtLXhnIHNwYW57bWFyZ2luLXRvcDo0cHg7Zm9udC1zaXplOjE2cHg7bGluZS1oZWlnaHQ6MjBweDt0ZXh0LWFsaWduOmNlbnRlcn0uZnV6emluZy1udW1iZXJze3BhZGRpbmc6MjBweDtjb2xvcjojZmZmfS5jZW50ZXJiYXItYnV0dG9ucyAubmV4dC1uYXYubmV4dC1ob3p7aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6NDBweH0uY2VudGVyYmFyLWJ1dHRvbnMgLm5leHQtbmF2Lm5leHQtcHJpbWFyeS5uZXh0LWhveiAubmV4dC1tZW51LWl0ZW0taW5uZXJ7aGVpZ2h0OjQwcHh9LmNlbnRlcmJhciAubmV4dC1uYXYubmV4dC1wcmltYXJ5IC5uZXh0LW5hdi1pdGVtLm5leHQtbWVudS1pdGVtLC5uZXh0LW5hdi5uZXh0LXByaW1hcnl7YmFja2dyb3VuZC1jb2xvcjojMWEyMjJiIWltcG9ydGFudH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDAuMjguMTFAY3NzLWxvYWRlci9pbmRleC5qcyEuL2ljb24uY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvX3N0eWxlLWxvYWRlckAwLjIwLjNAc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzIS4vaWNvbi5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvX2Nzcy1sb2FkZXJAMC4yOC4xMUBjc3MtbG9hZGVyL2luZGV4LmpzIS4vaWNvbi5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL19jc3MtbG9hZGVyQDAuMjguMTFAY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiQGZvbnQtZmFjZXtmb250LWZhbWlseTpldC1pY29uO3NyYzp1cmwoXFxcIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfNDkwMDgwXzQ4a2d5emJ6Y2hiLmVvdFxcXCIpO3NyYzp1cmwoXFxcIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfNDkwMDgwXzQ4a2d5emJ6Y2hiLmVvdD8jaWVmaXhcXFwiKSBmb3JtYXQoXFxcImVtYmVkZGVkLW9wZW50eXBlXFxcIiksdXJsKFxcXCIvL2F0LmFsaWNkbi5jb20vdC9mb250XzQ5MDA4MF80OGtneXpiemNoYi53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKSx1cmwoXFxcIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfNDkwMDgwXzQ4a2d5emJ6Y2hiLndvZmZcXFwiKSBmb3JtYXQoXFxcIndvZmZcXFwiKSx1cmwoXFxcIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfNDkwMDgwXzQ4a2d5emJ6Y2hiLnR0ZlxcXCIpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKSx1cmwoXFxcIi8vYXQuYWxpY2RuLmNvbS90L2ZvbnRfNDkwMDgwXzQ4a2d5emJ6Y2hiLnN2ZyNldC1pY29uXFxcIikgZm9ybWF0KFxcXCJzdmdcXFwiKX0uZXQtaWNvbntmb250LWZhbWlseTpldC1pY29uIWltcG9ydGFudDtmb250LXNpemU6MTZweDtmb250LXN0eWxlOm5vcm1hbDstd2Via2l0LWZvbnQtc21vb3RoaW5nOmFudGlhbGlhc2VkOy1tb3otb3N4LWZvbnQtc21vb3RoaW5nOmdyYXlzY2FsZX0uaWNvbi1tYXA6YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXFxFNjdBXFxcIn0uaWNvbi1pY29uc2V0MDIzNzpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2ODhcXFwifS5pY29uLXl1bnhpbmd6aG9uZzpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2MzNcXFwifS5pY29uLXZpZXcxOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTZDMFxcXCJ9Lmljb24tdmlkZW9jYW1lcmE6YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXFxFODg4XFxcIn0uaWNvbi12aWV3OmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTZDMVxcXCJ9Lmljb24taWNvbmZvbnR6aGl6dW9iaWFvemh1bjAyMzE1MDpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2OThcXFwifS5pY29uLWhvbmdmYXFpOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTdEMFxcXCJ9Lmljb24teW91amlhbnRvdS1jb3B5OmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTY5MlxcXCJ9Lmljb24tc2hhbmNodTpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2NkFcXFwifS5pY29uLXp1b2ppYW50b3UyOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTkyM1xcXCJ9Lmljb24tenVvamlhbnRvdTpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2M0FcXFwifS5pY29uLWRhb2x1eW9uZ2R1OmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTYxNlxcXCJ9Lmljb24tY2FvenVvX3h1YW5kaWFuX2Rpbmd3ZWk6YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXFxFNkI1XFxcIn0uaWNvbi13aGVlbDpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2MUFcXFwifS5pY29uLXp1b2ppYW50b3UxOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTYyM1xcXCJ9Lmljb24tY2hlbGlhbmdsZWl4aW5nOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTYxN1xcXCJ9Lmljb24tZGF0YTpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2QTJcXFwifS5pY29uLXR1Y2VuZzpiZWZvcmV7Y29udGVudDpcXFwiXFxcXEU2MDBcXFwifS5pY29uLWt1amlhbGVxaXllemhhbl9tb2h1dHVvemh1YWljaGljdW46YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXFxFNjQ3XFxcIn0uaWNvbi0tamlhb3Rvbmdnb25nanUtOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcRTY3QlxcXCJ9Lm5leHQtbmF2Lm5leHQtcHJpbWFyeSAubmV4dC1uYXYtaXRlbS5uZXh0LW1lbnUtaXRlbXtiYWNrZ3JvdW5kLWNvbG9yOiMzMzMhaW1wb3J0YW50fVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQge01lc3NhZ2V9IGZyb20gJ0BhbGlmZS9uZXh0JztcblxuY29uc3QgZ2V0UmVxdWVzdCA9ICh1cmwpID0+IHtcbiAgdXJsID0gdXJsIHx8IGxvY2F0aW9uLnNlYXJjaDsgLy/ojrflj5Z1cmzkuK1cIj9cIuespuWQjueahOWtl+S4slxuICBjb25zdCB0aGVSZXF1ZXN0ID0ge307XG4gIGlmICh1cmwuaW5kZXhPZignPycpICE9PSAtMSB8fCB1cmwuaW5kZXhPZignIycpICE9PSAtMSkge1xuICAgIGNvbnN0IHN0ciA9IHVybC5zdWJzdHIoMSk7XG4gICAgY29uc3Qgc3RycyA9IHN0ci5zcGxpdCgnJicpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rycy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhlUmVxdWVzdFtzdHJzW2ldLnNwbGl0KCc9JylbMF1dID0gZGVjb2RlVVJJQ29tcG9uZW50KHN0cnNbaV0uc3BsaXQoJz0nKVsxXSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGVSZXF1ZXN0O1xufTtcblxuY29uc3QgZ2V0RGF0YSA9ICh1cmwsIGRhdGEsIGZuLCBlcnJGbiwgbWV0aG9kID0gJ2dldCcpID0+IHtcbiAgY29uc3QgcGFyYW1zID0gbWV0aG9kID09PSAnZ2V0JyA/IGRhdGEgOiB7fTtcbiAgY29uc3QgdGltZW91dCA9IDMwMDAwO1xuICBheGlvcyh7XG4gICAgdXJsLFxuICAgIG1ldGhvZCxcbiAgICBkYXRhLFxuICAgIHBhcmFtcyxcbiAgICB0aW1lb3V0XG4gIH0pLnRoZW4oXG4gICAgKHJlcykgPT4ge1xuICAgICAgY29uc3Qge2RhdGF9ID0gcmVzO1xuICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICBmbiAmJiBmbihkYXRhLmRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXJyRm4gJiYgZXJyRm4oKTtcbiAgICAgICAgTWVzc2FnZS5lcnJvcihkYXRhLm1lc3NhZ2UgfHwgJycpO1xuICAgICAgfVxuICAgIH1cbiAgKS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAvLyBNZXNzYWdlLmVycm9yKCfku7/nnJ/pooTop4jlpLHotKXvvIEnKTtcbiAgICBlcnJGbiAmJiBlcnJGbigpO1xuICAgIGlmIChlcnJvci5yZXNwb25zZSkge1xuICAgICAgLy8g6K+35rGC5bey5Y+R5Ye677yM5L2G5pyN5Yqh5Zmo5ZON5bqU55qE54q25oCB56CB5LiN5ZyoIDJ4eCDojIPlm7TlhoVcbiAgICAgIGNvbnNvbGUud2FybihlcnJvci5yZXNwb25zZS5kYXRhKTtcbiAgICAgIGNvbnNvbGUud2FybihlcnJvci5yZXNwb25zZS5zdGF0dXMpO1xuICAgICAgY29uc29sZS53YXJuKGVycm9yLnJlc3BvbnNlLmhlYWRlcnMpO1xuICAgICAgLy8gY29uc29sZS5sb2coJ3NhdmUnKTtcbiAgICAgIE1lc3NhZ2UuZXJyb3IoJ+ivt+axgumUmeivr++8jOmUmeivr+egge+8micgKyBlcnJvci5yZXNwb25zZS5zdGF0dXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21ldGhpbmcgaGFwcGVuZWQgaW4gc2V0dGluZyB1cCB0aGUgcmVxdWVzdCB0aGF0IHRyaWdnZXJlZCBhbiBFcnJvclxuICAgICAgY29uc29sZS53YXJuKCdFcnJvcicsIGVycm9yLm1lc3NhZ2UpO1xuICAgICAgTWVzc2FnZS5lcnJvcign6K+35rGC6ZSZ6K+vICcgKyBlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH0pO1xufTtcbmNvbnN0IGdldFBhcmFtQnlOYW1lID0gKG5hbWUpID0+IHtcbiAgY29uc3QgcmVnID0gbmV3IFJlZ0V4cCgnKF58JiknICsgbmFtZSArICc9KFteJl0qKSgmfCQpJywgJ2knKTtcbiAgY29uc3QgciA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyKDEpLm1hdGNoKHJlZyk7XG4gIGlmIChyICE9PSBudWxsKSB7XG4gICAgcmV0dXJuIHVuZXNjYXBlKHJbMl0pO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuY29uc3QgZGVjb2RlSFRNTCA9ICh0ZXh0KSA9PiB7XG4gIGxldCB0ZW1wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRlbXAuaW5uZXJIVE1MID0gdGV4dDtcbiAgY29uc3Qgb3V0cHV0ID0gdGVtcC5pbm5lclRleHQgfHwgdGVtcC50ZXh0Q29udGVudDtcbiAgdGVtcCA9IG51bGw7XG4gIHJldHVybiBvdXRwdXQ7XG59O1xuZXhwb3J0IGRlZmF1bHQge1xuICBnZXREYXRhLFxuICBnZXRQYXJhbUJ5TmFtZSxcbiAgZ2V0UmVxdWVzdCxcbiAgZGVjb2RlSFRNTFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=